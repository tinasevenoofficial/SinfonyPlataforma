{"ast":null,"code":"/*!\n * validate.js 0.13.1\n *\n * (c) 2013-2019 Nicklas Ansman, 2013 Wrapp\n * Validate.js may be freely distributed under the MIT license.\n * For all details and documentation:\n * http://validatejs.org/\n */\n\n(function (exports, module, define) {\n  \"use strict\";\n\n  // The main function that calls the validators specified by the constraints.\n  // The options are the following:\n  //   - format (string) - An option that controls how the returned value is formatted\n  //     * flat - Returns a flat array of just the error messages\n  //     * grouped - Returns the messages grouped by attribute (default)\n  //     * detailed - Returns an array of the raw validation data\n  //   - fullMessages (boolean) - If `true` (default) the attribute name is prepended to the error.\n  //\n  // Please note that the options are also passed to each validator.\n  var validate = function (attributes, constraints, options) {\n    options = v.extend({}, v.options, options);\n    var results = v.runValidations(attributes, constraints, options),\n      attr,\n      validator;\n    if (results.some(function (r) {\n      return v.isPromise(r.error);\n    })) {\n      throw new Error(\"Use validate.async if you want support for promises\");\n    }\n    return validate.processValidationResults(results, options);\n  };\n  var v = validate;\n\n  // Copies over attributes from one or more sources to a single destination.\n  // Very much similar to underscore's extend.\n  // The first argument is the target object and the remaining arguments will be\n  // used as sources.\n  v.extend = function (obj) {\n    [].slice.call(arguments, 1).forEach(function (source) {\n      for (var attr in source) {\n        obj[attr] = source[attr];\n      }\n    });\n    return obj;\n  };\n  v.extend(validate, {\n    // This is the version of the library as a semver.\n    // The toString function will allow it to be coerced into a string\n    version: {\n      major: 0,\n      minor: 13,\n      patch: 1,\n      metadata: null,\n      toString: function () {\n        var version = v.format(\"%{major}.%{minor}.%{patch}\", v.version);\n        if (!v.isEmpty(v.version.metadata)) {\n          version += \"+\" + v.version.metadata;\n        }\n        return version;\n      }\n    },\n    // Below is the dependencies that are used in validate.js\n\n    // The constructor of the Promise implementation.\n    // If you are using Q.js, RSVP or any other A+ compatible implementation\n    // override this attribute to be the constructor of that promise.\n    // Since jQuery promises aren't A+ compatible they won't work.\n    Promise: typeof Promise !== \"undefined\" ? Promise : /* istanbul ignore next */null,\n    EMPTY_STRING_REGEXP: /^\\s*$/,\n    // Runs the validators specified by the constraints object.\n    // Will return an array of the format:\n    //     [{attribute: \"<attribute name>\", error: \"<validation result>\"}, ...]\n    runValidations: function (attributes, constraints, options) {\n      var results = [],\n        attr,\n        validatorName,\n        value,\n        validators,\n        validator,\n        validatorOptions,\n        error;\n      if (v.isDomElement(attributes) || v.isJqueryElement(attributes)) {\n        attributes = v.collectFormValues(attributes);\n      }\n\n      // Loops through each constraints, finds the correct validator and run it.\n      for (attr in constraints) {\n        value = v.getDeepObjectValue(attributes, attr);\n        // This allows the constraints for an attribute to be a function.\n        // The function will be called with the value, attribute name, the complete dict of\n        // attributes as well as the options and constraints passed in.\n        // This is useful when you want to have different\n        // validations depending on the attribute value.\n        validators = v.result(constraints[attr], value, attributes, attr, options, constraints);\n        for (validatorName in validators) {\n          validator = v.validators[validatorName];\n          if (!validator) {\n            error = v.format(\"Unknown validator %{name}\", {\n              name: validatorName\n            });\n            throw new Error(error);\n          }\n          validatorOptions = validators[validatorName];\n          // This allows the options to be a function. The function will be\n          // called with the value, attribute name, the complete dict of\n          // attributes as well as the options and constraints passed in.\n          // This is useful when you want to have different\n          // validations depending on the attribute value.\n          validatorOptions = v.result(validatorOptions, value, attributes, attr, options, constraints);\n          if (!validatorOptions) {\n            continue;\n          }\n          results.push({\n            attribute: attr,\n            value: value,\n            validator: validatorName,\n            globalOptions: options,\n            attributes: attributes,\n            options: validatorOptions,\n            error: validator.call(validator, value, validatorOptions, attr, attributes, options)\n          });\n        }\n      }\n      return results;\n    },\n    // Takes the output from runValidations and converts it to the correct\n    // output format.\n    processValidationResults: function (errors, options) {\n      errors = v.pruneEmptyErrors(errors, options);\n      errors = v.expandMultipleErrors(errors, options);\n      errors = v.convertErrorMessages(errors, options);\n      var format = options.format || \"grouped\";\n      if (typeof v.formatters[format] === 'function') {\n        errors = v.formatters[format](errors);\n      } else {\n        throw new Error(v.format(\"Unknown format %{format}\", options));\n      }\n      return v.isEmpty(errors) ? undefined : errors;\n    },\n    // Runs the validations with support for promises.\n    // This function will return a promise that is settled when all the\n    // validation promises have been completed.\n    // It can be called even if no validations returned a promise.\n    async: function (attributes, constraints, options) {\n      options = v.extend({}, v.async.options, options);\n      var WrapErrors = options.wrapErrors || function (errors) {\n        return errors;\n      };\n\n      // Removes unknown attributes\n      if (options.cleanAttributes !== false) {\n        attributes = v.cleanAttributes(attributes, constraints);\n      }\n      var results = v.runValidations(attributes, constraints, options);\n      return new v.Promise(function (resolve, reject) {\n        v.waitForResults(results).then(function () {\n          var errors = v.processValidationResults(results, options);\n          if (errors) {\n            reject(new WrapErrors(errors, options, attributes, constraints));\n          } else {\n            resolve(attributes);\n          }\n        }, function (err) {\n          reject(err);\n        });\n      });\n    },\n    single: function (value, constraints, options) {\n      options = v.extend({}, v.single.options, options, {\n        format: \"flat\",\n        fullMessages: false\n      });\n      return v({\n        single: value\n      }, {\n        single: constraints\n      }, options);\n    },\n    // Returns a promise that is resolved when all promises in the results array\n    // are settled. The promise returned from this function is always resolved,\n    // never rejected.\n    // This function modifies the input argument, it replaces the promises\n    // with the value returned from the promise.\n    waitForResults: function (results) {\n      // Create a sequence of all the results starting with a resolved promise.\n      return results.reduce(function (memo, result) {\n        // If this result isn't a promise skip it in the sequence.\n        if (!v.isPromise(result.error)) {\n          return memo;\n        }\n        return memo.then(function () {\n          return result.error.then(function (error) {\n            result.error = error || null;\n          });\n        });\n      }, new v.Promise(function (r) {\n        r();\n      })); // A resolved promise\n    },\n    // If the given argument is a call: function the and: function return the value\n    // otherwise just return the value. Additional arguments will be passed as\n    // arguments to the function.\n    // Example:\n    // ```\n    // result('foo') // 'foo'\n    // result(Math.max, 1, 2) // 2\n    // ```\n    result: function (value) {\n      var args = [].slice.call(arguments, 1);\n      if (typeof value === 'function') {\n        value = value.apply(null, args);\n      }\n      return value;\n    },\n    // Checks if the value is a number. This function does not consider NaN a\n    // number like many other `isNumber` functions do.\n    isNumber: function (value) {\n      return typeof value === 'number' && !isNaN(value);\n    },\n    // Returns false if the object is not a function\n    isFunction: function (value) {\n      return typeof value === 'function';\n    },\n    // A simple check to verify that the value is an integer. Uses `isNumber`\n    // and a simple modulo check.\n    isInteger: function (value) {\n      return v.isNumber(value) && value % 1 === 0;\n    },\n    // Checks if the value is a boolean\n    isBoolean: function (value) {\n      return typeof value === 'boolean';\n    },\n    // Uses the `Object` function to check if the given argument is an object.\n    isObject: function (obj) {\n      return obj === Object(obj);\n    },\n    // Simply checks if the object is an instance of a date\n    isDate: function (obj) {\n      return obj instanceof Date;\n    },\n    // Returns false if the object is `null` of `undefined`\n    isDefined: function (obj) {\n      return obj !== null && obj !== undefined;\n    },\n    // Checks if the given argument is a promise. Anything with a `then`\n    // function is considered a promise.\n    isPromise: function (p) {\n      return !!p && v.isFunction(p.then);\n    },\n    isJqueryElement: function (o) {\n      return o && v.isString(o.jquery);\n    },\n    isDomElement: function (o) {\n      if (!o) {\n        return false;\n      }\n      if (!o.querySelectorAll || !o.querySelector) {\n        return false;\n      }\n      if (v.isObject(document) && o === document) {\n        return true;\n      }\n\n      // http://stackoverflow.com/a/384380/699304\n      /* istanbul ignore else */\n      if (typeof HTMLElement === \"object\") {\n        return o instanceof HTMLElement;\n      } else {\n        return o && typeof o === \"object\" && o !== null && o.nodeType === 1 && typeof o.nodeName === \"string\";\n      }\n    },\n    isEmpty: function (value) {\n      var attr;\n\n      // Null and undefined are empty\n      if (!v.isDefined(value)) {\n        return true;\n      }\n\n      // functions are non empty\n      if (v.isFunction(value)) {\n        return false;\n      }\n\n      // Whitespace only strings are empty\n      if (v.isString(value)) {\n        return v.EMPTY_STRING_REGEXP.test(value);\n      }\n\n      // For arrays we use the length property\n      if (v.isArray(value)) {\n        return value.length === 0;\n      }\n\n      // Dates have no attributes but aren't empty\n      if (v.isDate(value)) {\n        return false;\n      }\n\n      // If we find at least one property we consider it non empty\n      if (v.isObject(value)) {\n        for (attr in value) {\n          return false;\n        }\n        return true;\n      }\n      return false;\n    },\n    // Formats the specified strings with the given values like so:\n    // ```\n    // format(\"Foo: %{foo}\", {foo: \"bar\"}) // \"Foo bar\"\n    // ```\n    // If you want to write %{...} without having it replaced simply\n    // prefix it with % like this `Foo: %%{foo}` and it will be returned\n    // as `\"Foo: %{foo}\"`\n    format: v.extend(function (str, vals) {\n      if (!v.isString(str)) {\n        return str;\n      }\n      return str.replace(v.format.FORMAT_REGEXP, function (m0, m1, m2) {\n        if (m1 === '%') {\n          return \"%{\" + m2 + \"}\";\n        } else {\n          return String(vals[m2]);\n        }\n      });\n    }, {\n      // Finds %{key} style patterns in the given string\n      FORMAT_REGEXP: /(%?)%\\{([^\\}]+)\\}/g\n    }),\n    // \"Prettifies\" the given string.\n    // Prettifying means replacing [.\\_-] with spaces as well as splitting\n    // camel case words.\n    prettify: function (str) {\n      if (v.isNumber(str)) {\n        // If there are more than 2 decimals round it to two\n        if (str * 100 % 1 === 0) {\n          return \"\" + str;\n        } else {\n          return parseFloat(Math.round(str * 100) / 100).toFixed(2);\n        }\n      }\n      if (v.isArray(str)) {\n        return str.map(function (s) {\n          return v.prettify(s);\n        }).join(\", \");\n      }\n      if (v.isObject(str)) {\n        if (!v.isDefined(str.toString)) {\n          return JSON.stringify(str);\n        }\n        return str.toString();\n      }\n\n      // Ensure the string is actually a string\n      str = \"\" + str;\n      return str\n      // Splits keys separated by periods\n      .replace(/([^\\s])\\.([^\\s])/g, '$1 $2')\n      // Removes backslashes\n      .replace(/\\\\+/g, '')\n      // Replaces - and - with space\n      .replace(/[_-]/g, ' ')\n      // Splits camel cased words\n      .replace(/([a-z])([A-Z])/g, function (m0, m1, m2) {\n        return \"\" + m1 + \" \" + m2.toLowerCase();\n      }).toLowerCase();\n    },\n    stringifyValue: function (value, options) {\n      var prettify = options && options.prettify || v.prettify;\n      return prettify(value);\n    },\n    isString: function (value) {\n      return typeof value === 'string';\n    },\n    isArray: function (value) {\n      return {}.toString.call(value) === '[object Array]';\n    },\n    // Checks if the object is a hash, which is equivalent to an object that\n    // is neither an array nor a function.\n    isHash: function (value) {\n      return v.isObject(value) && !v.isArray(value) && !v.isFunction(value);\n    },\n    contains: function (obj, value) {\n      if (!v.isDefined(obj)) {\n        return false;\n      }\n      if (v.isArray(obj)) {\n        return obj.indexOf(value) !== -1;\n      }\n      return value in obj;\n    },\n    unique: function (array) {\n      if (!v.isArray(array)) {\n        return array;\n      }\n      return array.filter(function (el, index, array) {\n        return array.indexOf(el) == index;\n      });\n    },\n    forEachKeyInKeypath: function (object, keypath, callback) {\n      if (!v.isString(keypath)) {\n        return undefined;\n      }\n      var key = \"\",\n        i,\n        escape = false;\n      for (i = 0; i < keypath.length; ++i) {\n        switch (keypath[i]) {\n          case '.':\n            if (escape) {\n              escape = false;\n              key += '.';\n            } else {\n              object = callback(object, key, false);\n              key = \"\";\n            }\n            break;\n          case '\\\\':\n            if (escape) {\n              escape = false;\n              key += '\\\\';\n            } else {\n              escape = true;\n            }\n            break;\n          default:\n            escape = false;\n            key += keypath[i];\n            break;\n        }\n      }\n      return callback(object, key, true);\n    },\n    getDeepObjectValue: function (obj, keypath) {\n      if (!v.isObject(obj)) {\n        return undefined;\n      }\n      return v.forEachKeyInKeypath(obj, keypath, function (obj, key) {\n        if (v.isObject(obj)) {\n          return obj[key];\n        }\n      });\n    },\n    // This returns an object with all the values of the form.\n    // It uses the input name as key and the value as value\n    // So for example this:\n    // <input type=\"text\" name=\"email\" value=\"foo@bar.com\" />\n    // would return:\n    // {email: \"foo@bar.com\"}\n    collectFormValues: function (form, options) {\n      var values = {},\n        i,\n        j,\n        input,\n        inputs,\n        option,\n        value;\n      if (v.isJqueryElement(form)) {\n        form = form[0];\n      }\n      if (!form) {\n        return values;\n      }\n      options = options || {};\n      inputs = form.querySelectorAll(\"input[name], textarea[name]\");\n      for (i = 0; i < inputs.length; ++i) {\n        input = inputs.item(i);\n        if (v.isDefined(input.getAttribute(\"data-ignored\"))) {\n          continue;\n        }\n        var name = input.name.replace(/\\./g, \"\\\\\\\\.\");\n        value = v.sanitizeFormValue(input.value, options);\n        if (input.type === \"number\") {\n          value = value ? +value : null;\n        } else if (input.type === \"checkbox\") {\n          if (input.attributes.value) {\n            if (!input.checked) {\n              value = values[name] || null;\n            }\n          } else {\n            value = input.checked;\n          }\n        } else if (input.type === \"radio\") {\n          if (!input.checked) {\n            value = values[name] || null;\n          }\n        }\n        values[name] = value;\n      }\n      inputs = form.querySelectorAll(\"select[name]\");\n      for (i = 0; i < inputs.length; ++i) {\n        input = inputs.item(i);\n        if (v.isDefined(input.getAttribute(\"data-ignored\"))) {\n          continue;\n        }\n        if (input.multiple) {\n          value = [];\n          for (j in input.options) {\n            option = input.options[j];\n            if (option && option.selected) {\n              value.push(v.sanitizeFormValue(option.value, options));\n            }\n          }\n        } else {\n          var _val = typeof input.options[input.selectedIndex] !== 'undefined' ? input.options[input.selectedIndex].value : /* istanbul ignore next */'';\n          value = v.sanitizeFormValue(_val, options);\n        }\n        values[input.name] = value;\n      }\n      return values;\n    },\n    sanitizeFormValue: function (value, options) {\n      if (options.trim && v.isString(value)) {\n        value = value.trim();\n      }\n      if (options.nullify !== false && value === \"\") {\n        return null;\n      }\n      return value;\n    },\n    capitalize: function (str) {\n      if (!v.isString(str)) {\n        return str;\n      }\n      return str[0].toUpperCase() + str.slice(1);\n    },\n    // Remove all errors who's error attribute is empty (null or undefined)\n    pruneEmptyErrors: function (errors) {\n      return errors.filter(function (error) {\n        return !v.isEmpty(error.error);\n      });\n    },\n    // In\n    // [{error: [\"err1\", \"err2\"], ...}]\n    // Out\n    // [{error: \"err1\", ...}, {error: \"err2\", ...}]\n    //\n    // All attributes in an error with multiple messages are duplicated\n    // when expanding the errors.\n    expandMultipleErrors: function (errors) {\n      var ret = [];\n      errors.forEach(function (error) {\n        // Removes errors without a message\n        if (v.isArray(error.error)) {\n          error.error.forEach(function (msg) {\n            ret.push(v.extend({}, error, {\n              error: msg\n            }));\n          });\n        } else {\n          ret.push(error);\n        }\n      });\n      return ret;\n    },\n    // Converts the error mesages by prepending the attribute name unless the\n    // message is prefixed by ^\n    convertErrorMessages: function (errors, options) {\n      options = options || {};\n      var ret = [],\n        prettify = options.prettify || v.prettify;\n      errors.forEach(function (errorInfo) {\n        var error = v.result(errorInfo.error, errorInfo.value, errorInfo.attribute, errorInfo.options, errorInfo.attributes, errorInfo.globalOptions);\n        if (!v.isString(error)) {\n          ret.push(errorInfo);\n          return;\n        }\n        if (error[0] === '^') {\n          error = error.slice(1);\n        } else if (options.fullMessages !== false) {\n          error = v.capitalize(prettify(errorInfo.attribute)) + \" \" + error;\n        }\n        error = error.replace(/\\\\\\^/g, \"^\");\n        error = v.format(error, {\n          value: v.stringifyValue(errorInfo.value, options)\n        });\n        ret.push(v.extend({}, errorInfo, {\n          error: error\n        }));\n      });\n      return ret;\n    },\n    // In:\n    // [{attribute: \"<attributeName>\", ...}]\n    // Out:\n    // {\"<attributeName>\": [{attribute: \"<attributeName>\", ...}]}\n    groupErrorsByAttribute: function (errors) {\n      var ret = {};\n      errors.forEach(function (error) {\n        var list = ret[error.attribute];\n        if (list) {\n          list.push(error);\n        } else {\n          ret[error.attribute] = [error];\n        }\n      });\n      return ret;\n    },\n    // In:\n    // [{error: \"<message 1>\", ...}, {error: \"<message 2>\", ...}]\n    // Out:\n    // [\"<message 1>\", \"<message 2>\"]\n    flattenErrorsToArray: function (errors) {\n      return errors.map(function (error) {\n        return error.error;\n      }).filter(function (value, index, self) {\n        return self.indexOf(value) === index;\n      });\n    },\n    cleanAttributes: function (attributes, whitelist) {\n      function whitelistCreator(obj, key, last) {\n        if (v.isObject(obj[key])) {\n          return obj[key];\n        }\n        return obj[key] = last ? true : {};\n      }\n      function buildObjectWhitelist(whitelist) {\n        var ow = {},\n          lastObject,\n          attr;\n        for (attr in whitelist) {\n          if (!whitelist[attr]) {\n            continue;\n          }\n          v.forEachKeyInKeypath(ow, attr, whitelistCreator);\n        }\n        return ow;\n      }\n      function cleanRecursive(attributes, whitelist) {\n        if (!v.isObject(attributes)) {\n          return attributes;\n        }\n        var ret = v.extend({}, attributes),\n          w,\n          attribute;\n        for (attribute in attributes) {\n          w = whitelist[attribute];\n          if (v.isObject(w)) {\n            ret[attribute] = cleanRecursive(ret[attribute], w);\n          } else if (!w) {\n            delete ret[attribute];\n          }\n        }\n        return ret;\n      }\n      if (!v.isObject(whitelist) || !v.isObject(attributes)) {\n        return {};\n      }\n      whitelist = buildObjectWhitelist(whitelist);\n      return cleanRecursive(attributes, whitelist);\n    },\n    exposeModule: function (validate, root, exports, module, define) {\n      if (exports) {\n        if (module && module.exports) {\n          exports = module.exports = validate;\n        }\n        exports.validate = validate;\n      } else {\n        root.validate = validate;\n        if (validate.isFunction(define) && define.amd) {\n          define([], function () {\n            return validate;\n          });\n        }\n      }\n    },\n    warn: function (msg) {\n      if (typeof console !== \"undefined\" && console.warn) {\n        console.warn(\"[validate.js] \" + msg);\n      }\n    },\n    error: function (msg) {\n      if (typeof console !== \"undefined\" && console.error) {\n        console.error(\"[validate.js] \" + msg);\n      }\n    }\n  });\n  validate.validators = {\n    // Presence validates that the value isn't empty\n    presence: function (value, options) {\n      options = v.extend({}, this.options, options);\n      if (options.allowEmpty !== false ? !v.isDefined(value) : v.isEmpty(value)) {\n        return options.message || this.message || \"can't be blank\";\n      }\n    },\n    length: function (value, options, attribute) {\n      // Empty values are allowed\n      if (!v.isDefined(value)) {\n        return;\n      }\n      options = v.extend({}, this.options, options);\n      var is = options.is,\n        maximum = options.maximum,\n        minimum = options.minimum,\n        tokenizer = options.tokenizer || function (val) {\n          return val;\n        },\n        err,\n        errors = [];\n      value = tokenizer(value);\n      var length = value.length;\n      if (!v.isNumber(length)) {\n        return options.message || this.notValid || \"has an incorrect length\";\n      }\n\n      // Is checks\n      if (v.isNumber(is) && length !== is) {\n        err = options.wrongLength || this.wrongLength || \"is the wrong length (should be %{count} characters)\";\n        errors.push(v.format(err, {\n          count: is\n        }));\n      }\n      if (v.isNumber(minimum) && length < minimum) {\n        err = options.tooShort || this.tooShort || \"is too short (minimum is %{count} characters)\";\n        errors.push(v.format(err, {\n          count: minimum\n        }));\n      }\n      if (v.isNumber(maximum) && length > maximum) {\n        err = options.tooLong || this.tooLong || \"is too long (maximum is %{count} characters)\";\n        errors.push(v.format(err, {\n          count: maximum\n        }));\n      }\n      if (errors.length > 0) {\n        return options.message || errors;\n      }\n    },\n    numericality: function (value, options, attribute, attributes, globalOptions) {\n      // Empty values are fine\n      if (!v.isDefined(value)) {\n        return;\n      }\n      options = v.extend({}, this.options, options);\n      var errors = [],\n        name,\n        count,\n        checks = {\n          greaterThan: function (v, c) {\n            return v > c;\n          },\n          greaterThanOrEqualTo: function (v, c) {\n            return v >= c;\n          },\n          equalTo: function (v, c) {\n            return v === c;\n          },\n          lessThan: function (v, c) {\n            return v < c;\n          },\n          lessThanOrEqualTo: function (v, c) {\n            return v <= c;\n          },\n          divisibleBy: function (v, c) {\n            return v % c === 0;\n          }\n        },\n        prettify = options.prettify || globalOptions && globalOptions.prettify || v.prettify;\n\n      // Strict will check that it is a valid looking number\n      if (v.isString(value) && options.strict) {\n        var pattern = \"^-?(0|[1-9]\\\\d*)\";\n        if (!options.onlyInteger) {\n          pattern += \"(\\\\.\\\\d+)?\";\n        }\n        pattern += \"$\";\n        if (!new RegExp(pattern).test(value)) {\n          return options.message || options.notValid || this.notValid || this.message || \"must be a valid number\";\n        }\n      }\n\n      // Coerce the value to a number unless we're being strict.\n      if (options.noStrings !== true && v.isString(value) && !v.isEmpty(value)) {\n        value = +value;\n      }\n\n      // If it's not a number we shouldn't continue since it will compare it.\n      if (!v.isNumber(value)) {\n        return options.message || options.notValid || this.notValid || this.message || \"is not a number\";\n      }\n\n      // Same logic as above, sort of. Don't bother with comparisons if this\n      // doesn't pass.\n      if (options.onlyInteger && !v.isInteger(value)) {\n        return options.message || options.notInteger || this.notInteger || this.message || \"must be an integer\";\n      }\n      for (name in checks) {\n        count = options[name];\n        if (v.isNumber(count) && !checks[name](value, count)) {\n          // This picks the default message if specified\n          // For example the greaterThan check uses the message from\n          // this.notGreaterThan so we capitalize the name and prepend \"not\"\n          var key = \"not\" + v.capitalize(name);\n          var msg = options[key] || this[key] || this.message || \"must be %{type} %{count}\";\n          errors.push(v.format(msg, {\n            count: count,\n            type: prettify(name)\n          }));\n        }\n      }\n      if (options.odd && value % 2 !== 1) {\n        errors.push(options.notOdd || this.notOdd || this.message || \"must be odd\");\n      }\n      if (options.even && value % 2 !== 0) {\n        errors.push(options.notEven || this.notEven || this.message || \"must be even\");\n      }\n      if (errors.length) {\n        return options.message || errors;\n      }\n    },\n    datetime: v.extend(function (value, options) {\n      if (!v.isFunction(this.parse) || !v.isFunction(this.format)) {\n        throw new Error(\"Both the parse and format functions needs to be set to use the datetime/date validator\");\n      }\n\n      // Empty values are fine\n      if (!v.isDefined(value)) {\n        return;\n      }\n      options = v.extend({}, this.options, options);\n      var err,\n        errors = [],\n        earliest = options.earliest ? this.parse(options.earliest, options) : NaN,\n        latest = options.latest ? this.parse(options.latest, options) : NaN;\n      value = this.parse(value, options);\n\n      // 86400000 is the number of milliseconds in a day, this is used to remove\n      // the time from the date\n      if (isNaN(value) || options.dateOnly && value % 86400000 !== 0) {\n        err = options.notValid || options.message || this.notValid || \"must be a valid date\";\n        return v.format(err, {\n          value: arguments[0]\n        });\n      }\n      if (!isNaN(earliest) && value < earliest) {\n        err = options.tooEarly || options.message || this.tooEarly || \"must be no earlier than %{date}\";\n        err = v.format(err, {\n          value: this.format(value, options),\n          date: this.format(earliest, options)\n        });\n        errors.push(err);\n      }\n      if (!isNaN(latest) && value > latest) {\n        err = options.tooLate || options.message || this.tooLate || \"must be no later than %{date}\";\n        err = v.format(err, {\n          date: this.format(latest, options),\n          value: this.format(value, options)\n        });\n        errors.push(err);\n      }\n      if (errors.length) {\n        return v.unique(errors);\n      }\n    }, {\n      parse: null,\n      format: null\n    }),\n    date: function (value, options) {\n      options = v.extend({}, options, {\n        dateOnly: true\n      });\n      return v.validators.datetime.call(v.validators.datetime, value, options);\n    },\n    format: function (value, options) {\n      if (v.isString(options) || options instanceof RegExp) {\n        options = {\n          pattern: options\n        };\n      }\n      options = v.extend({}, this.options, options);\n      var message = options.message || this.message || \"is invalid\",\n        pattern = options.pattern,\n        match;\n\n      // Empty values are allowed\n      if (!v.isDefined(value)) {\n        return;\n      }\n      if (!v.isString(value)) {\n        return message;\n      }\n      if (v.isString(pattern)) {\n        pattern = new RegExp(options.pattern, options.flags);\n      }\n      match = pattern.exec(value);\n      if (!match || match[0].length != value.length) {\n        return message;\n      }\n    },\n    inclusion: function (value, options) {\n      // Empty values are fine\n      if (!v.isDefined(value)) {\n        return;\n      }\n      if (v.isArray(options)) {\n        options = {\n          within: options\n        };\n      }\n      options = v.extend({}, this.options, options);\n      if (v.contains(options.within, value)) {\n        return;\n      }\n      var message = options.message || this.message || \"^%{value} is not included in the list\";\n      return v.format(message, {\n        value: value\n      });\n    },\n    exclusion: function (value, options) {\n      // Empty values are fine\n      if (!v.isDefined(value)) {\n        return;\n      }\n      if (v.isArray(options)) {\n        options = {\n          within: options\n        };\n      }\n      options = v.extend({}, this.options, options);\n      if (!v.contains(options.within, value)) {\n        return;\n      }\n      var message = options.message || this.message || \"^%{value} is restricted\";\n      if (v.isString(options.within[value])) {\n        value = options.within[value];\n      }\n      return v.format(message, {\n        value: value\n      });\n    },\n    email: v.extend(function (value, options) {\n      options = v.extend({}, this.options, options);\n      var message = options.message || this.message || \"is not a valid email\";\n      // Empty values are fine\n      if (!v.isDefined(value)) {\n        return;\n      }\n      if (!v.isString(value)) {\n        return message;\n      }\n      if (!this.PATTERN.exec(value)) {\n        return message;\n      }\n    }, {\n      PATTERN: /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/i\n    }),\n    equality: function (value, options, attribute, attributes, globalOptions) {\n      if (!v.isDefined(value)) {\n        return;\n      }\n      if (v.isString(options)) {\n        options = {\n          attribute: options\n        };\n      }\n      options = v.extend({}, this.options, options);\n      var message = options.message || this.message || \"is not equal to %{attribute}\";\n      if (v.isEmpty(options.attribute) || !v.isString(options.attribute)) {\n        throw new Error(\"The attribute must be a non empty string\");\n      }\n      var otherValue = v.getDeepObjectValue(attributes, options.attribute),\n        comparator = options.comparator || function (v1, v2) {\n          return v1 === v2;\n        },\n        prettify = options.prettify || globalOptions && globalOptions.prettify || v.prettify;\n      if (!comparator(value, otherValue, options, attribute, attributes)) {\n        return v.format(message, {\n          attribute: prettify(options.attribute)\n        });\n      }\n    },\n    // A URL validator that is used to validate URLs with the ability to\n    // restrict schemes and some domains.\n    url: function (value, options) {\n      if (!v.isDefined(value)) {\n        return;\n      }\n      options = v.extend({}, this.options, options);\n      var message = options.message || this.message || \"is not a valid url\",\n        schemes = options.schemes || this.schemes || ['http', 'https'],\n        allowLocal = options.allowLocal || this.allowLocal || false,\n        allowDataUrl = options.allowDataUrl || this.allowDataUrl || false;\n      if (!v.isString(value)) {\n        return message;\n      }\n\n      // https://gist.github.com/dperini/729294\n      var regex = \"^\" +\n      // protocol identifier\n      \"(?:(?:\" + schemes.join(\"|\") + \")://)\" +\n      // user:pass authentication\n      \"(?:\\\\S+(?::\\\\S*)?@)?\" + \"(?:\";\n      var tld = \"(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,}))\";\n      if (allowLocal) {\n        tld += \"?\";\n      } else {\n        regex +=\n        // IP address exclusion\n        // private & local networks\n        \"(?!(?:10|127)(?:\\\\.\\\\d{1,3}){3})\" + \"(?!(?:169\\\\.254|192\\\\.168)(?:\\\\.\\\\d{1,3}){2})\" + \"(?!172\\\\.(?:1[6-9]|2\\\\d|3[0-1])(?:\\\\.\\\\d{1,3}){2})\";\n      }\n      regex +=\n      // IP address dotted notation octets\n      // excludes loopback network 0.0.0.0\n      // excludes reserved space >= 224.0.0.0\n      // excludes network & broacast addresses\n      // (first & last IP address of each class)\n      \"(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])\" + \"(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}\" + \"(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))\" + \"|\" +\n      // host name\n      \"(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)\" +\n      // domain name\n      \"(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*\" + tld + \")\" +\n      // port number\n      \"(?::\\\\d{2,5})?\" +\n      // resource path\n      \"(?:[/?#]\\\\S*)?\" + \"$\";\n      if (allowDataUrl) {\n        // RFC 2397\n        var mediaType = \"\\\\w+\\\\/[-+.\\\\w]+(?:;[\\\\w=]+)*\";\n        var urlchar = \"[A-Za-z0-9-_.!~\\\\*'();\\\\/?:@&=+$,%]*\";\n        var dataurl = \"data:(?:\" + mediaType + \")?(?:;base64)?,\" + urlchar;\n        regex = \"(?:\" + regex + \")|(?:^\" + dataurl + \"$)\";\n      }\n      var PATTERN = new RegExp(regex, 'i');\n      if (!PATTERN.exec(value)) {\n        return message;\n      }\n    },\n    type: v.extend(function (value, originalOptions, attribute, attributes, globalOptions) {\n      if (v.isString(originalOptions)) {\n        originalOptions = {\n          type: originalOptions\n        };\n      }\n      if (!v.isDefined(value)) {\n        return;\n      }\n      var options = v.extend({}, this.options, originalOptions);\n      var type = options.type;\n      if (!v.isDefined(type)) {\n        throw new Error(\"No type was specified\");\n      }\n      var check;\n      if (v.isFunction(type)) {\n        check = type;\n      } else {\n        check = this.types[type];\n      }\n      if (!v.isFunction(check)) {\n        throw new Error(\"validate.validators.type.types.\" + type + \" must be a function.\");\n      }\n      if (!check(value, options, attribute, attributes, globalOptions)) {\n        var message = originalOptions.message || this.messages[type] || this.message || options.message || (v.isFunction(type) ? \"must be of the correct type\" : \"must be of type %{type}\");\n        if (v.isFunction(message)) {\n          message = message(value, originalOptions, attribute, attributes, globalOptions);\n        }\n        return v.format(message, {\n          attribute: v.prettify(attribute),\n          type: type\n        });\n      }\n    }, {\n      types: {\n        object: function (value) {\n          return v.isObject(value) && !v.isArray(value);\n        },\n        array: v.isArray,\n        integer: v.isInteger,\n        number: v.isNumber,\n        string: v.isString,\n        date: v.isDate,\n        boolean: v.isBoolean\n      },\n      messages: {}\n    })\n  };\n  validate.formatters = {\n    detailed: function (errors) {\n      return errors;\n    },\n    flat: v.flattenErrorsToArray,\n    grouped: function (errors) {\n      var attr;\n      errors = v.groupErrorsByAttribute(errors);\n      for (attr in errors) {\n        errors[attr] = v.flattenErrorsToArray(errors[attr]);\n      }\n      return errors;\n    },\n    constraint: function (errors) {\n      var attr;\n      errors = v.groupErrorsByAttribute(errors);\n      for (attr in errors) {\n        errors[attr] = errors[attr].map(function (result) {\n          return result.validator;\n        }).sort();\n      }\n      return errors;\n    }\n  };\n  validate.exposeModule(validate, this, exports, module, define);\n}).call(this, typeof exports !== 'undefined' ? /* istanbul ignore next */exports : null, typeof module !== 'undefined' ? /* istanbul ignore next */module : null, typeof define !== 'undefined' ? /* istanbul ignore next */define : null);","map":{"version":3,"names":["exports","module","define","validate","attributes","constraints","options","v","extend","results","runValidations","attr","validator","some","r","isPromise","error","Error","processValidationResults","obj","slice","call","arguments","forEach","source","version","major","minor","patch","metadata","toString","format","isEmpty","Promise","EMPTY_STRING_REGEXP","validatorName","value","validators","validatorOptions","isDomElement","isJqueryElement","collectFormValues","getDeepObjectValue","result","name","push","attribute","globalOptions","errors","pruneEmptyErrors","expandMultipleErrors","convertErrorMessages","formatters","undefined","async","WrapErrors","wrapErrors","cleanAttributes","resolve","reject","waitForResults","then","err","single","fullMessages","reduce","memo","args","apply","isNumber","isNaN","isFunction","isInteger","isBoolean","isObject","Object","isDate","Date","isDefined","p","o","isString","jquery","querySelectorAll","querySelector","document","HTMLElement","nodeType","nodeName","test","isArray","length","str","vals","replace","FORMAT_REGEXP","m0","m1","m2","String","prettify","parseFloat","Math","round","toFixed","map","s","join","JSON","stringify","toLowerCase","stringifyValue","isHash","contains","indexOf","unique","array","filter","el","index","forEachKeyInKeypath","object","keypath","callback","key","i","escape","form","values","j","input","inputs","option","item","getAttribute","sanitizeFormValue","type","checked","multiple","selected","_val","selectedIndex","trim","nullify","capitalize","toUpperCase","ret","msg","errorInfo","groupErrorsByAttribute","list","flattenErrorsToArray","self","whitelist","whitelistCreator","last","buildObjectWhitelist","ow","lastObject","cleanRecursive","w","exposeModule","root","amd","warn","console","presence","allowEmpty","message","is","maximum","minimum","tokenizer","val","notValid","wrongLength","count","tooShort","tooLong","numericality","checks","greaterThan","c","greaterThanOrEqualTo","equalTo","lessThan","lessThanOrEqualTo","divisibleBy","strict","pattern","onlyInteger","RegExp","noStrings","notInteger","odd","notOdd","even","notEven","datetime","parse","earliest","NaN","latest","dateOnly","tooEarly","date","tooLate","match","flags","exec","inclusion","within","exclusion","email","PATTERN","equality","otherValue","comparator","v1","v2","url","schemes","allowLocal","allowDataUrl","regex","tld","mediaType","urlchar","dataurl","originalOptions","check","types","messages","integer","number","string","boolean","detailed","flat","grouped","constraint","sort"],"sources":["C:/Users/HUAWEI/Documents/GitHub/SinfonyPlataforma/node_modules/validate.js/validate.js"],"sourcesContent":["/*!\n * validate.js 0.13.1\n *\n * (c) 2013-2019 Nicklas Ansman, 2013 Wrapp\n * Validate.js may be freely distributed under the MIT license.\n * For all details and documentation:\n * http://validatejs.org/\n */\n\n(function(exports, module, define) {\n  \"use strict\";\n\n  // The main function that calls the validators specified by the constraints.\n  // The options are the following:\n  //   - format (string) - An option that controls how the returned value is formatted\n  //     * flat - Returns a flat array of just the error messages\n  //     * grouped - Returns the messages grouped by attribute (default)\n  //     * detailed - Returns an array of the raw validation data\n  //   - fullMessages (boolean) - If `true` (default) the attribute name is prepended to the error.\n  //\n  // Please note that the options are also passed to each validator.\n  var validate = function(attributes, constraints, options) {\n    options = v.extend({}, v.options, options);\n\n    var results = v.runValidations(attributes, constraints, options)\n      , attr\n      , validator;\n\n    if (results.some(function(r) { return v.isPromise(r.error); })) {\n      throw new Error(\"Use validate.async if you want support for promises\");\n    }\n    return validate.processValidationResults(results, options);\n  };\n\n  var v = validate;\n\n  // Copies over attributes from one or more sources to a single destination.\n  // Very much similar to underscore's extend.\n  // The first argument is the target object and the remaining arguments will be\n  // used as sources.\n  v.extend = function(obj) {\n    [].slice.call(arguments, 1).forEach(function(source) {\n      for (var attr in source) {\n        obj[attr] = source[attr];\n      }\n    });\n    return obj;\n  };\n\n  v.extend(validate, {\n    // This is the version of the library as a semver.\n    // The toString function will allow it to be coerced into a string\n    version: {\n      major: 0,\n      minor: 13,\n      patch: 1,\n      metadata: null,\n      toString: function() {\n        var version = v.format(\"%{major}.%{minor}.%{patch}\", v.version);\n        if (!v.isEmpty(v.version.metadata)) {\n          version += \"+\" + v.version.metadata;\n        }\n        return version;\n      }\n    },\n\n    // Below is the dependencies that are used in validate.js\n\n    // The constructor of the Promise implementation.\n    // If you are using Q.js, RSVP or any other A+ compatible implementation\n    // override this attribute to be the constructor of that promise.\n    // Since jQuery promises aren't A+ compatible they won't work.\n    Promise: typeof Promise !== \"undefined\" ? Promise : /* istanbul ignore next */ null,\n\n    EMPTY_STRING_REGEXP: /^\\s*$/,\n\n    // Runs the validators specified by the constraints object.\n    // Will return an array of the format:\n    //     [{attribute: \"<attribute name>\", error: \"<validation result>\"}, ...]\n    runValidations: function(attributes, constraints, options) {\n      var results = []\n        , attr\n        , validatorName\n        , value\n        , validators\n        , validator\n        , validatorOptions\n        , error;\n\n      if (v.isDomElement(attributes) || v.isJqueryElement(attributes)) {\n        attributes = v.collectFormValues(attributes);\n      }\n\n      // Loops through each constraints, finds the correct validator and run it.\n      for (attr in constraints) {\n        value = v.getDeepObjectValue(attributes, attr);\n        // This allows the constraints for an attribute to be a function.\n        // The function will be called with the value, attribute name, the complete dict of\n        // attributes as well as the options and constraints passed in.\n        // This is useful when you want to have different\n        // validations depending on the attribute value.\n        validators = v.result(constraints[attr], value, attributes, attr, options, constraints);\n\n        for (validatorName in validators) {\n          validator = v.validators[validatorName];\n\n          if (!validator) {\n            error = v.format(\"Unknown validator %{name}\", {name: validatorName});\n            throw new Error(error);\n          }\n\n          validatorOptions = validators[validatorName];\n          // This allows the options to be a function. The function will be\n          // called with the value, attribute name, the complete dict of\n          // attributes as well as the options and constraints passed in.\n          // This is useful when you want to have different\n          // validations depending on the attribute value.\n          validatorOptions = v.result(validatorOptions, value, attributes, attr, options, constraints);\n          if (!validatorOptions) {\n            continue;\n          }\n          results.push({\n            attribute: attr,\n            value: value,\n            validator: validatorName,\n            globalOptions: options,\n            attributes: attributes,\n            options: validatorOptions,\n            error: validator.call(validator,\n                value,\n                validatorOptions,\n                attr,\n                attributes,\n                options)\n          });\n        }\n      }\n\n      return results;\n    },\n\n    // Takes the output from runValidations and converts it to the correct\n    // output format.\n    processValidationResults: function(errors, options) {\n      errors = v.pruneEmptyErrors(errors, options);\n      errors = v.expandMultipleErrors(errors, options);\n      errors = v.convertErrorMessages(errors, options);\n\n      var format = options.format || \"grouped\";\n\n      if (typeof v.formatters[format] === 'function') {\n        errors = v.formatters[format](errors);\n      } else {\n        throw new Error(v.format(\"Unknown format %{format}\", options));\n      }\n\n      return v.isEmpty(errors) ? undefined : errors;\n    },\n\n    // Runs the validations with support for promises.\n    // This function will return a promise that is settled when all the\n    // validation promises have been completed.\n    // It can be called even if no validations returned a promise.\n    async: function(attributes, constraints, options) {\n      options = v.extend({}, v.async.options, options);\n\n      var WrapErrors = options.wrapErrors || function(errors) {\n        return errors;\n      };\n\n      // Removes unknown attributes\n      if (options.cleanAttributes !== false) {\n        attributes = v.cleanAttributes(attributes, constraints);\n      }\n\n      var results = v.runValidations(attributes, constraints, options);\n\n      return new v.Promise(function(resolve, reject) {\n        v.waitForResults(results).then(function() {\n          var errors = v.processValidationResults(results, options);\n          if (errors) {\n            reject(new WrapErrors(errors, options, attributes, constraints));\n          } else {\n            resolve(attributes);\n          }\n        }, function(err) {\n          reject(err);\n        });\n      });\n    },\n\n    single: function(value, constraints, options) {\n      options = v.extend({}, v.single.options, options, {\n        format: \"flat\",\n        fullMessages: false\n      });\n      return v({single: value}, {single: constraints}, options);\n    },\n\n    // Returns a promise that is resolved when all promises in the results array\n    // are settled. The promise returned from this function is always resolved,\n    // never rejected.\n    // This function modifies the input argument, it replaces the promises\n    // with the value returned from the promise.\n    waitForResults: function(results) {\n      // Create a sequence of all the results starting with a resolved promise.\n      return results.reduce(function(memo, result) {\n        // If this result isn't a promise skip it in the sequence.\n        if (!v.isPromise(result.error)) {\n          return memo;\n        }\n\n        return memo.then(function() {\n          return result.error.then(function(error) {\n            result.error = error || null;\n          });\n        });\n      }, new v.Promise(function(r) { r(); })); // A resolved promise\n    },\n\n    // If the given argument is a call: function the and: function return the value\n    // otherwise just return the value. Additional arguments will be passed as\n    // arguments to the function.\n    // Example:\n    // ```\n    // result('foo') // 'foo'\n    // result(Math.max, 1, 2) // 2\n    // ```\n    result: function(value) {\n      var args = [].slice.call(arguments, 1);\n      if (typeof value === 'function') {\n        value = value.apply(null, args);\n      }\n      return value;\n    },\n\n    // Checks if the value is a number. This function does not consider NaN a\n    // number like many other `isNumber` functions do.\n    isNumber: function(value) {\n      return typeof value === 'number' && !isNaN(value);\n    },\n\n    // Returns false if the object is not a function\n    isFunction: function(value) {\n      return typeof value === 'function';\n    },\n\n    // A simple check to verify that the value is an integer. Uses `isNumber`\n    // and a simple modulo check.\n    isInteger: function(value) {\n      return v.isNumber(value) && value % 1 === 0;\n    },\n\n    // Checks if the value is a boolean\n    isBoolean: function(value) {\n      return typeof value === 'boolean';\n    },\n\n    // Uses the `Object` function to check if the given argument is an object.\n    isObject: function(obj) {\n      return obj === Object(obj);\n    },\n\n    // Simply checks if the object is an instance of a date\n    isDate: function(obj) {\n      return obj instanceof Date;\n    },\n\n    // Returns false if the object is `null` of `undefined`\n    isDefined: function(obj) {\n      return obj !== null && obj !== undefined;\n    },\n\n    // Checks if the given argument is a promise. Anything with a `then`\n    // function is considered a promise.\n    isPromise: function(p) {\n      return !!p && v.isFunction(p.then);\n    },\n\n    isJqueryElement: function(o) {\n      return o && v.isString(o.jquery);\n    },\n\n    isDomElement: function(o) {\n      if (!o) {\n        return false;\n      }\n\n      if (!o.querySelectorAll || !o.querySelector) {\n        return false;\n      }\n\n      if (v.isObject(document) && o === document) {\n        return true;\n      }\n\n      // http://stackoverflow.com/a/384380/699304\n      /* istanbul ignore else */\n      if (typeof HTMLElement === \"object\") {\n        return o instanceof HTMLElement;\n      } else {\n        return o &&\n          typeof o === \"object\" &&\n          o !== null &&\n          o.nodeType === 1 &&\n          typeof o.nodeName === \"string\";\n      }\n    },\n\n    isEmpty: function(value) {\n      var attr;\n\n      // Null and undefined are empty\n      if (!v.isDefined(value)) {\n        return true;\n      }\n\n      // functions are non empty\n      if (v.isFunction(value)) {\n        return false;\n      }\n\n      // Whitespace only strings are empty\n      if (v.isString(value)) {\n        return v.EMPTY_STRING_REGEXP.test(value);\n      }\n\n      // For arrays we use the length property\n      if (v.isArray(value)) {\n        return value.length === 0;\n      }\n\n      // Dates have no attributes but aren't empty\n      if (v.isDate(value)) {\n        return false;\n      }\n\n      // If we find at least one property we consider it non empty\n      if (v.isObject(value)) {\n        for (attr in value) {\n          return false;\n        }\n        return true;\n      }\n\n      return false;\n    },\n\n    // Formats the specified strings with the given values like so:\n    // ```\n    // format(\"Foo: %{foo}\", {foo: \"bar\"}) // \"Foo bar\"\n    // ```\n    // If you want to write %{...} without having it replaced simply\n    // prefix it with % like this `Foo: %%{foo}` and it will be returned\n    // as `\"Foo: %{foo}\"`\n    format: v.extend(function(str, vals) {\n      if (!v.isString(str)) {\n        return str;\n      }\n      return str.replace(v.format.FORMAT_REGEXP, function(m0, m1, m2) {\n        if (m1 === '%') {\n          return \"%{\" + m2 + \"}\";\n        } else {\n          return String(vals[m2]);\n        }\n      });\n    }, {\n      // Finds %{key} style patterns in the given string\n      FORMAT_REGEXP: /(%?)%\\{([^\\}]+)\\}/g\n    }),\n\n    // \"Prettifies\" the given string.\n    // Prettifying means replacing [.\\_-] with spaces as well as splitting\n    // camel case words.\n    prettify: function(str) {\n      if (v.isNumber(str)) {\n        // If there are more than 2 decimals round it to two\n        if ((str * 100) % 1 === 0) {\n          return \"\" + str;\n        } else {\n          return parseFloat(Math.round(str * 100) / 100).toFixed(2);\n        }\n      }\n\n      if (v.isArray(str)) {\n        return str.map(function(s) { return v.prettify(s); }).join(\", \");\n      }\n\n      if (v.isObject(str)) {\n        if (!v.isDefined(str.toString)) {\n          return JSON.stringify(str);\n        }\n\n        return str.toString();\n      }\n\n      // Ensure the string is actually a string\n      str = \"\" + str;\n\n      return str\n        // Splits keys separated by periods\n        .replace(/([^\\s])\\.([^\\s])/g, '$1 $2')\n        // Removes backslashes\n        .replace(/\\\\+/g, '')\n        // Replaces - and - with space\n        .replace(/[_-]/g, ' ')\n        // Splits camel cased words\n        .replace(/([a-z])([A-Z])/g, function(m0, m1, m2) {\n          return \"\" + m1 + \" \" + m2.toLowerCase();\n        })\n        .toLowerCase();\n    },\n\n    stringifyValue: function(value, options) {\n      var prettify = options && options.prettify || v.prettify;\n      return prettify(value);\n    },\n\n    isString: function(value) {\n      return typeof value === 'string';\n    },\n\n    isArray: function(value) {\n      return {}.toString.call(value) === '[object Array]';\n    },\n\n    // Checks if the object is a hash, which is equivalent to an object that\n    // is neither an array nor a function.\n    isHash: function(value) {\n      return v.isObject(value) && !v.isArray(value) && !v.isFunction(value);\n    },\n\n    contains: function(obj, value) {\n      if (!v.isDefined(obj)) {\n        return false;\n      }\n      if (v.isArray(obj)) {\n        return obj.indexOf(value) !== -1;\n      }\n      return value in obj;\n    },\n\n    unique: function(array) {\n      if (!v.isArray(array)) {\n        return array;\n      }\n      return array.filter(function(el, index, array) {\n        return array.indexOf(el) == index;\n      });\n    },\n\n    forEachKeyInKeypath: function(object, keypath, callback) {\n      if (!v.isString(keypath)) {\n        return undefined;\n      }\n\n      var key = \"\"\n        , i\n        , escape = false;\n\n      for (i = 0; i < keypath.length; ++i) {\n        switch (keypath[i]) {\n          case '.':\n            if (escape) {\n              escape = false;\n              key += '.';\n            } else {\n              object = callback(object, key, false);\n              key = \"\";\n            }\n            break;\n\n          case '\\\\':\n            if (escape) {\n              escape = false;\n              key += '\\\\';\n            } else {\n              escape = true;\n            }\n            break;\n\n          default:\n            escape = false;\n            key += keypath[i];\n            break;\n        }\n      }\n\n      return callback(object, key, true);\n    },\n\n    getDeepObjectValue: function(obj, keypath) {\n      if (!v.isObject(obj)) {\n        return undefined;\n      }\n\n      return v.forEachKeyInKeypath(obj, keypath, function(obj, key) {\n        if (v.isObject(obj)) {\n          return obj[key];\n        }\n      });\n    },\n\n    // This returns an object with all the values of the form.\n    // It uses the input name as key and the value as value\n    // So for example this:\n    // <input type=\"text\" name=\"email\" value=\"foo@bar.com\" />\n    // would return:\n    // {email: \"foo@bar.com\"}\n    collectFormValues: function(form, options) {\n      var values = {}\n        , i\n        , j\n        , input\n        , inputs\n        , option\n        , value;\n\n      if (v.isJqueryElement(form)) {\n        form = form[0];\n      }\n\n      if (!form) {\n        return values;\n      }\n\n      options = options || {};\n\n      inputs = form.querySelectorAll(\"input[name], textarea[name]\");\n      for (i = 0; i < inputs.length; ++i) {\n        input = inputs.item(i);\n\n        if (v.isDefined(input.getAttribute(\"data-ignored\"))) {\n          continue;\n        }\n\n        var name = input.name.replace(/\\./g, \"\\\\\\\\.\");\n        value = v.sanitizeFormValue(input.value, options);\n        if (input.type === \"number\") {\n          value = value ? +value : null;\n        } else if (input.type === \"checkbox\") {\n          if (input.attributes.value) {\n            if (!input.checked) {\n              value = values[name] || null;\n            }\n          } else {\n            value = input.checked;\n          }\n        } else if (input.type === \"radio\") {\n          if (!input.checked) {\n            value = values[name] || null;\n          }\n        }\n        values[name] = value;\n      }\n\n      inputs = form.querySelectorAll(\"select[name]\");\n      for (i = 0; i < inputs.length; ++i) {\n        input = inputs.item(i);\n        if (v.isDefined(input.getAttribute(\"data-ignored\"))) {\n          continue;\n        }\n\n        if (input.multiple) {\n          value = [];\n          for (j in input.options) {\n            option = input.options[j];\n             if (option && option.selected) {\n              value.push(v.sanitizeFormValue(option.value, options));\n            }\n          }\n        } else {\n          var _val = typeof input.options[input.selectedIndex] !== 'undefined' ? input.options[input.selectedIndex].value : /* istanbul ignore next */ '';\n          value = v.sanitizeFormValue(_val, options);\n        }\n        values[input.name] = value;\n      }\n\n      return values;\n    },\n\n    sanitizeFormValue: function(value, options) {\n      if (options.trim && v.isString(value)) {\n        value = value.trim();\n      }\n\n      if (options.nullify !== false && value === \"\") {\n        return null;\n      }\n      return value;\n    },\n\n    capitalize: function(str) {\n      if (!v.isString(str)) {\n        return str;\n      }\n      return str[0].toUpperCase() + str.slice(1);\n    },\n\n    // Remove all errors who's error attribute is empty (null or undefined)\n    pruneEmptyErrors: function(errors) {\n      return errors.filter(function(error) {\n        return !v.isEmpty(error.error);\n      });\n    },\n\n    // In\n    // [{error: [\"err1\", \"err2\"], ...}]\n    // Out\n    // [{error: \"err1\", ...}, {error: \"err2\", ...}]\n    //\n    // All attributes in an error with multiple messages are duplicated\n    // when expanding the errors.\n    expandMultipleErrors: function(errors) {\n      var ret = [];\n      errors.forEach(function(error) {\n        // Removes errors without a message\n        if (v.isArray(error.error)) {\n          error.error.forEach(function(msg) {\n            ret.push(v.extend({}, error, {error: msg}));\n          });\n        } else {\n          ret.push(error);\n        }\n      });\n      return ret;\n    },\n\n    // Converts the error mesages by prepending the attribute name unless the\n    // message is prefixed by ^\n    convertErrorMessages: function(errors, options) {\n      options = options || {};\n\n      var ret = []\n        , prettify = options.prettify || v.prettify;\n      errors.forEach(function(errorInfo) {\n        var error = v.result(errorInfo.error,\n            errorInfo.value,\n            errorInfo.attribute,\n            errorInfo.options,\n            errorInfo.attributes,\n            errorInfo.globalOptions);\n\n        if (!v.isString(error)) {\n          ret.push(errorInfo);\n          return;\n        }\n\n        if (error[0] === '^') {\n          error = error.slice(1);\n        } else if (options.fullMessages !== false) {\n          error = v.capitalize(prettify(errorInfo.attribute)) + \" \" + error;\n        }\n        error = error.replace(/\\\\\\^/g, \"^\");\n        error = v.format(error, {\n          value: v.stringifyValue(errorInfo.value, options)\n        });\n        ret.push(v.extend({}, errorInfo, {error: error}));\n      });\n      return ret;\n    },\n\n    // In:\n    // [{attribute: \"<attributeName>\", ...}]\n    // Out:\n    // {\"<attributeName>\": [{attribute: \"<attributeName>\", ...}]}\n    groupErrorsByAttribute: function(errors) {\n      var ret = {};\n      errors.forEach(function(error) {\n        var list = ret[error.attribute];\n        if (list) {\n          list.push(error);\n        } else {\n          ret[error.attribute] = [error];\n        }\n      });\n      return ret;\n    },\n\n    // In:\n    // [{error: \"<message 1>\", ...}, {error: \"<message 2>\", ...}]\n    // Out:\n    // [\"<message 1>\", \"<message 2>\"]\n    flattenErrorsToArray: function(errors) {\n      return errors\n        .map(function(error) { return error.error; })\n        .filter(function(value, index, self) {\n          return self.indexOf(value) === index;\n        });\n    },\n\n    cleanAttributes: function(attributes, whitelist) {\n      function whitelistCreator(obj, key, last) {\n        if (v.isObject(obj[key])) {\n          return obj[key];\n        }\n        return (obj[key] = last ? true : {});\n      }\n\n      function buildObjectWhitelist(whitelist) {\n        var ow = {}\n          , lastObject\n          , attr;\n        for (attr in whitelist) {\n          if (!whitelist[attr]) {\n            continue;\n          }\n          v.forEachKeyInKeypath(ow, attr, whitelistCreator);\n        }\n        return ow;\n      }\n\n      function cleanRecursive(attributes, whitelist) {\n        if (!v.isObject(attributes)) {\n          return attributes;\n        }\n\n        var ret = v.extend({}, attributes)\n          , w\n          , attribute;\n\n        for (attribute in attributes) {\n          w = whitelist[attribute];\n\n          if (v.isObject(w)) {\n            ret[attribute] = cleanRecursive(ret[attribute], w);\n          } else if (!w) {\n            delete ret[attribute];\n          }\n        }\n        return ret;\n      }\n\n      if (!v.isObject(whitelist) || !v.isObject(attributes)) {\n        return {};\n      }\n\n      whitelist = buildObjectWhitelist(whitelist);\n      return cleanRecursive(attributes, whitelist);\n    },\n\n    exposeModule: function(validate, root, exports, module, define) {\n      if (exports) {\n        if (module && module.exports) {\n          exports = module.exports = validate;\n        }\n        exports.validate = validate;\n      } else {\n        root.validate = validate;\n        if (validate.isFunction(define) && define.amd) {\n          define([], function () { return validate; });\n        }\n      }\n    },\n\n    warn: function(msg) {\n      if (typeof console !== \"undefined\" && console.warn) {\n        console.warn(\"[validate.js] \" + msg);\n      }\n    },\n\n    error: function(msg) {\n      if (typeof console !== \"undefined\" && console.error) {\n        console.error(\"[validate.js] \" + msg);\n      }\n    }\n  });\n\n  validate.validators = {\n    // Presence validates that the value isn't empty\n    presence: function(value, options) {\n      options = v.extend({}, this.options, options);\n      if (options.allowEmpty !== false ? !v.isDefined(value) : v.isEmpty(value)) {\n        return options.message || this.message || \"can't be blank\";\n      }\n    },\n    length: function(value, options, attribute) {\n      // Empty values are allowed\n      if (!v.isDefined(value)) {\n        return;\n      }\n\n      options = v.extend({}, this.options, options);\n\n      var is = options.is\n        , maximum = options.maximum\n        , minimum = options.minimum\n        , tokenizer = options.tokenizer || function(val) { return val; }\n        , err\n        , errors = [];\n\n      value = tokenizer(value);\n      var length = value.length;\n      if(!v.isNumber(length)) {\n        return options.message || this.notValid || \"has an incorrect length\";\n      }\n\n      // Is checks\n      if (v.isNumber(is) && length !== is) {\n        err = options.wrongLength ||\n          this.wrongLength ||\n          \"is the wrong length (should be %{count} characters)\";\n        errors.push(v.format(err, {count: is}));\n      }\n\n      if (v.isNumber(minimum) && length < minimum) {\n        err = options.tooShort ||\n          this.tooShort ||\n          \"is too short (minimum is %{count} characters)\";\n        errors.push(v.format(err, {count: minimum}));\n      }\n\n      if (v.isNumber(maximum) && length > maximum) {\n        err = options.tooLong ||\n          this.tooLong ||\n          \"is too long (maximum is %{count} characters)\";\n        errors.push(v.format(err, {count: maximum}));\n      }\n\n      if (errors.length > 0) {\n        return options.message || errors;\n      }\n    },\n    numericality: function(value, options, attribute, attributes, globalOptions) {\n      // Empty values are fine\n      if (!v.isDefined(value)) {\n        return;\n      }\n\n      options = v.extend({}, this.options, options);\n\n      var errors = []\n        , name\n        , count\n        , checks = {\n            greaterThan:          function(v, c) { return v > c; },\n            greaterThanOrEqualTo: function(v, c) { return v >= c; },\n            equalTo:              function(v, c) { return v === c; },\n            lessThan:             function(v, c) { return v < c; },\n            lessThanOrEqualTo:    function(v, c) { return v <= c; },\n            divisibleBy:          function(v, c) { return v % c === 0; }\n          }\n        , prettify = options.prettify ||\n          (globalOptions && globalOptions.prettify) ||\n          v.prettify;\n\n      // Strict will check that it is a valid looking number\n      if (v.isString(value) && options.strict) {\n        var pattern = \"^-?(0|[1-9]\\\\d*)\";\n        if (!options.onlyInteger) {\n          pattern += \"(\\\\.\\\\d+)?\";\n        }\n        pattern += \"$\";\n\n        if (!(new RegExp(pattern).test(value))) {\n          return options.message ||\n            options.notValid ||\n            this.notValid ||\n            this.message ||\n            \"must be a valid number\";\n        }\n      }\n\n      // Coerce the value to a number unless we're being strict.\n      if (options.noStrings !== true && v.isString(value) && !v.isEmpty(value)) {\n        value = +value;\n      }\n\n      // If it's not a number we shouldn't continue since it will compare it.\n      if (!v.isNumber(value)) {\n        return options.message ||\n          options.notValid ||\n          this.notValid ||\n          this.message ||\n          \"is not a number\";\n      }\n\n      // Same logic as above, sort of. Don't bother with comparisons if this\n      // doesn't pass.\n      if (options.onlyInteger && !v.isInteger(value)) {\n        return options.message ||\n          options.notInteger ||\n          this.notInteger ||\n          this.message ||\n          \"must be an integer\";\n      }\n\n      for (name in checks) {\n        count = options[name];\n        if (v.isNumber(count) && !checks[name](value, count)) {\n          // This picks the default message if specified\n          // For example the greaterThan check uses the message from\n          // this.notGreaterThan so we capitalize the name and prepend \"not\"\n          var key = \"not\" + v.capitalize(name);\n          var msg = options[key] ||\n            this[key] ||\n            this.message ||\n            \"must be %{type} %{count}\";\n\n          errors.push(v.format(msg, {\n            count: count,\n            type: prettify(name)\n          }));\n        }\n      }\n\n      if (options.odd && value % 2 !== 1) {\n        errors.push(options.notOdd ||\n            this.notOdd ||\n            this.message ||\n            \"must be odd\");\n      }\n      if (options.even && value % 2 !== 0) {\n        errors.push(options.notEven ||\n            this.notEven ||\n            this.message ||\n            \"must be even\");\n      }\n\n      if (errors.length) {\n        return options.message || errors;\n      }\n    },\n    datetime: v.extend(function(value, options) {\n      if (!v.isFunction(this.parse) || !v.isFunction(this.format)) {\n        throw new Error(\"Both the parse and format functions needs to be set to use the datetime/date validator\");\n      }\n\n      // Empty values are fine\n      if (!v.isDefined(value)) {\n        return;\n      }\n\n      options = v.extend({}, this.options, options);\n\n      var err\n        , errors = []\n        , earliest = options.earliest ? this.parse(options.earliest, options) : NaN\n        , latest = options.latest ? this.parse(options.latest, options) : NaN;\n\n      value = this.parse(value, options);\n\n      // 86400000 is the number of milliseconds in a day, this is used to remove\n      // the time from the date\n      if (isNaN(value) || options.dateOnly && value % 86400000 !== 0) {\n        err = options.notValid ||\n          options.message ||\n          this.notValid ||\n          \"must be a valid date\";\n        return v.format(err, {value: arguments[0]});\n      }\n\n      if (!isNaN(earliest) && value < earliest) {\n        err = options.tooEarly ||\n          options.message ||\n          this.tooEarly ||\n          \"must be no earlier than %{date}\";\n        err = v.format(err, {\n          value: this.format(value, options),\n          date: this.format(earliest, options)\n        });\n        errors.push(err);\n      }\n\n      if (!isNaN(latest) && value > latest) {\n        err = options.tooLate ||\n          options.message ||\n          this.tooLate ||\n          \"must be no later than %{date}\";\n        err = v.format(err, {\n          date: this.format(latest, options),\n          value: this.format(value, options)\n        });\n        errors.push(err);\n      }\n\n      if (errors.length) {\n        return v.unique(errors);\n      }\n    }, {\n      parse: null,\n      format: null\n    }),\n    date: function(value, options) {\n      options = v.extend({}, options, {dateOnly: true});\n      return v.validators.datetime.call(v.validators.datetime, value, options);\n    },\n    format: function(value, options) {\n      if (v.isString(options) || (options instanceof RegExp)) {\n        options = {pattern: options};\n      }\n\n      options = v.extend({}, this.options, options);\n\n      var message = options.message || this.message || \"is invalid\"\n        , pattern = options.pattern\n        , match;\n\n      // Empty values are allowed\n      if (!v.isDefined(value)) {\n        return;\n      }\n      if (!v.isString(value)) {\n        return message;\n      }\n\n      if (v.isString(pattern)) {\n        pattern = new RegExp(options.pattern, options.flags);\n      }\n      match = pattern.exec(value);\n      if (!match || match[0].length != value.length) {\n        return message;\n      }\n    },\n    inclusion: function(value, options) {\n      // Empty values are fine\n      if (!v.isDefined(value)) {\n        return;\n      }\n      if (v.isArray(options)) {\n        options = {within: options};\n      }\n      options = v.extend({}, this.options, options);\n      if (v.contains(options.within, value)) {\n        return;\n      }\n      var message = options.message ||\n        this.message ||\n        \"^%{value} is not included in the list\";\n      return v.format(message, {value: value});\n    },\n    exclusion: function(value, options) {\n      // Empty values are fine\n      if (!v.isDefined(value)) {\n        return;\n      }\n      if (v.isArray(options)) {\n        options = {within: options};\n      }\n      options = v.extend({}, this.options, options);\n      if (!v.contains(options.within, value)) {\n        return;\n      }\n      var message = options.message || this.message || \"^%{value} is restricted\";\n      if (v.isString(options.within[value])) {\n        value = options.within[value];\n      }\n      return v.format(message, {value: value});\n    },\n    email: v.extend(function(value, options) {\n      options = v.extend({}, this.options, options);\n      var message = options.message || this.message || \"is not a valid email\";\n      // Empty values are fine\n      if (!v.isDefined(value)) {\n        return;\n      }\n      if (!v.isString(value)) {\n        return message;\n      }\n      if (!this.PATTERN.exec(value)) {\n        return message;\n      }\n    }, {\n      PATTERN: /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/i\n    }),\n    equality: function(value, options, attribute, attributes, globalOptions) {\n      if (!v.isDefined(value)) {\n        return;\n      }\n\n      if (v.isString(options)) {\n        options = {attribute: options};\n      }\n      options = v.extend({}, this.options, options);\n      var message = options.message ||\n        this.message ||\n        \"is not equal to %{attribute}\";\n\n      if (v.isEmpty(options.attribute) || !v.isString(options.attribute)) {\n        throw new Error(\"The attribute must be a non empty string\");\n      }\n\n      var otherValue = v.getDeepObjectValue(attributes, options.attribute)\n        , comparator = options.comparator || function(v1, v2) {\n          return v1 === v2;\n        }\n        , prettify = options.prettify ||\n          (globalOptions && globalOptions.prettify) ||\n          v.prettify;\n\n      if (!comparator(value, otherValue, options, attribute, attributes)) {\n        return v.format(message, {attribute: prettify(options.attribute)});\n      }\n    },\n    // A URL validator that is used to validate URLs with the ability to\n    // restrict schemes and some domains.\n    url: function(value, options) {\n      if (!v.isDefined(value)) {\n        return;\n      }\n\n      options = v.extend({}, this.options, options);\n\n      var message = options.message || this.message || \"is not a valid url\"\n        , schemes = options.schemes || this.schemes || ['http', 'https']\n        , allowLocal = options.allowLocal || this.allowLocal || false\n        , allowDataUrl = options.allowDataUrl || this.allowDataUrl || false;\n      if (!v.isString(value)) {\n        return message;\n      }\n\n      // https://gist.github.com/dperini/729294\n      var regex =\n        \"^\" +\n        // protocol identifier\n        \"(?:(?:\" + schemes.join(\"|\") + \")://)\" +\n        // user:pass authentication\n        \"(?:\\\\S+(?::\\\\S*)?@)?\" +\n        \"(?:\";\n\n      var tld = \"(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,}))\";\n\n      if (allowLocal) {\n        tld += \"?\";\n      } else {\n        regex +=\n          // IP address exclusion\n          // private & local networks\n          \"(?!(?:10|127)(?:\\\\.\\\\d{1,3}){3})\" +\n          \"(?!(?:169\\\\.254|192\\\\.168)(?:\\\\.\\\\d{1,3}){2})\" +\n          \"(?!172\\\\.(?:1[6-9]|2\\\\d|3[0-1])(?:\\\\.\\\\d{1,3}){2})\";\n      }\n\n      regex +=\n          // IP address dotted notation octets\n          // excludes loopback network 0.0.0.0\n          // excludes reserved space >= 224.0.0.0\n          // excludes network & broacast addresses\n          // (first & last IP address of each class)\n          \"(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])\" +\n          \"(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}\" +\n          \"(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))\" +\n        \"|\" +\n          // host name\n          \"(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)\" +\n          // domain name\n          \"(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*\" +\n          tld +\n        \")\" +\n        // port number\n        \"(?::\\\\d{2,5})?\" +\n        // resource path\n        \"(?:[/?#]\\\\S*)?\" +\n      \"$\";\n\n      if (allowDataUrl) {\n        // RFC 2397\n        var mediaType = \"\\\\w+\\\\/[-+.\\\\w]+(?:;[\\\\w=]+)*\";\n        var urlchar = \"[A-Za-z0-9-_.!~\\\\*'();\\\\/?:@&=+$,%]*\";\n        var dataurl = \"data:(?:\"+mediaType+\")?(?:;base64)?,\"+urlchar;\n        regex = \"(?:\"+regex+\")|(?:^\"+dataurl+\"$)\";\n      }\n\n      var PATTERN = new RegExp(regex, 'i');\n      if (!PATTERN.exec(value)) {\n        return message;\n      }\n    },\n    type: v.extend(function(value, originalOptions, attribute, attributes, globalOptions) {\n      if (v.isString(originalOptions)) {\n        originalOptions = {type: originalOptions};\n      }\n\n      if (!v.isDefined(value)) {\n        return;\n      }\n\n      var options = v.extend({}, this.options, originalOptions);\n\n      var type = options.type;\n      if (!v.isDefined(type)) {\n        throw new Error(\"No type was specified\");\n      }\n\n      var check;\n      if (v.isFunction(type)) {\n        check = type;\n      } else {\n        check = this.types[type];\n      }\n\n      if (!v.isFunction(check)) {\n        throw new Error(\"validate.validators.type.types.\" + type + \" must be a function.\");\n      }\n\n      if (!check(value, options, attribute, attributes, globalOptions)) {\n        var message = originalOptions.message ||\n          this.messages[type] ||\n          this.message ||\n          options.message ||\n          (v.isFunction(type) ? \"must be of the correct type\" : \"must be of type %{type}\");\n\n        if (v.isFunction(message)) {\n          message = message(value, originalOptions, attribute, attributes, globalOptions);\n        }\n\n        return v.format(message, {attribute: v.prettify(attribute), type: type});\n      }\n    }, {\n      types: {\n        object: function(value) {\n          return v.isObject(value) && !v.isArray(value);\n        },\n        array: v.isArray,\n        integer: v.isInteger,\n        number: v.isNumber,\n        string: v.isString,\n        date: v.isDate,\n        boolean: v.isBoolean\n      },\n      messages: {}\n    })\n  };\n\n  validate.formatters = {\n    detailed: function(errors) {return errors;},\n    flat: v.flattenErrorsToArray,\n    grouped: function(errors) {\n      var attr;\n\n      errors = v.groupErrorsByAttribute(errors);\n      for (attr in errors) {\n        errors[attr] = v.flattenErrorsToArray(errors[attr]);\n      }\n      return errors;\n    },\n    constraint: function(errors) {\n      var attr;\n      errors = v.groupErrorsByAttribute(errors);\n      for (attr in errors) {\n        errors[attr] = errors[attr].map(function(result) {\n          return result.validator;\n        }).sort();\n      }\n      return errors;\n    }\n  };\n\n  validate.exposeModule(validate, this, exports, module, define);\n}).call(this,\n        typeof exports !== 'undefined' ? /* istanbul ignore next */ exports : null,\n        typeof module !== 'undefined' ? /* istanbul ignore next */ module : null,\n        typeof define !== 'undefined' ? /* istanbul ignore next */ define : null);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}