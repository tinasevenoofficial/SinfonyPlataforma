{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\HUAWEI\\\\Documents\\\\GitHub\\\\SinfonyPlataforma\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\HUAWEI\\\\Documents\\\\GitHub\\\\SinfonyPlataforma\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _isNativeReflectConstruct from \"C:\\\\Users\\\\HUAWEI\\\\Documents\\\\GitHub\\\\SinfonyPlataforma\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/isNativeReflectConstruct\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\HUAWEI\\\\Documents\\\\GitHub\\\\SinfonyPlataforma\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"C:\\\\Users\\\\HUAWEI\\\\Documents\\\\GitHub\\\\SinfonyPlataforma\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _inherits from \"C:\\\\Users\\\\HUAWEI\\\\Documents\\\\GitHub\\\\SinfonyPlataforma\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _slicedToArray from \"C:\\\\Users\\\\HUAWEI\\\\Documents\\\\GitHub\\\\SinfonyPlataforma\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"C:\\\\Users\\\\HUAWEI\\\\Documents\\\\GitHub\\\\SinfonyPlataforma\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _createForOfIteratorHelper from \"C:\\\\Users\\\\HUAWEI\\\\Documents\\\\GitHub\\\\SinfonyPlataforma\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";\nimport _toConsumableArray from \"C:\\\\Users\\\\HUAWEI\\\\Documents\\\\GitHub\\\\SinfonyPlataforma\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\HUAWEI\\\\Documents\\\\GitHub\\\\SinfonyPlataforma\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\HUAWEI\\\\Documents\\\\GitHub\\\\SinfonyPlataforma\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _superPropGet(t, o, e, r) { var p = _get(_getPrototypeOf(1 & r ? t.prototype : t), o, e); return 2 & r && \"function\" == typeof p ? function (t) { return p.apply(e, t); } : p; }\n/*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as _color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as log10, A as _factorize, B as finiteOrDefault, C as callback, D as _addGrace, E as _limitValue, F as toDegrees, G as _measureText, I as _int16Range, J as _alignPixel, K as toPadding, L as clipArea, M as renderText, N as unclipArea, O as toFont, Q as each, R as _toLeftRightCenter, S as _alignStartEnd, U as overrides, V as merge, W as _capitalize, X as getRelativePosition, Y as _rlookupByKey, Z as _lookupByKey, $ as _isPointInArea, a0 as getAngleFromPoint, a1 as _getMaximumSize, a2 as _getParentNode, a3 as readUsedSize, a4 as throttled, a5 as supportsEventListenerOptions, a6 as _isDomSupported, a7 as descriptors, a8 as isFunction, a9 as _attachContext, aa as _createResolver, ab as _descriptors, ac as mergeIf, ad as uid, ae as debounce, af as retinaScale, ag as clearCanvas, ah as setsEqual, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _readValueToProps, am as _updateBezierControlPoints, an as _computeSegments, ao as _boundSegments, ap as _steppedInterpolation, aq as _bezierInterpolation, ar as _pointInLine, as as _steppedLineTo, at as _bezierCurveTo, au as drawPoint, av as addRoundedRectPath, aw as toTRBL, ax as toTRBLCorners, ay as _boundSegment, az as _normalizeAngle, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as noop, aG as distanceBetweenPoints, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as _longestText, aN as _filterBetween, aO as _lookup } from './chunks/helpers.segment.mjs';\nexport { d as defaults } from './chunks/helpers.segment.mjs';\nvar Animator = /*#__PURE__*/function () {\n  function Animator() {\n    _classCallCheck(this, Animator);\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  return _createClass(Animator, [{\n    key: \"_notify\",\n    value: function _notify(chart, anims, date, type) {\n      var callbacks = anims.listeners[type];\n      var numSteps = anims.duration;\n      callbacks.forEach(function (fn) {\n        return fn({\n          chart: chart,\n          initial: anims.initial,\n          numSteps: numSteps,\n          currentStep: Math.min(date - anims.start, numSteps)\n        });\n      });\n    }\n  }, {\n    key: \"_refresh\",\n    value: function _refresh() {\n      var _this = this;\n      if (this._request) {\n        return;\n      }\n      this._running = true;\n      this._request = requestAnimFrame.call(window, function () {\n        _this._update();\n        _this._request = null;\n        if (_this._running) {\n          _this._refresh();\n        }\n      });\n    }\n  }, {\n    key: \"_update\",\n    value: function _update() {\n      var _this2 = this;\n      var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Date.now();\n      var remaining = 0;\n      this._charts.forEach(function (anims, chart) {\n        if (!anims.running || !anims.items.length) {\n          return;\n        }\n        var items = anims.items;\n        var i = items.length - 1;\n        var draw = false;\n        var item;\n        for (; i >= 0; --i) {\n          item = items[i];\n          if (item._active) {\n            if (item._total > anims.duration) {\n              anims.duration = item._total;\n            }\n            item.tick(date);\n            draw = true;\n          } else {\n            items[i] = items[items.length - 1];\n            items.pop();\n          }\n        }\n        if (draw) {\n          chart.draw();\n          _this2._notify(chart, anims, date, 'progress');\n        }\n        if (!items.length) {\n          anims.running = false;\n          _this2._notify(chart, anims, date, 'complete');\n          anims.initial = false;\n        }\n        remaining += items.length;\n      });\n      this._lastDate = date;\n      if (remaining === 0) {\n        this._running = false;\n      }\n    }\n  }, {\n    key: \"_getAnims\",\n    value: function _getAnims(chart) {\n      var charts = this._charts;\n      var anims = charts.get(chart);\n      if (!anims) {\n        anims = {\n          running: false,\n          initial: true,\n          items: [],\n          listeners: {\n            complete: [],\n            progress: []\n          }\n        };\n        charts.set(chart, anims);\n      }\n      return anims;\n    }\n  }, {\n    key: \"listen\",\n    value: function listen(chart, event, cb) {\n      this._getAnims(chart).listeners[event].push(cb);\n    }\n  }, {\n    key: \"add\",\n    value: function add(chart, items) {\n      var _this$_getAnims$items;\n      if (!items || !items.length) {\n        return;\n      }\n      (_this$_getAnims$items = this._getAnims(chart).items).push.apply(_this$_getAnims$items, _toConsumableArray(items));\n    }\n  }, {\n    key: \"has\",\n    value: function has(chart) {\n      return this._getAnims(chart).items.length > 0;\n    }\n  }, {\n    key: \"start\",\n    value: function start(chart) {\n      var anims = this._charts.get(chart);\n      if (!anims) {\n        return;\n      }\n      anims.running = true;\n      anims.start = Date.now();\n      anims.duration = anims.items.reduce(function (acc, cur) {\n        return Math.max(acc, cur._duration);\n      }, 0);\n      this._refresh();\n    }\n  }, {\n    key: \"running\",\n    value: function running(chart) {\n      if (!this._running) {\n        return false;\n      }\n      var anims = this._charts.get(chart);\n      if (!anims || !anims.running || !anims.items.length) {\n        return false;\n      }\n      return true;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop(chart) {\n      var anims = this._charts.get(chart);\n      if (!anims || !anims.items.length) {\n        return;\n      }\n      var items = anims.items;\n      var i = items.length - 1;\n      for (; i >= 0; --i) {\n        items[i].cancel();\n      }\n      anims.items = [];\n      this._notify(chart, anims, Date.now(), 'complete');\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(chart) {\n      return this._charts[\"delete\"](chart);\n    }\n  }]);\n}();\nvar animator = new Animator();\nvar transparent = 'transparent';\nvar interpolators = {\n  \"boolean\": function boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color: function color(from, to, factor) {\n    var c0 = _color(from || transparent);\n    var c1 = c0.valid && _color(to || transparent);\n    return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n  },\n  number: function number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nvar Animation = /*#__PURE__*/function () {\n  function Animation(cfg, target, prop, to) {\n    _classCallCheck(this, Animation);\n    var currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    var from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  return _createClass(Animation, [{\n    key: \"active\",\n    value: function active() {\n      return this._active;\n    }\n  }, {\n    key: \"update\",\n    value: function update(cfg, to, date) {\n      if (this._active) {\n        this._notify(false);\n        var currentValue = this._target[this._prop];\n        var elapsed = date - this._start;\n        var remain = this._duration - elapsed;\n        this._start = date;\n        this._duration = Math.floor(Math.max(remain, cfg.duration));\n        this._total += elapsed;\n        this._loop = !!cfg.loop;\n        this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n        this._from = resolve([cfg.from, currentValue, to]);\n      }\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      if (this._active) {\n        this.tick(Date.now());\n        this._active = false;\n        this._notify(false);\n      }\n    }\n  }, {\n    key: \"tick\",\n    value: function tick(date) {\n      var elapsed = date - this._start;\n      var duration = this._duration;\n      var prop = this._prop;\n      var from = this._from;\n      var loop = this._loop;\n      var to = this._to;\n      var factor;\n      this._active = from !== to && (loop || elapsed < duration);\n      if (!this._active) {\n        this._target[prop] = to;\n        this._notify(true);\n        return;\n      }\n      if (elapsed < 0) {\n        this._target[prop] = from;\n        return;\n      }\n      factor = elapsed / duration % 2;\n      factor = loop && factor > 1 ? 2 - factor : factor;\n      factor = this._easing(Math.min(1, Math.max(0, factor)));\n      this._target[prop] = this._fn(from, to, factor);\n    }\n  }, {\n    key: \"wait\",\n    value: function wait() {\n      var promises = this._promises || (this._promises = []);\n      return new Promise(function (res, rej) {\n        promises.push({\n          res: res,\n          rej: rej\n        });\n      });\n    }\n  }, {\n    key: \"_notify\",\n    value: function _notify(resolved) {\n      var method = resolved ? 'res' : 'rej';\n      var promises = this._promises || [];\n      for (var i = 0; i < promises.length; i++) {\n        promises[i][method]();\n      }\n    }\n  }]);\n}();\nvar numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nvar colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined\n});\nvar animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: function _scriptable(name) {\n    return name !== 'onProgress' && name !== 'onComplete' && name !== 'fn';\n  }\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  }\n});\ndefaults.describe('animations', {\n  _fallback: 'animation'\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      }\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: function fn(v) {\n          return v | 0;\n        }\n      }\n    }\n  }\n});\nvar Animations = /*#__PURE__*/function () {\n  function Animations(chart, config) {\n    _classCallCheck(this, Animations);\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  return _createClass(Animations, [{\n    key: \"configure\",\n    value: function configure(config) {\n      if (!isObject(config)) {\n        return;\n      }\n      var animatedProps = this._properties;\n      Object.getOwnPropertyNames(config).forEach(function (key) {\n        var cfg = config[key];\n        if (!isObject(cfg)) {\n          return;\n        }\n        var resolved = {};\n        for (var _i = 0, _animationOptions = animationOptions; _i < _animationOptions.length; _i++) {\n          var option = _animationOptions[_i];\n          resolved[option] = cfg[option];\n        }\n        (isArray(cfg.properties) && cfg.properties || [key]).forEach(function (prop) {\n          if (prop === key || !animatedProps.has(prop)) {\n            animatedProps.set(prop, resolved);\n          }\n        });\n      });\n    }\n  }, {\n    key: \"_animateOptions\",\n    value: function _animateOptions(target, values) {\n      var newOptions = values.options;\n      var options = resolveTargetOptions(target, newOptions);\n      if (!options) {\n        return [];\n      }\n      var animations = this._createAnimations(options, newOptions);\n      if (newOptions.$shared) {\n        awaitAll(target.options.$animations, newOptions).then(function () {\n          target.options = newOptions;\n        }, function () {});\n      }\n      return animations;\n    }\n  }, {\n    key: \"_createAnimations\",\n    value: function _createAnimations(target, values) {\n      var animatedProps = this._properties;\n      var animations = [];\n      var running = target.$animations || (target.$animations = {});\n      var props = Object.keys(values);\n      var date = Date.now();\n      var i;\n      for (i = props.length - 1; i >= 0; --i) {\n        var prop = props[i];\n        if (prop.charAt(0) === '$') {\n          continue;\n        }\n        if (prop === 'options') {\n          animations.push.apply(animations, _toConsumableArray(this._animateOptions(target, values)));\n          continue;\n        }\n        var value = values[prop];\n        var animation = running[prop];\n        var cfg = animatedProps.get(prop);\n        if (animation) {\n          if (cfg && animation.active()) {\n            animation.update(cfg, value, date);\n            continue;\n          } else {\n            animation.cancel();\n          }\n        }\n        if (!cfg || !cfg.duration) {\n          target[prop] = value;\n          continue;\n        }\n        running[prop] = animation = new Animation(cfg, target, prop, value);\n        animations.push(animation);\n      }\n      return animations;\n    }\n  }, {\n    key: \"update\",\n    value: function update(target, values) {\n      if (this._properties.size === 0) {\n        Object.assign(target, values);\n        return;\n      }\n      var animations = this._createAnimations(target, values);\n      if (animations.length) {\n        animator.add(this._chart, animations);\n        return true;\n      }\n    }\n  }]);\n}();\nfunction awaitAll(animations, properties) {\n  var running = [];\n  var keys = Object.keys(properties);\n  for (var i = 0; i < keys.length; i++) {\n    var anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  var options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {\n      $shared: false,\n      $animations: {}\n    });\n  }\n  return options;\n}\nfunction scaleClip(scale, allowedOverflow) {\n  var opts = scale && scale.options || {};\n  var reverse = opts.reverse;\n  var min = opts.min === undefined ? allowedOverflow : 0;\n  var max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  var x = scaleClip(xScale, allowedOverflow);\n  var y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  var t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  var keys = [];\n  var metasets = chart._getSortedDatasetMetas(filterVisible);\n  var i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction _applyStack(stack, value, dsIndex) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var keys = stack.keys;\n  var singleMode = options.mode === 'single';\n  var i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  var keys = Object.keys(data);\n  var adata = new Array(keys.length);\n  var i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  var stacked = scale && scale.options.stacked;\n  return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return \"\".concat(indexScale.id, \".\").concat(valueScale.id, \".\").concat(meta.stack || meta.type);\n}\nfunction getUserBounds(scale) {\n  var _scale$getUserBounds = scale.getUserBounds(),\n    min = _scale$getUserBounds.min,\n    max = _scale$getUserBounds.max,\n    minDefined = _scale$getUserBounds.minDefined,\n    maxDefined = _scale$getUserBounds.maxDefined;\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  var subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  var _iterator = _createForOfIteratorHelper(vScale.getMatchingVisibleMetas(type).reverse()),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var meta = _step.value;\n      var value = stack[meta.index];\n      if (positive && value > 0 || !positive && value < 0) {\n        return meta.index;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  var chart = controller.chart,\n    meta = controller._cachedMeta;\n  var stacks = chart._stacks || (chart._stacks = {});\n  var iScale = meta.iScale,\n    vScale = meta.vScale,\n    datasetIndex = meta.index;\n  var iAxis = iScale.axis;\n  var vAxis = vScale.axis;\n  var key = getStackKey(iScale, vScale, meta);\n  var ilen = parsed.length;\n  var stack;\n  for (var i = 0; i < ilen; ++i) {\n    var item = parsed[i];\n    var _index = item[iAxis],\n      value = item[vAxis];\n    var itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, _index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  var scales = chart.scales;\n  return Object.keys(scales).filter(function (key) {\n    return scales[key].axis === axis;\n  }).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent, {\n    active: false,\n    dataset: undefined,\n    datasetIndex: index,\n    index: index,\n    mode: 'default',\n    type: 'dataset'\n  });\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element: element,\n    index: index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  var datasetIndex = meta.controller.index;\n  var axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  var _iterator2 = _createForOfIteratorHelper(items),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var parsed = _step2.value;\n      var stacks = parsed._stacks;\n      if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n        return;\n      }\n      delete stacks[axis][datasetIndex];\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n}\nvar isDirectUpdateMode = function isDirectUpdateMode(mode) {\n  return mode === 'reset' || mode === 'none';\n};\nvar cloneIfNotShared = function cloneIfNotShared(cached, shared) {\n  return shared ? cached : Object.assign({}, cached);\n};\nvar createStack = function createStack(canStack, meta, chart) {\n  return canStack && !meta.hidden && meta._stacked && {\n    keys: getSortedDatasetIndices(chart, true),\n    values: null\n  };\n};\nvar DatasetController = /*#__PURE__*/function () {\n  function DatasetController(chart, datasetIndex) {\n    _classCallCheck(this, DatasetController);\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  return _createClass(DatasetController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      var meta = this._cachedMeta;\n      this.configure();\n      this.linkScales();\n      meta._stacked = isStacked(meta.vScale, meta);\n      this.addElements();\n    }\n  }, {\n    key: \"updateIndex\",\n    value: function updateIndex(datasetIndex) {\n      if (this.index !== datasetIndex) {\n        clearStacks(this._cachedMeta);\n      }\n      this.index = datasetIndex;\n    }\n  }, {\n    key: \"linkScales\",\n    value: function linkScales() {\n      var chart = this.chart;\n      var meta = this._cachedMeta;\n      var dataset = this.getDataset();\n      var chooseId = function chooseId(axis, x, y, r) {\n        return axis === 'x' ? x : axis === 'r' ? r : y;\n      };\n      var xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n      var yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n      var rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n      var indexAxis = meta.indexAxis;\n      var iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n      var vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n      meta.xScale = this.getScaleForId(xid);\n      meta.yScale = this.getScaleForId(yid);\n      meta.rScale = this.getScaleForId(rid);\n      meta.iScale = this.getScaleForId(iid);\n      meta.vScale = this.getScaleForId(vid);\n    }\n  }, {\n    key: \"getDataset\",\n    value: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    }\n  }, {\n    key: \"getMeta\",\n    value: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    }\n  }, {\n    key: \"getScaleForId\",\n    value: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    }\n  }, {\n    key: \"_getOtherScale\",\n    value: function _getOtherScale(scale) {\n      var meta = this._cachedMeta;\n      return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._update('reset');\n    }\n  }, {\n    key: \"_destroy\",\n    value: function _destroy() {\n      var meta = this._cachedMeta;\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n      if (meta._stacked) {\n        clearStacks(meta);\n      }\n    }\n  }, {\n    key: \"_dataCheck\",\n    value: function _dataCheck() {\n      var dataset = this.getDataset();\n      var data = dataset.data || (dataset.data = []);\n      var _data = this._data;\n      if (isObject(data)) {\n        this._data = convertObjectDataToArray(data);\n      } else if (_data !== data) {\n        if (_data) {\n          unlistenArrayEvents(_data, this);\n          var meta = this._cachedMeta;\n          clearStacks(meta);\n          meta._parsed = [];\n        }\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, this);\n        }\n        this._syncList = [];\n        this._data = data;\n      }\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      var meta = this._cachedMeta;\n      this._dataCheck();\n      if (this.datasetElementType) {\n        meta.dataset = new this.datasetElementType();\n      }\n    }\n  }, {\n    key: \"buildOrUpdateElements\",\n    value: function buildOrUpdateElements(resetNewElements) {\n      var meta = this._cachedMeta;\n      var dataset = this.getDataset();\n      var stackChanged = false;\n      this._dataCheck();\n      var oldStacked = meta._stacked;\n      meta._stacked = isStacked(meta.vScale, meta);\n      if (meta.stack !== dataset.stack) {\n        stackChanged = true;\n        clearStacks(meta);\n        meta.stack = dataset.stack;\n      }\n      this._resyncElements(resetNewElements);\n      if (stackChanged || oldStacked !== meta._stacked) {\n        updateStacks(this, meta._parsed);\n      }\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var config = this.chart.config;\n      var scopeKeys = config.datasetScopeKeys(this._type);\n      var scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n      this.options = config.createResolver(scopes, this.getContext());\n      this._parsing = this.options.parsing;\n      this._cachedDataOpts = {};\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(start, count) {\n      var meta = this._cachedMeta,\n        data = this._data;\n      var iScale = meta.iScale,\n        _stacked = meta._stacked;\n      var iAxis = iScale.axis;\n      var sorted = start === 0 && count === data.length ? true : meta._sorted;\n      var prev = start > 0 && meta._parsed[start - 1];\n      var i, cur, parsed;\n      if (this._parsing === false) {\n        meta._parsed = data;\n        meta._sorted = true;\n        parsed = data;\n      } else {\n        if (isArray(data[start])) {\n          parsed = this.parseArrayData(meta, data, start, count);\n        } else if (isObject(data[start])) {\n          parsed = this.parseObjectData(meta, data, start, count);\n        } else {\n          parsed = this.parsePrimitiveData(meta, data, start, count);\n        }\n        var isNotInOrderComparedToPrev = function isNotInOrderComparedToPrev() {\n          return cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n        };\n        for (i = 0; i < count; ++i) {\n          meta._parsed[i + start] = cur = parsed[i];\n          if (sorted) {\n            if (isNotInOrderComparedToPrev()) {\n              sorted = false;\n            }\n            prev = cur;\n          }\n        }\n        meta._sorted = sorted;\n      }\n      if (_stacked) {\n        updateStacks(this, parsed);\n      }\n    }\n  }, {\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      var iScale = meta.iScale,\n        vScale = meta.vScale;\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var labels = iScale.getLabels();\n      var singleScale = iScale === vScale;\n      var parsed = new Array(count);\n      var i, ilen, index;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        parsed[i] = _defineProperty(_defineProperty({}, iAxis, singleScale || iScale.parse(labels[index], index)), vAxis, vScale.parse(data[index], index));\n      }\n      return parsed;\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      var xScale = meta.xScale,\n        yScale = meta.yScale;\n      var parsed = new Array(count);\n      var i, ilen, index, item;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(item[0], index),\n          y: yScale.parse(item[1], index)\n        };\n      }\n      return parsed;\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var xScale = meta.xScale,\n        yScale = meta.yScale;\n      var _this$_parsing = this._parsing,\n        _this$_parsing$xAxisK = _this$_parsing.xAxisKey,\n        xAxisKey = _this$_parsing$xAxisK === void 0 ? 'x' : _this$_parsing$xAxisK,\n        _this$_parsing$yAxisK = _this$_parsing.yAxisKey,\n        yAxisKey = _this$_parsing$yAxisK === void 0 ? 'y' : _this$_parsing$yAxisK;\n      var parsed = new Array(count);\n      var i, ilen, index, item;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n          y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n        };\n      }\n      return parsed;\n    }\n  }, {\n    key: \"getParsed\",\n    value: function getParsed(index) {\n      return this._cachedMeta._parsed[index];\n    }\n  }, {\n    key: \"getDataElement\",\n    value: function getDataElement(index) {\n      return this._cachedMeta.data[index];\n    }\n  }, {\n    key: \"applyStack\",\n    value: function applyStack(scale, parsed, mode) {\n      var chart = this.chart;\n      var meta = this._cachedMeta;\n      var value = parsed[scale.axis];\n      var stack = {\n        keys: getSortedDatasetIndices(chart, true),\n        values: parsed._stacks[scale.axis]\n      };\n      return _applyStack(stack, value, meta.index, {\n        mode: mode\n      });\n    }\n  }, {\n    key: \"updateRangeFromParsed\",\n    value: function updateRangeFromParsed(range, scale, parsed, stack) {\n      var parsedValue = parsed[scale.axis];\n      var value = parsedValue === null ? NaN : parsedValue;\n      var values = stack && parsed._stacks[scale.axis];\n      if (stack && values) {\n        stack.values = values;\n        value = _applyStack(stack, parsedValue, this._cachedMeta.index);\n      }\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax(scale, canStack) {\n      var meta = this._cachedMeta;\n      var _parsed = meta._parsed;\n      var sorted = meta._sorted && scale === meta.iScale;\n      var ilen = _parsed.length;\n      var otherScale = this._getOtherScale(scale);\n      var stack = createStack(canStack, meta, this.chart);\n      var range = {\n        min: Number.POSITIVE_INFINITY,\n        max: Number.NEGATIVE_INFINITY\n      };\n      var _getUserBounds = getUserBounds(otherScale),\n        otherMin = _getUserBounds.min,\n        otherMax = _getUserBounds.max;\n      var i, parsed;\n      function _skip() {\n        parsed = _parsed[i];\n        var otherValue = parsed[otherScale.axis];\n        return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n      }\n      for (i = 0; i < ilen; ++i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        if (sorted) {\n          break;\n        }\n      }\n      if (sorted) {\n        for (i = ilen - 1; i >= 0; --i) {\n          if (_skip()) {\n            continue;\n          }\n          this.updateRangeFromParsed(range, scale, parsed, stack);\n          break;\n        }\n      }\n      return range;\n    }\n  }, {\n    key: \"getAllParsedValues\",\n    value: function getAllParsedValues(scale) {\n      var parsed = this._cachedMeta._parsed;\n      var values = [];\n      var i, ilen, value;\n      for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n        value = parsed[i][scale.axis];\n        if (isNumberFinite(value)) {\n          values.push(value);\n        }\n      }\n      return values;\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      return false;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var iScale = meta.iScale;\n      var vScale = meta.vScale;\n      var parsed = this.getParsed(index);\n      return {\n        label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n        value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n      };\n    }\n  }, {\n    key: \"_update\",\n    value: function _update(mode) {\n      var meta = this._cachedMeta;\n      this.update(mode || 'default');\n      meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {}\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var ctx = this._ctx;\n      var chart = this.chart;\n      var meta = this._cachedMeta;\n      var elements = meta.data || [];\n      var area = chart.chartArea;\n      var active = [];\n      var start = this._drawStart || 0;\n      var count = this._drawCount || elements.length - start;\n      var drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n      var i;\n      if (meta.dataset) {\n        meta.dataset.draw(ctx, area, start, count);\n      }\n      for (i = start; i < start + count; ++i) {\n        var element = elements[i];\n        if (element.hidden) {\n          continue;\n        }\n        if (element.active && drawActiveElementsOnTop) {\n          active.push(element);\n        } else {\n          element.draw(ctx, area);\n        }\n      }\n      for (i = 0; i < active.length; ++i) {\n        active[i].draw(ctx, area);\n      }\n    }\n  }, {\n    key: \"getStyle\",\n    value: function getStyle(index, active) {\n      var mode = active ? 'active' : 'default';\n      return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext(index, active, mode) {\n      var dataset = this.getDataset();\n      var context;\n      if (index >= 0 && index < this._cachedMeta.data.length) {\n        var element = this._cachedMeta.data[index];\n        context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n        context.parsed = this.getParsed(index);\n        context.raw = dataset.data[index];\n        context.index = context.dataIndex = index;\n      } else {\n        context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n        context.dataset = dataset;\n        context.index = context.datasetIndex = this.index;\n      }\n      context.active = !!active;\n      context.mode = mode;\n      return context;\n    }\n  }, {\n    key: \"resolveDatasetElementOptions\",\n    value: function resolveDatasetElementOptions(mode) {\n      return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n  }, {\n    key: \"resolveDataElementOptions\",\n    value: function resolveDataElementOptions(index, mode) {\n      return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n  }, {\n    key: \"_resolveElementOptions\",\n    value: function _resolveElementOptions(elementType) {\n      var _this3 = this;\n      var mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n      var index = arguments.length > 2 ? arguments[2] : undefined;\n      var active = mode === 'active';\n      var cache = this._cachedDataOpts;\n      var cacheKey = elementType + '-' + mode;\n      var cached = cache[cacheKey];\n      var sharing = this.enableOptionSharing && defined(index);\n      if (cached) {\n        return cloneIfNotShared(cached, sharing);\n      }\n      var config = this.chart.config;\n      var scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n      var prefixes = active ? [\"\".concat(elementType, \"Hover\"), 'hover', elementType, ''] : [elementType, ''];\n      var scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      var names = Object.keys(defaults.elements[elementType]);\n      var context = function context() {\n        return _this3.getContext(index, active);\n      };\n      var values = config.resolveNamedOptions(scopes, names, context, prefixes);\n      if (values.$shared) {\n        values.$shared = sharing;\n        cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n      }\n      return values;\n    }\n  }, {\n    key: \"_resolveAnimations\",\n    value: function _resolveAnimations(index, transition, active) {\n      var chart = this.chart;\n      var cache = this._cachedDataOpts;\n      var cacheKey = \"animation-\".concat(transition);\n      var cached = cache[cacheKey];\n      if (cached) {\n        return cached;\n      }\n      var options;\n      if (chart.options.animation !== false) {\n        var config = this.chart.config;\n        var scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n        var scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        options = config.createResolver(scopes, this.getContext(index, active, transition));\n      }\n      var animations = new Animations(chart, options && options.animations);\n      if (options && options._cacheable) {\n        cache[cacheKey] = Object.freeze(animations);\n      }\n      return animations;\n    }\n  }, {\n    key: \"getSharedOptions\",\n    value: function getSharedOptions(options) {\n      if (!options.$shared) {\n        return;\n      }\n      return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n  }, {\n    key: \"includeOptions\",\n    value: function includeOptions(mode, sharedOptions) {\n      return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n  }, {\n    key: \"_getSharedOptions\",\n    value: function _getSharedOptions(start, mode) {\n      var firstOpts = this.resolveDataElementOptions(start, mode);\n      var previouslySharedOptions = this._sharedOptions;\n      var sharedOptions = this.getSharedOptions(firstOpts);\n      var includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n      return {\n        sharedOptions: sharedOptions,\n        includeOptions: includeOptions\n      };\n    }\n  }, {\n    key: \"updateElement\",\n    value: function updateElement(element, index, properties, mode) {\n      if (isDirectUpdateMode(mode)) {\n        Object.assign(element, properties);\n      } else {\n        this._resolveAnimations(index, mode).update(element, properties);\n      }\n    }\n  }, {\n    key: \"updateSharedOptions\",\n    value: function updateSharedOptions(sharedOptions, mode, newOptions) {\n      if (sharedOptions && !isDirectUpdateMode(mode)) {\n        this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n      }\n    }\n  }, {\n    key: \"_setStyle\",\n    value: function _setStyle(element, index, mode, active) {\n      element.active = active;\n      var options = this.getStyle(index, active);\n      this._resolveAnimations(index, mode, active).update(element, {\n        options: !active && this.getSharedOptions(options) || options\n      });\n    }\n  }, {\n    key: \"removeHoverStyle\",\n    value: function removeHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', false);\n    }\n  }, {\n    key: \"setHoverStyle\",\n    value: function setHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', true);\n    }\n  }, {\n    key: \"_removeDatasetHoverStyle\",\n    value: function _removeDatasetHoverStyle() {\n      var element = this._cachedMeta.dataset;\n      if (element) {\n        this._setStyle(element, undefined, 'active', false);\n      }\n    }\n  }, {\n    key: \"_setDatasetHoverStyle\",\n    value: function _setDatasetHoverStyle() {\n      var element = this._cachedMeta.dataset;\n      if (element) {\n        this._setStyle(element, undefined, 'active', true);\n      }\n    }\n  }, {\n    key: \"_resyncElements\",\n    value: function _resyncElements(resetNewElements) {\n      var data = this._data;\n      var elements = this._cachedMeta.data;\n      var _iterator3 = _createForOfIteratorHelper(this._syncList),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var _step3$value = _slicedToArray(_step3.value, 3),\n            method = _step3$value[0],\n            arg1 = _step3$value[1],\n            arg2 = _step3$value[2];\n          this[method](arg1, arg2);\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      this._syncList = [];\n      var numMeta = elements.length;\n      var numData = data.length;\n      var count = Math.min(numData, numMeta);\n      if (count) {\n        this.parse(0, count);\n      }\n      if (numData > numMeta) {\n        this._insertElements(numMeta, numData - numMeta, resetNewElements);\n      } else if (numData < numMeta) {\n        this._removeElements(numData, numMeta - numData);\n      }\n    }\n  }, {\n    key: \"_insertElements\",\n    value: function _insertElements(start, count) {\n      var resetNewElements = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var meta = this._cachedMeta;\n      var data = meta.data;\n      var end = start + count;\n      var i;\n      var move = function move(arr) {\n        arr.length += count;\n        for (i = arr.length - 1; i >= end; i--) {\n          arr[i] = arr[i - count];\n        }\n      };\n      move(data);\n      for (i = start; i < end; ++i) {\n        data[i] = new this.dataElementType();\n      }\n      if (this._parsing) {\n        move(meta._parsed);\n      }\n      this.parse(start, count);\n      if (resetNewElements) {\n        this.updateElements(data, start, count, 'reset');\n      }\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(element, start, count, mode) {}\n  }, {\n    key: \"_removeElements\",\n    value: function _removeElements(start, count) {\n      var meta = this._cachedMeta;\n      if (this._parsing) {\n        var removed = meta._parsed.splice(start, count);\n        if (meta._stacked) {\n          clearStacks(meta, removed);\n        }\n      }\n      meta.data.splice(start, count);\n    }\n  }, {\n    key: \"_sync\",\n    value: function _sync(args) {\n      if (this._parsing) {\n        this._syncList.push(args);\n      } else {\n        var _args2 = _slicedToArray(args, 3),\n          method = _args2[0],\n          arg1 = _args2[1],\n          arg2 = _args2[2];\n        this[method](arg1, arg2);\n      }\n      this.chart._dataChanges.push([this.index].concat(_toConsumableArray(args)));\n    }\n  }, {\n    key: \"_onDataPush\",\n    value: function _onDataPush() {\n      var count = arguments.length;\n      this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n    }\n  }, {\n    key: \"_onDataPop\",\n    value: function _onDataPop() {\n      this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n    }\n  }, {\n    key: \"_onDataShift\",\n    value: function _onDataShift() {\n      this._sync(['_removeElements', 0, 1]);\n    }\n  }, {\n    key: \"_onDataSplice\",\n    value: function _onDataSplice(start, count) {\n      if (count) {\n        this._sync(['_removeElements', start, count]);\n      }\n      var newCount = arguments.length - 2;\n      if (newCount) {\n        this._sync(['_insertElements', start, newCount]);\n      }\n    }\n  }, {\n    key: \"_onDataUnshift\",\n    value: function _onDataUnshift() {\n      this._sync(['_insertElements', 0, arguments.length]);\n    }\n  }]);\n}();\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    var visibleMetas = scale.getMatchingVisibleMetas(type);\n    var values = [];\n    for (var i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort(function (a, b) {\n      return a - b;\n    }));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  var scale = meta.iScale;\n  var values = getAllScaleValues(scale, meta.type);\n  var min = scale._length;\n  var i, ilen, curr, prev;\n  var updateMinAndPrev = function updateMinAndPrev() {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  var thickness = options.barThickness;\n  var size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio: ratio,\n    start: ruler.pixels[index] - size / 2\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  var pixels = ruler.pixels;\n  var curr = pixels[index];\n  var prev = index > 0 ? pixels[index - 1] : null;\n  var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  var percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  var start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  var size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start: start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  var startValue = vScale.parse(entry[0], i);\n  var endValue = vScale.parse(entry[1], i);\n  var min = Math.min(startValue, endValue);\n  var max = Math.max(startValue, endValue);\n  var barStart = min;\n  var barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart: barStart,\n    barEnd: barEnd,\n    start: startValue,\n    end: endValue,\n    min: min,\n    max: max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  var iScale = meta.iScale;\n  var vScale = meta.vScale;\n  var labels = iScale.getLabels();\n  var singleScale = iScale === vScale;\n  var parsed = [];\n  var i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  var reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {\n    start: start,\n    end: end,\n    reverse: reverse,\n    top: top,\n    bottom: bottom\n  };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  var edge = options.borderSkipped;\n  var res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  if (edge === true) {\n    properties.borderSkipped = {\n      top: true,\n      right: true,\n      bottom: true,\n      left: true\n    };\n    return;\n  }\n  var _borderProps = borderProps(properties),\n    start = _borderProps.start,\n    end = _borderProps.end,\n    reverse = _borderProps.reverse,\n    top = _borderProps.top,\n    bottom = _borderProps.bottom;\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, _ref, ratio) {\n  var inflateAmount = _ref.inflateAmount;\n  properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nvar BarController = /*#__PURE__*/function (_DatasetController) {\n  function BarController() {\n    _classCallCheck(this, BarController);\n    return _callSuper(this, BarController, arguments);\n  }\n  _inherits(BarController, _DatasetController);\n  return _createClass(BarController, [{\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var iScale = meta.iScale,\n        vScale = meta.vScale;\n      var _this$_parsing2 = this._parsing,\n        _this$_parsing2$xAxis = _this$_parsing2.xAxisKey,\n        xAxisKey = _this$_parsing2$xAxis === void 0 ? 'x' : _this$_parsing2$xAxis,\n        _this$_parsing2$yAxis = _this$_parsing2.yAxisKey,\n        yAxisKey = _this$_parsing2$yAxis === void 0 ? 'y' : _this$_parsing2$yAxis;\n      var iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n      var vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n      var parsed = [];\n      var i, ilen, item, obj;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        obj = data[i];\n        item = {};\n        item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n        parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n      }\n      return parsed;\n    }\n  }, {\n    key: \"updateRangeFromParsed\",\n    value: function updateRangeFromParsed(range, scale, parsed, stack) {\n      _superPropGet(BarController, \"updateRangeFromParsed\", this, 3)([range, scale, parsed, stack]);\n      var custom = parsed._custom;\n      if (custom && scale === this._cachedMeta.vScale) {\n        range.min = Math.min(range.min, custom.min);\n        range.max = Math.max(range.max, custom.max);\n      }\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      return 0;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var iScale = meta.iScale,\n        vScale = meta.vScale;\n      var parsed = this.getParsed(index);\n      var custom = parsed._custom;\n      var value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n      return {\n        label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n        value: value\n      };\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n      _superPropGet(BarController, \"initialize\", this, 3)([]);\n      var meta = this._cachedMeta;\n      meta.stack = this.getDataset().stack;\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(bars, start, count, mode) {\n      var reset = mode === 'reset';\n      var index = this.index,\n        vScale = this._cachedMeta.vScale;\n      var base = vScale.getBasePixel();\n      var horizontal = vScale.isHorizontal();\n      var ruler = this._getRuler();\n      var _this$_getSharedOptio = this._getSharedOptions(start, mode),\n        sharedOptions = _this$_getSharedOptio.sharedOptions,\n        includeOptions = _this$_getSharedOptio.includeOptions;\n      for (var i = start; i < start + count; i++) {\n        var parsed = this.getParsed(i);\n        var vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n          base: base,\n          head: base\n        } : this._calculateBarValuePixels(i);\n        var ipixels = this._calculateBarIndexPixels(i, ruler);\n        var stack = (parsed._stacks || {})[vScale.axis];\n        var properties = {\n          horizontal: horizontal,\n          base: vpixels.base,\n          enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n          x: horizontal ? vpixels.head : ipixels.center,\n          y: horizontal ? ipixels.center : vpixels.head,\n          height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n          width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n        };\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n        }\n        var options = properties.options || bars[i].options;\n        setBorderSkipped(properties, options, stack, index);\n        setInflateAmount(properties, options, ruler.ratio);\n        this.updateElement(bars[i], i, properties, mode);\n      }\n    }\n  }, {\n    key: \"_getStacks\",\n    value: function _getStacks(last, dataIndex) {\n      var iScale = this._cachedMeta.iScale;\n      var metasets = iScale.getMatchingVisibleMetas(this._type).filter(function (meta) {\n        return meta.controller.options.grouped;\n      });\n      var stacked = iScale.options.stacked;\n      var stacks = [];\n      var skipNull = function skipNull(meta) {\n        var parsed = meta.controller.getParsed(dataIndex);\n        var val = parsed && parsed[meta.vScale.axis];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          return true;\n        }\n      };\n      var _iterator4 = _createForOfIteratorHelper(metasets),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var meta = _step4.value;\n          if (dataIndex !== undefined && skipNull(meta)) {\n            continue;\n          }\n          if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n            stacks.push(meta.stack);\n          }\n          if (meta.index === last) {\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n      if (!stacks.length) {\n        stacks.push(undefined);\n      }\n      return stacks;\n    }\n  }, {\n    key: \"_getStackCount\",\n    value: function _getStackCount(index) {\n      return this._getStacks(undefined, index).length;\n    }\n  }, {\n    key: \"_getStackIndex\",\n    value: function _getStackIndex(datasetIndex, name, dataIndex) {\n      var stacks = this._getStacks(datasetIndex, dataIndex);\n      var index = name !== undefined ? stacks.indexOf(name) : -1;\n      return index === -1 ? stacks.length - 1 : index;\n    }\n  }, {\n    key: \"_getRuler\",\n    value: function _getRuler() {\n      var opts = this.options;\n      var meta = this._cachedMeta;\n      var iScale = meta.iScale;\n      var pixels = [];\n      var i, ilen;\n      for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n        pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n      }\n      var barThickness = opts.barThickness;\n      var min = barThickness || computeMinSampleSize(meta);\n      return {\n        min: min,\n        pixels: pixels,\n        start: iScale._startPixel,\n        end: iScale._endPixel,\n        stackCount: this._getStackCount(),\n        scale: iScale,\n        grouped: opts.grouped,\n        ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n      };\n    }\n  }, {\n    key: \"_calculateBarValuePixels\",\n    value: function _calculateBarValuePixels(index) {\n      var _this$_cachedMeta = this._cachedMeta,\n        vScale = _this$_cachedMeta.vScale,\n        _stacked = _this$_cachedMeta._stacked,\n        _this$options = this.options,\n        baseValue = _this$options.base,\n        minBarLength = _this$options.minBarLength;\n      var actualBase = baseValue || 0;\n      var parsed = this.getParsed(index);\n      var custom = parsed._custom;\n      var floating = isFloatBar(custom);\n      var value = parsed[vScale.axis];\n      var start = 0;\n      var length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n      var head, size;\n      if (length !== value) {\n        start = length - value;\n        length = value;\n      }\n      if (floating) {\n        value = custom.barStart;\n        length = custom.barEnd - custom.barStart;\n        if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n          start = 0;\n        }\n        start += value;\n      }\n      var startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n      var base = vScale.getPixelForValue(startValue);\n      if (this.chart.getDataVisibility(index)) {\n        head = vScale.getPixelForValue(start + length);\n      } else {\n        head = base;\n      }\n      size = head - base;\n      if (Math.abs(size) < minBarLength) {\n        size = barSign(size, vScale, actualBase) * minBarLength;\n        if (value === actualBase) {\n          base -= size / 2;\n        }\n        var startPixel = vScale.getPixelForDecimal(0);\n        var endPixel = vScale.getPixelForDecimal(1);\n        var min = Math.min(startPixel, endPixel);\n        var max = Math.max(startPixel, endPixel);\n        base = Math.max(Math.min(base, max), min);\n        head = base + size;\n      }\n      if (base === vScale.getPixelForValue(actualBase)) {\n        var halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n        base += halfGrid;\n        size -= halfGrid;\n      }\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    }\n  }, {\n    key: \"_calculateBarIndexPixels\",\n    value: function _calculateBarIndexPixels(index, ruler) {\n      var scale = ruler.scale;\n      var options = this.options;\n      var skipNull = options.skipNull;\n      var maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n      var center, size;\n      if (ruler.grouped) {\n        var stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n        var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n        var stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n        center = range.start + range.chunk * stackIndex + range.chunk / 2;\n        size = Math.min(maxBarThickness, range.chunk * range.ratio);\n      } else {\n        center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n        size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n      }\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var meta = this._cachedMeta;\n      var vScale = meta.vScale;\n      var rects = meta.data;\n      var ilen = rects.length;\n      var i = 0;\n      for (; i < ilen; ++i) {\n        if (this.getParsed(i)[vScale.axis] !== null) {\n          rects[i].draw(this._ctx);\n        }\n      }\n    }\n  }]);\n}(DatasetController);\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true\n    }\n  }\n};\nvar BubbleController = /*#__PURE__*/function (_DatasetController2) {\n  function BubbleController() {\n    _classCallCheck(this, BubbleController);\n    return _callSuper(this, BubbleController, arguments);\n  }\n  _inherits(BubbleController, _DatasetController2);\n  return _createClass(BubbleController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n      _superPropGet(BubbleController, \"initialize\", this, 3)([]);\n    }\n  }, {\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      var parsed = _superPropGet(BubbleController, \"parsePrimitiveData\", this, 3)([meta, data, start, count]);\n      for (var i = 0; i < parsed.length; i++) {\n        parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n      }\n      return parsed;\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      var parsed = _superPropGet(BubbleController, \"parseArrayData\", this, 3)([meta, data, start, count]);\n      for (var i = 0; i < parsed.length; i++) {\n        var item = data[start + i];\n        parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n      }\n      return parsed;\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var parsed = _superPropGet(BubbleController, \"parseObjectData\", this, 3)([meta, data, start, count]);\n      for (var i = 0; i < parsed.length; i++) {\n        var item = data[start + i];\n        parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n      }\n      return parsed;\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var data = this._cachedMeta.data;\n      var max = 0;\n      for (var i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var xScale = meta.xScale,\n        yScale = meta.yScale;\n      var parsed = this.getParsed(index);\n      var x = xScale.getLabelForValue(parsed.x);\n      var y = yScale.getLabelForValue(parsed.y);\n      var r = parsed._custom;\n      return {\n        label: meta.label,\n        value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var points = this._cachedMeta.data;\n      this.updateElements(points, 0, points.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var reset = mode === 'reset';\n      var _this$_cachedMeta2 = this._cachedMeta,\n        iScale = _this$_cachedMeta2.iScale,\n        vScale = _this$_cachedMeta2.vScale;\n      var _this$_getSharedOptio2 = this._getSharedOptions(start, mode),\n        sharedOptions = _this$_getSharedOptio2.sharedOptions,\n        includeOptions = _this$_getSharedOptio2.includeOptions;\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      for (var i = start; i < start + count; i++) {\n        var point = points[i];\n        var parsed = !reset && this.getParsed(i);\n        var properties = {};\n        var iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n        var vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel);\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n          if (reset) {\n            properties.options.radius = 0;\n          }\n        }\n        this.updateElement(point, i, properties, mode);\n      }\n    }\n  }, {\n    key: \"resolveDataElementOptions\",\n    value: function resolveDataElementOptions(index, mode) {\n      var parsed = this.getParsed(index);\n      var values = _superPropGet(BubbleController, \"resolveDataElementOptions\", this, 3)([index, mode]);\n      if (values.$shared) {\n        values = Object.assign({}, values, {\n          $shared: false\n        });\n      }\n      var radius = values.radius;\n      if (mode !== 'active') {\n        values.radius = 0;\n      }\n      values.radius += valueOrDefault(parsed && parsed._custom, radius);\n      return values;\n    }\n  }]);\n}(DatasetController);\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        }\n      }\n    }\n  }\n};\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  var ratioX = 1;\n  var ratioY = 1;\n  var offsetX = 0;\n  var offsetY = 0;\n  if (circumference < TAU) {\n    var startAngle = rotation;\n    var endAngle = startAngle + circumference;\n    var startX = Math.cos(startAngle);\n    var startY = Math.sin(startAngle);\n    var endX = Math.cos(endAngle);\n    var endY = Math.sin(endAngle);\n    var calcMax = function calcMax(angle, a, b) {\n      return _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    };\n    var calcMin = function calcMin(angle, a, b) {\n      return _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    };\n    var maxX = calcMax(0, startX, endX);\n    var maxY = calcMax(HALF_PI, startY, endY);\n    var minX = calcMin(PI, startX, endX);\n    var minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {\n    ratioX: ratioX,\n    ratioY: ratioY,\n    offsetX: offsetX,\n    offsetY: offsetY\n  };\n}\nvar DoughnutController = /*#__PURE__*/function (_DatasetController3) {\n  function DoughnutController(chart, datasetIndex) {\n    var _this4;\n    _classCallCheck(this, DoughnutController);\n    _this4 = _callSuper(this, DoughnutController, [chart, datasetIndex]);\n    _this4.enableOptionSharing = true;\n    _this4.innerRadius = undefined;\n    _this4.outerRadius = undefined;\n    _this4.offsetX = undefined;\n    _this4.offsetY = undefined;\n    return _this4;\n  }\n  _inherits(DoughnutController, _DatasetController3);\n  return _createClass(DoughnutController, [{\n    key: \"linkScales\",\n    value: function linkScales() {}\n  }, {\n    key: \"parse\",\n    value: function parse(start, count) {\n      var data = this.getDataset().data;\n      var meta = this._cachedMeta;\n      if (this._parsing === false) {\n        meta._parsed = data;\n      } else {\n        var getter = function getter(i) {\n          return +data[i];\n        };\n        if (isObject(data[start])) {\n          var _this$_parsing$key = this._parsing.key,\n            key = _this$_parsing$key === void 0 ? 'value' : _this$_parsing$key;\n          getter = function getter(i) {\n            return +resolveObjectKey(data[i], key);\n          };\n        }\n        var i, ilen;\n        for (i = start, ilen = start + count; i < ilen; ++i) {\n          meta._parsed[i] = getter(i);\n        }\n      }\n    }\n  }, {\n    key: \"_getRotation\",\n    value: function _getRotation() {\n      return toRadians(this.options.rotation - 90);\n    }\n  }, {\n    key: \"_getCircumference\",\n    value: function _getCircumference() {\n      return toRadians(this.options.circumference);\n    }\n  }, {\n    key: \"_getRotationExtents\",\n    value: function _getRotationExtents() {\n      var min = TAU;\n      var max = -TAU;\n      for (var i = 0; i < this.chart.data.datasets.length; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          var controller = this.chart.getDatasetMeta(i).controller;\n          var rotation = controller._getRotation();\n          var circumference = controller._getCircumference();\n          min = Math.min(min, rotation);\n          max = Math.max(max, rotation + circumference);\n        }\n      }\n      return {\n        rotation: min,\n        circumference: max - min\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var chart = this.chart;\n      var chartArea = chart.chartArea;\n      var meta = this._cachedMeta;\n      var arcs = meta.data;\n      var spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n      var maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n      var cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n      var chartWeight = this._getRingWeight(this.index);\n      var _this$_getRotationExt = this._getRotationExtents(),\n        circumference = _this$_getRotationExt.circumference,\n        rotation = _this$_getRotationExt.rotation;\n      var _getRatioAndOffset = getRatioAndOffset(rotation, circumference, cutout),\n        ratioX = _getRatioAndOffset.ratioX,\n        ratioY = _getRatioAndOffset.ratioY,\n        offsetX = _getRatioAndOffset.offsetX,\n        offsetY = _getRatioAndOffset.offsetY;\n      var maxWidth = (chartArea.width - spacing) / ratioX;\n      var maxHeight = (chartArea.height - spacing) / ratioY;\n      var maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n      var outerRadius = toDimension(this.options.radius, maxRadius);\n      var innerRadius = Math.max(outerRadius * cutout, 0);\n      var radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n      this.offsetX = offsetX * outerRadius;\n      this.offsetY = offsetY * outerRadius;\n      meta.total = this.calculateTotal();\n      this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n      this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n      this.updateElements(arcs, 0, arcs.length, mode);\n    }\n  }, {\n    key: \"_circumference\",\n    value: function _circumference(i, reset) {\n      var opts = this.options;\n      var meta = this._cachedMeta;\n      var circumference = this._getCircumference();\n      if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n        return 0;\n      }\n      return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(arcs, start, count, mode) {\n      var reset = mode === 'reset';\n      var chart = this.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var animateScale = reset && animationOpts.animateScale;\n      var innerRadius = animateScale ? 0 : this.innerRadius;\n      var outerRadius = animateScale ? 0 : this.outerRadius;\n      var _this$_getSharedOptio3 = this._getSharedOptions(start, mode),\n        sharedOptions = _this$_getSharedOptio3.sharedOptions,\n        includeOptions = _this$_getSharedOptio3.includeOptions;\n      var startAngle = this._getRotation();\n      var i;\n      for (i = 0; i < start; ++i) {\n        startAngle += this._circumference(i, reset);\n      }\n      for (i = start; i < start + count; ++i) {\n        var circumference = this._circumference(i, reset);\n        var arc = arcs[i];\n        var properties = {\n          x: centerX + this.offsetX,\n          y: centerY + this.offsetY,\n          startAngle: startAngle,\n          endAngle: startAngle + circumference,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius\n        };\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n        }\n        startAngle += circumference;\n        this.updateElement(arc, i, properties, mode);\n      }\n    }\n  }, {\n    key: \"calculateTotal\",\n    value: function calculateTotal() {\n      var meta = this._cachedMeta;\n      var metaData = meta.data;\n      var total = 0;\n      var i;\n      for (i = 0; i < metaData.length; i++) {\n        var value = meta._parsed[i];\n        if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n          total += Math.abs(value);\n        }\n      }\n      return total;\n    }\n  }, {\n    key: \"calculateCircumference\",\n    value: function calculateCircumference(value) {\n      var total = this._cachedMeta.total;\n      if (total > 0 && !isNaN(value)) {\n        return TAU * (Math.abs(value) / total);\n      }\n      return 0;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var chart = this.chart;\n      var labels = chart.data.labels || [];\n      var value = formatNumber(meta._parsed[index], chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value: value\n      };\n    }\n  }, {\n    key: \"getMaxBorderWidth\",\n    value: function getMaxBorderWidth(arcs) {\n      var max = 0;\n      var chart = this.chart;\n      var i, ilen, meta, controller, options;\n      if (!arcs) {\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n            controller = meta.controller;\n            break;\n          }\n        }\n      }\n      if (!arcs) {\n        return 0;\n      }\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        options = controller.resolveDataElementOptions(i);\n        if (options.borderAlign !== 'inner') {\n          max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n        }\n      }\n      return max;\n    }\n  }, {\n    key: \"getMaxOffset\",\n    value: function getMaxOffset(arcs) {\n      var max = 0;\n      for (var i = 0, ilen = arcs.length; i < ilen; ++i) {\n        var options = this.resolveDataElementOptions(i);\n        max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n      }\n      return max;\n    }\n  }, {\n    key: \"_getRingWeightOffset\",\n    value: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n      return ringWeightOffset;\n    }\n  }, {\n    key: \"_getRingWeight\",\n    value: function _getRingWeight(datasetIndex) {\n      return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n  }, {\n    key: \"_getVisibleDatasetWeightTotal\",\n    value: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n  }]);\n}(DatasetController);\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    }\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r'\n};\nDoughnutController.descriptors = {\n  _scriptable: function _scriptable(name) {\n    return name !== 'spacing';\n  },\n  _indexable: function _indexable(name) {\n    return name !== 'spacing';\n  }\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            var pointStyle = chart.legend.options.labels.pointStyle;\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem) {\n          var dataLabel = tooltipItem.label;\n          var value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\nvar LineController = /*#__PURE__*/function (_DatasetController4) {\n  function LineController() {\n    _classCallCheck(this, LineController);\n    return _callSuper(this, LineController, arguments);\n  }\n  _inherits(LineController, _DatasetController4);\n  return _createClass(LineController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n      this.supportsDecimation = true;\n      _superPropGet(LineController, \"initialize\", this, 3)([]);\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      var line = meta.dataset,\n        _meta$data = meta.data,\n        points = _meta$data === void 0 ? [] : _meta$data,\n        _dataset = meta._dataset;\n      var animationsDisabled = this.chart._animationsDisabled;\n      var _getStartAndCountOfVi = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled),\n        start = _getStartAndCountOfVi.start,\n        count = _getStartAndCountOfVi.count;\n      this._drawStart = start;\n      this._drawCount = count;\n      if (_scaleRangesChanged(meta)) {\n        start = 0;\n        count = points.length;\n      }\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      var options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options: options\n      }, mode);\n      this.updateElements(points, start, count, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var reset = mode === 'reset';\n      var _this$_cachedMeta3 = this._cachedMeta,\n        iScale = _this$_cachedMeta3.iScale,\n        vScale = _this$_cachedMeta3.vScale,\n        _stacked = _this$_cachedMeta3._stacked,\n        _dataset = _this$_cachedMeta3._dataset;\n      var _this$_getSharedOptio4 = this._getSharedOptions(start, mode),\n        sharedOptions = _this$_getSharedOptio4.sharedOptions,\n        includeOptions = _this$_getSharedOptio4.includeOptions;\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var _this$options2 = this.options,\n        spanGaps = _this$options2.spanGaps,\n        segment = _this$options2.segment;\n      var maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n      var directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n      var prevParsed = start > 0 && this.getParsed(start - 1);\n      for (var i = start; i < start + count; ++i) {\n        var point = points[i];\n        var parsed = this.getParsed(i);\n        var properties = directUpdate ? point : {};\n        var nullData = isNullOrUndef(parsed[vAxis]);\n        var iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n        var vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n        properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n        if (segment) {\n          properties.parsed = parsed;\n          properties.raw = _dataset.data[i];\n        }\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        }\n        if (!directUpdate) {\n          this.updateElement(point, i, properties, mode);\n        }\n        prevParsed = parsed;\n      }\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var meta = this._cachedMeta;\n      var dataset = meta.dataset;\n      var border = dataset.options && dataset.options.borderWidth || 0;\n      var data = meta.data || [];\n      if (!data.length) {\n        return border;\n      }\n      var firstPoint = data[0].size(this.resolveDataElementOptions(0));\n      var lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n      return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var meta = this._cachedMeta;\n      meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n      _superPropGet(LineController, \"draw\", this, 3)([]);\n    }\n  }]);\n}(DatasetController);\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category'\n    },\n    _value_: {\n      type: 'linear'\n    }\n  }\n};\nvar PolarAreaController = /*#__PURE__*/function (_DatasetController5) {\n  function PolarAreaController(chart, datasetIndex) {\n    var _this5;\n    _classCallCheck(this, PolarAreaController);\n    _this5 = _callSuper(this, PolarAreaController, [chart, datasetIndex]);\n    _this5.innerRadius = undefined;\n    _this5.outerRadius = undefined;\n    return _this5;\n  }\n  _inherits(PolarAreaController, _DatasetController5);\n  return _createClass(PolarAreaController, [{\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var chart = this.chart;\n      var labels = chart.data.labels || [];\n      var value = formatNumber(meta._parsed[index].r, chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value: value\n      };\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var arcs = this._cachedMeta.data;\n      this._updateRadius();\n      this.updateElements(arcs, 0, arcs.length, mode);\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax() {\n      var _this6 = this;\n      var meta = this._cachedMeta;\n      var range = {\n        min: Number.POSITIVE_INFINITY,\n        max: Number.NEGATIVE_INFINITY\n      };\n      meta.data.forEach(function (element, index) {\n        var parsed = _this6.getParsed(index).r;\n        if (!isNaN(parsed) && _this6.chart.getDataVisibility(index)) {\n          if (parsed < range.min) {\n            range.min = parsed;\n          }\n          if (parsed > range.max) {\n            range.max = parsed;\n          }\n        }\n      });\n      return range;\n    }\n  }, {\n    key: \"_updateRadius\",\n    value: function _updateRadius() {\n      var chart = this.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      var outerRadius = Math.max(minSize / 2, 0);\n      var innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      var radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n      this.outerRadius = outerRadius - radiusLength * this.index;\n      this.innerRadius = this.outerRadius - radiusLength;\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(arcs, start, count, mode) {\n      var reset = mode === 'reset';\n      var chart = this.chart;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = this._cachedMeta.rScale;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter;\n      var datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n      var angle = datasetStartAngle;\n      var i;\n      var defaultAngle = 360 / this.countVisibleElements();\n      for (i = 0; i < start; ++i) {\n        angle += this._computeAngle(i, mode, defaultAngle);\n      }\n      for (i = start; i < start + count; i++) {\n        var arc = arcs[i];\n        var startAngle = angle;\n        var endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n        var outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n        angle = endAngle;\n        if (reset) {\n          if (animationOpts.animateScale) {\n            outerRadius = 0;\n          }\n          if (animationOpts.animateRotate) {\n            startAngle = endAngle = datasetStartAngle;\n          }\n        }\n        var properties = {\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: outerRadius,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n        };\n        this.updateElement(arc, i, properties, mode);\n      }\n    }\n  }, {\n    key: \"countVisibleElements\",\n    value: function countVisibleElements() {\n      var _this7 = this;\n      var meta = this._cachedMeta;\n      var count = 0;\n      meta.data.forEach(function (element, index) {\n        if (!isNaN(_this7.getParsed(index).r) && _this7.chart.getDataVisibility(index)) {\n          count++;\n        }\n      });\n      return count;\n    }\n  }, {\n    key: \"_computeAngle\",\n    value: function _computeAngle(index, mode, defaultAngle) {\n      return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n  }]);\n}(DatasetController);\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    }\n  },\n  indexAxis: 'r',\n  startAngle: 0\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            var pointStyle = chart.legend.options.labels.pointStyle;\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\nvar PieController = /*#__PURE__*/function (_DoughnutController) {\n  function PieController() {\n    _classCallCheck(this, PieController);\n    return _callSuper(this, PieController, arguments);\n  }\n  _inherits(PieController, _DoughnutController);\n  return _createClass(PieController);\n}(DoughnutController);\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\nvar RadarController = /*#__PURE__*/function (_DatasetController6) {\n  function RadarController() {\n    _classCallCheck(this, RadarController);\n    return _callSuper(this, RadarController, arguments);\n  }\n  _inherits(RadarController, _DatasetController6);\n  return _createClass(RadarController, [{\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var vScale = this._cachedMeta.vScale;\n      var parsed = this.getParsed(index);\n      return {\n        label: vScale.getLabels()[index],\n        value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n      };\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var labels = meta.iScale.getLabels();\n      line.points = points;\n      if (mode !== 'resize') {\n        var options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n          options.borderWidth = 0;\n        }\n        var properties = {\n          _loop: true,\n          _fullLoop: labels.length === points.length,\n          options: options\n        };\n        this.updateElement(line, undefined, properties, mode);\n      }\n      this.updateElements(points, 0, points.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var scale = this._cachedMeta.rScale;\n      var reset = mode === 'reset';\n      for (var i = start; i < start + count; i++) {\n        var point = points[i];\n        var options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        var pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n        var x = reset ? scale.xCenter : pointPosition.x;\n        var y = reset ? scale.yCenter : pointPosition.y;\n        var properties = {\n          x: x,\n          y: y,\n          angle: pointPosition.angle,\n          skip: isNaN(x) || isNaN(y),\n          options: options\n        };\n        this.updateElement(point, i, properties, mode);\n      }\n    }\n  }]);\n}(DatasetController);\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  }\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear'\n    }\n  }\n};\nvar Element = /*#__PURE__*/function () {\n  function Element() {\n    _classCallCheck(this, Element);\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  return _createClass(Element, [{\n    key: \"tooltipPosition\",\n    value: function tooltipPosition(useFinalPosition) {\n      var _this$getProps = this.getProps(['x', 'y'], useFinalPosition),\n        x = _this$getProps.x,\n        y = _this$getProps.y;\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }, {\n    key: \"hasValue\",\n    value: function hasValue() {\n      return isNumber(this.x) && isNumber(this.y);\n    }\n  }, {\n    key: \"getProps\",\n    value: function getProps(props, _final) {\n      var _this8 = this;\n      var anims = this.$animations;\n      if (!_final || !anims) {\n        return this;\n      }\n      var ret = {};\n      props.forEach(function (prop) {\n        ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : _this8[prop];\n      });\n      return ret;\n    }\n  }]);\n}();\nElement.defaults = {};\nElement.defaultRoutes = undefined;\nvar formatters = {\n  values: function values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric: function numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    var locale = this.chart.options.locale;\n    var notation;\n    var delta = tickValue;\n    if (ticks.length > 1) {\n      var maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    var logDelta = log10(Math.abs(delta));\n    var numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    var options = {\n      notation: notation,\n      minimumFractionDigits: numDecimal,\n      maximumFractionDigits: numDecimal\n    };\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic: function logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    var remain = tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  var delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {\n  formatters: formatters\n};\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: function tickWidth(_ctx, options) {\n      return options.lineWidth;\n    },\n    tickColor: function tickColor(_ctx, options) {\n      return options.color;\n    },\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: function _scriptable(name) {\n    return !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser';\n  },\n  _indexable: function _indexable(name) {\n    return name !== 'borderDash' && name !== 'tickBorderDash';\n  }\n});\ndefaults.describe('scales', {\n  _fallback: 'scale'\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: function _scriptable(name) {\n    return name !== 'backdropPadding' && name !== 'callback';\n  },\n  _indexable: function _indexable(name) {\n    return name !== 'backdropPadding';\n  }\n});\nfunction autoSkip(scale, ticks) {\n  var tickOpts = scale.options.ticks;\n  var ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  var majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  var numMajorIndices = majorIndices.length;\n  var first = majorIndices[0];\n  var last = majorIndices[numMajorIndices - 1];\n  var newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  var spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    var i, ilen;\n    var avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  var offset = scale.options.offset;\n  var tickLength = scale._tickSize();\n  var maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  var maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  var evenMajorSpacing = getEvenSpacing(majorIndices);\n  var spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  var factors = _factorize(evenMajorSpacing);\n  for (var i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    var factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  var result = [];\n  var i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  var count = 0;\n  var next = majorIndices[0];\n  var i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  var start = valueOrDefault(majorStart, 0);\n  var end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  var count = 0;\n  var length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  var len = arr.length;\n  var i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\nvar reverseAlign = function reverseAlign(align) {\n  return align === 'left' ? 'right' : align === 'right' ? 'left' : align;\n};\nvar offsetFromEdge = function offsetFromEdge(scale, edge, offset) {\n  return edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n};\nfunction sample(arr, numItems) {\n  var result = [];\n  var increment = arr.length / numItems;\n  var len = arr.length;\n  var i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  var length = scale.ticks.length;\n  var validIndex = Math.min(index, length - 1);\n  var start = scale._startPixel;\n  var end = scale._endPixel;\n  var epsilon = 1e-6;\n  var lineValue = scale.getPixelForTick(validIndex);\n  var offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, function (cache) {\n    var gc = cache.gc;\n    var gcLen = gc.length / 2;\n    var i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  var font = toFont(options.font, fallback);\n  var padding = toPadding(options.padding);\n  var lines = isArray(options.text) ? options.text.length : 1;\n  return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale: scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick: tick,\n    index: index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  var ret = _toLeftRightCenter(align);\n  if (reverse && position !== 'right' || !reverse && position === 'right') {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  var top = scale.top,\n    left = scale.left,\n    bottom = scale.bottom,\n    right = scale.right,\n    chart = scale.chart;\n  var chartArea = chart.chartArea,\n    scales = chart.scales;\n  var rotation = 0;\n  var maxWidth, titleX, titleY;\n  var height = bottom - top;\n  var width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      var positionAxisID = Object.keys(position)[0];\n      var value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      var _positionAxisID = Object.keys(position)[0];\n      var _value = position[_positionAxisID];\n      titleX = scales[_positionAxisID].getPixelForValue(_value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {\n    titleX: titleX,\n    titleY: titleY,\n    maxWidth: maxWidth,\n    rotation: rotation\n  };\n}\nvar Scale = /*#__PURE__*/function (_Element) {\n  function Scale(cfg) {\n    var _this9;\n    _classCallCheck(this, Scale);\n    _this9 = _callSuper(this, Scale);\n    _this9.id = cfg.id;\n    _this9.type = cfg.type;\n    _this9.options = undefined;\n    _this9.ctx = cfg.ctx;\n    _this9.chart = cfg.chart;\n    _this9.top = undefined;\n    _this9.bottom = undefined;\n    _this9.left = undefined;\n    _this9.right = undefined;\n    _this9.width = undefined;\n    _this9.height = undefined;\n    _this9._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    _this9.maxWidth = undefined;\n    _this9.maxHeight = undefined;\n    _this9.paddingTop = undefined;\n    _this9.paddingBottom = undefined;\n    _this9.paddingLeft = undefined;\n    _this9.paddingRight = undefined;\n    _this9.axis = undefined;\n    _this9.labelRotation = undefined;\n    _this9.min = undefined;\n    _this9.max = undefined;\n    _this9._range = undefined;\n    _this9.ticks = [];\n    _this9._gridLineItems = null;\n    _this9._labelItems = null;\n    _this9._labelSizes = null;\n    _this9._length = 0;\n    _this9._maxLength = 0;\n    _this9._longestTextCache = {};\n    _this9._startPixel = undefined;\n    _this9._endPixel = undefined;\n    _this9._reversePixels = false;\n    _this9._userMax = undefined;\n    _this9._userMin = undefined;\n    _this9._suggestedMax = undefined;\n    _this9._suggestedMin = undefined;\n    _this9._ticksLength = 0;\n    _this9._borderValue = 0;\n    _this9._cache = {};\n    _this9._dataLimitsCached = false;\n    _this9.$context = undefined;\n    return _this9;\n  }\n  _inherits(Scale, _Element);\n  return _createClass(Scale, [{\n    key: \"init\",\n    value: function init(options) {\n      this.options = options.setContext(this.getContext());\n      this.axis = options.axis;\n      this._userMin = this.parse(options.min);\n      this._userMax = this.parse(options.max);\n      this._suggestedMin = this.parse(options.suggestedMin);\n      this._suggestedMax = this.parse(options.suggestedMax);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      return raw;\n    }\n  }, {\n    key: \"getUserBounds\",\n    value: function getUserBounds() {\n      var _userMin = this._userMin,\n        _userMax = this._userMax,\n        _suggestedMin = this._suggestedMin,\n        _suggestedMax = this._suggestedMax;\n      _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n      _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n      _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n      _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n      return {\n        min: finiteOrDefault(_userMin, _suggestedMin),\n        max: finiteOrDefault(_userMax, _suggestedMax),\n        minDefined: isNumberFinite(_userMin),\n        maxDefined: isNumberFinite(_userMax)\n      };\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax(canStack) {\n      var _this$getUserBounds = this.getUserBounds(),\n        min = _this$getUserBounds.min,\n        max = _this$getUserBounds.max,\n        minDefined = _this$getUserBounds.minDefined,\n        maxDefined = _this$getUserBounds.maxDefined;\n      var range;\n      if (minDefined && maxDefined) {\n        return {\n          min: min,\n          max: max\n        };\n      }\n      var metas = this.getMatchingVisibleMetas();\n      for (var i = 0, ilen = metas.length; i < ilen; ++i) {\n        range = metas[i].controller.getMinMax(this, canStack);\n        if (!minDefined) {\n          min = Math.min(min, range.min);\n        }\n        if (!maxDefined) {\n          max = Math.max(max, range.max);\n        }\n      }\n      min = maxDefined && min > max ? max : min;\n      max = minDefined && min > max ? min : max;\n      return {\n        min: finiteOrDefault(min, finiteOrDefault(max, min)),\n        max: finiteOrDefault(max, finiteOrDefault(min, max))\n      };\n    }\n  }, {\n    key: \"getPadding\",\n    value: function getPadding() {\n      return {\n        left: this.paddingLeft || 0,\n        top: this.paddingTop || 0,\n        right: this.paddingRight || 0,\n        bottom: this.paddingBottom || 0\n      };\n    }\n  }, {\n    key: \"getTicks\",\n    value: function getTicks() {\n      return this.ticks;\n    }\n  }, {\n    key: \"getLabels\",\n    value: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n  }, {\n    key: \"beforeLayout\",\n    value: function beforeLayout() {\n      this._cache = {};\n      this._dataLimitsCached = false;\n    }\n  }, {\n    key: \"beforeUpdate\",\n    value: function beforeUpdate() {\n      callback(this.options.beforeUpdate, [this]);\n    }\n  }, {\n    key: \"update\",\n    value: function update(maxWidth, maxHeight, margins) {\n      var _this$options3 = this.options,\n        beginAtZero = _this$options3.beginAtZero,\n        grace = _this$options3.grace,\n        tickOpts = _this$options3.ticks;\n      var sampleSize = tickOpts.sampleSize;\n      this.beforeUpdate();\n      this.maxWidth = maxWidth;\n      this.maxHeight = maxHeight;\n      this._margins = margins = Object.assign({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      this.ticks = null;\n      this._labelSizes = null;\n      this._gridLineItems = null;\n      this._labelItems = null;\n      this.beforeSetDimensions();\n      this.setDimensions();\n      this.afterSetDimensions();\n      this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n      if (!this._dataLimitsCached) {\n        this.beforeDataLimits();\n        this.determineDataLimits();\n        this.afterDataLimits();\n        this._range = _addGrace(this, grace, beginAtZero);\n        this._dataLimitsCached = true;\n      }\n      this.beforeBuildTicks();\n      this.ticks = this.buildTicks() || [];\n      this.afterBuildTicks();\n      var samplingEnabled = sampleSize < this.ticks.length;\n      this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n      this.configure();\n      this.beforeCalculateLabelRotation();\n      this.calculateLabelRotation();\n      this.afterCalculateLabelRotation();\n      if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n        this.ticks = autoSkip(this, this.ticks);\n        this._labelSizes = null;\n        this.afterAutoSkip();\n      }\n      if (samplingEnabled) {\n        this._convertTicksToLabels(this.ticks);\n      }\n      this.beforeFit();\n      this.fit();\n      this.afterFit();\n      this.afterUpdate();\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var reversePixels = this.options.reverse;\n      var startPixel, endPixel;\n      if (this.isHorizontal()) {\n        startPixel = this.left;\n        endPixel = this.right;\n      } else {\n        startPixel = this.top;\n        endPixel = this.bottom;\n        reversePixels = !reversePixels;\n      }\n      this._startPixel = startPixel;\n      this._endPixel = endPixel;\n      this._reversePixels = reversePixels;\n      this._length = endPixel - startPixel;\n      this._alignToPixels = this.options.alignToPixels;\n    }\n  }, {\n    key: \"afterUpdate\",\n    value: function afterUpdate() {\n      callback(this.options.afterUpdate, [this]);\n    }\n  }, {\n    key: \"beforeSetDimensions\",\n    value: function beforeSetDimensions() {\n      callback(this.options.beforeSetDimensions, [this]);\n    }\n  }, {\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      if (this.isHorizontal()) {\n        this.width = this.maxWidth;\n        this.left = 0;\n        this.right = this.width;\n      } else {\n        this.height = this.maxHeight;\n        this.top = 0;\n        this.bottom = this.height;\n      }\n      this.paddingLeft = 0;\n      this.paddingTop = 0;\n      this.paddingRight = 0;\n      this.paddingBottom = 0;\n    }\n  }, {\n    key: \"afterSetDimensions\",\n    value: function afterSetDimensions() {\n      callback(this.options.afterSetDimensions, [this]);\n    }\n  }, {\n    key: \"_callHooks\",\n    value: function _callHooks(name) {\n      this.chart.notifyPlugins(name, this.getContext());\n      callback(this.options[name], [this]);\n    }\n  }, {\n    key: \"beforeDataLimits\",\n    value: function beforeDataLimits() {\n      this._callHooks('beforeDataLimits');\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {}\n  }, {\n    key: \"afterDataLimits\",\n    value: function afterDataLimits() {\n      this._callHooks('afterDataLimits');\n    }\n  }, {\n    key: \"beforeBuildTicks\",\n    value: function beforeBuildTicks() {\n      this._callHooks('beforeBuildTicks');\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      return [];\n    }\n  }, {\n    key: \"afterBuildTicks\",\n    value: function afterBuildTicks() {\n      this._callHooks('afterBuildTicks');\n    }\n  }, {\n    key: \"beforeTickToLabelConversion\",\n    value: function beforeTickToLabelConversion() {\n      callback(this.options.beforeTickToLabelConversion, [this]);\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var tickOpts = this.options.ticks;\n      var i, ilen, tick;\n      for (i = 0, ilen = ticks.length; i < ilen; i++) {\n        tick = ticks[i];\n        tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n      }\n    }\n  }, {\n    key: \"afterTickToLabelConversion\",\n    value: function afterTickToLabelConversion() {\n      callback(this.options.afterTickToLabelConversion, [this]);\n    }\n  }, {\n    key: \"beforeCalculateLabelRotation\",\n    value: function beforeCalculateLabelRotation() {\n      callback(this.options.beforeCalculateLabelRotation, [this]);\n    }\n  }, {\n    key: \"calculateLabelRotation\",\n    value: function calculateLabelRotation() {\n      var options = this.options;\n      var tickOpts = options.ticks;\n      var numTicks = this.ticks.length;\n      var minRotation = tickOpts.minRotation || 0;\n      var maxRotation = tickOpts.maxRotation;\n      var labelRotation = minRotation;\n      var tickWidth, maxHeight, maxLabelDiagonal;\n      if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n        this.labelRotation = minRotation;\n        return;\n      }\n      var labelSizes = this._getLabelSizes();\n      var maxLabelWidth = labelSizes.widest.width;\n      var maxLabelHeight = labelSizes.highest.height;\n      var maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n      tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n      if (maxLabelWidth + 6 > tickWidth) {\n        tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n        maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n        maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n        labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n        labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n      }\n      this.labelRotation = labelRotation;\n    }\n  }, {\n    key: \"afterCalculateLabelRotation\",\n    value: function afterCalculateLabelRotation() {\n      callback(this.options.afterCalculateLabelRotation, [this]);\n    }\n  }, {\n    key: \"afterAutoSkip\",\n    value: function afterAutoSkip() {}\n  }, {\n    key: \"beforeFit\",\n    value: function beforeFit() {\n      callback(this.options.beforeFit, [this]);\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var minSize = {\n        width: 0,\n        height: 0\n      };\n      var chart = this.chart,\n        _this$options4 = this.options,\n        tickOpts = _this$options4.ticks,\n        titleOpts = _this$options4.title,\n        gridOpts = _this$options4.grid;\n      var display = this._isVisible();\n      var isHorizontal = this.isHorizontal();\n      if (display) {\n        var titleHeight = getTitleHeight(titleOpts, chart.options.font);\n        if (isHorizontal) {\n          minSize.width = this.maxWidth;\n          minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n        } else {\n          minSize.height = this.maxHeight;\n          minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n        }\n        if (tickOpts.display && this.ticks.length) {\n          var _this$_getLabelSizes = this._getLabelSizes(),\n            first = _this$_getLabelSizes.first,\n            last = _this$_getLabelSizes.last,\n            widest = _this$_getLabelSizes.widest,\n            highest = _this$_getLabelSizes.highest;\n          var tickPadding = tickOpts.padding * 2;\n          var angleRadians = toRadians(this.labelRotation);\n          var cos = Math.cos(angleRadians);\n          var sin = Math.sin(angleRadians);\n          if (isHorizontal) {\n            var labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n            minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n          } else {\n            var labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n            minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n          }\n          this._calculatePadding(first, last, sin, cos);\n        }\n      }\n      this._handleMargins();\n      if (isHorizontal) {\n        this.width = this._length = chart.width - this._margins.left - this._margins.right;\n        this.height = minSize.height;\n      } else {\n        this.width = minSize.width;\n        this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n      }\n    }\n  }, {\n    key: \"_calculatePadding\",\n    value: function _calculatePadding(first, last, sin, cos) {\n      var _this$options5 = this.options,\n        _this$options5$ticks = _this$options5.ticks,\n        align = _this$options5$ticks.align,\n        padding = _this$options5$ticks.padding,\n        position = _this$options5.position;\n      var isRotated = this.labelRotation !== 0;\n      var labelsBelowTicks = position !== 'top' && this.axis === 'x';\n      if (this.isHorizontal()) {\n        var offsetLeft = this.getPixelForTick(0) - this.left;\n        var offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n        var paddingLeft = 0;\n        var paddingRight = 0;\n        if (isRotated) {\n          if (labelsBelowTicks) {\n            paddingLeft = cos * first.width;\n            paddingRight = sin * last.height;\n          } else {\n            paddingLeft = sin * first.height;\n            paddingRight = cos * last.width;\n          }\n        } else if (align === 'start') {\n          paddingRight = last.width;\n        } else if (align === 'end') {\n          paddingLeft = first.width;\n        } else if (align !== 'inner') {\n          paddingLeft = first.width / 2;\n          paddingRight = last.width / 2;\n        }\n        this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n        this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n      } else {\n        var paddingTop = last.height / 2;\n        var paddingBottom = first.height / 2;\n        if (align === 'start') {\n          paddingTop = 0;\n          paddingBottom = first.height;\n        } else if (align === 'end') {\n          paddingTop = last.height;\n          paddingBottom = 0;\n        }\n        this.paddingTop = paddingTop + padding;\n        this.paddingBottom = paddingBottom + padding;\n      }\n    }\n  }, {\n    key: \"_handleMargins\",\n    value: function _handleMargins() {\n      if (this._margins) {\n        this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n        this._margins.top = Math.max(this.paddingTop, this._margins.top);\n        this._margins.right = Math.max(this.paddingRight, this._margins.right);\n        this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n      }\n    }\n  }, {\n    key: \"afterFit\",\n    value: function afterFit() {\n      callback(this.options.afterFit, [this]);\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      var _this$options6 = this.options,\n        axis = _this$options6.axis,\n        position = _this$options6.position;\n      return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n  }, {\n    key: \"isFullSize\",\n    value: function isFullSize() {\n      return this.options.fullSize;\n    }\n  }, {\n    key: \"_convertTicksToLabels\",\n    value: function _convertTicksToLabels(ticks) {\n      this.beforeTickToLabelConversion();\n      this.generateTickLabels(ticks);\n      var i, ilen;\n      for (i = 0, ilen = ticks.length; i < ilen; i++) {\n        if (isNullOrUndef(ticks[i].label)) {\n          ticks.splice(i, 1);\n          ilen--;\n          i--;\n        }\n      }\n      this.afterTickToLabelConversion();\n    }\n  }, {\n    key: \"_getLabelSizes\",\n    value: function _getLabelSizes() {\n      var labelSizes = this._labelSizes;\n      if (!labelSizes) {\n        var sampleSize = this.options.ticks.sampleSize;\n        var ticks = this.ticks;\n        if (sampleSize < ticks.length) {\n          ticks = sample(ticks, sampleSize);\n        }\n        this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n      }\n      return labelSizes;\n    }\n  }, {\n    key: \"_computeLabelSizes\",\n    value: function _computeLabelSizes(ticks, length) {\n      var ctx = this.ctx,\n        caches = this._longestTextCache;\n      var widths = [];\n      var heights = [];\n      var widestLabelSize = 0;\n      var highestLabelSize = 0;\n      var i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n      for (i = 0; i < length; ++i) {\n        label = ticks[i].label;\n        tickFont = this._resolveTickFontOptions(i);\n        ctx.font = fontString = tickFont.string;\n        cache = caches[fontString] = caches[fontString] || {\n          data: {},\n          gc: []\n        };\n        lineHeight = tickFont.lineHeight;\n        width = height = 0;\n        if (!isNullOrUndef(label) && !isArray(label)) {\n          width = _measureText(ctx, cache.data, cache.gc, width, label);\n          height = lineHeight;\n        } else if (isArray(label)) {\n          for (j = 0, jlen = label.length; j < jlen; ++j) {\n            nestedLabel = label[j];\n            if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n              width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n              height += lineHeight;\n            }\n          }\n        }\n        widths.push(width);\n        heights.push(height);\n        widestLabelSize = Math.max(width, widestLabelSize);\n        highestLabelSize = Math.max(height, highestLabelSize);\n      }\n      garbageCollect(caches, length);\n      var widest = widths.indexOf(widestLabelSize);\n      var highest = heights.indexOf(highestLabelSize);\n      var valueAt = function valueAt(idx) {\n        return {\n          width: widths[idx] || 0,\n          height: heights[idx] || 0\n        };\n      };\n      return {\n        first: valueAt(0),\n        last: valueAt(length - 1),\n        widest: valueAt(widest),\n        highest: valueAt(highest),\n        widths: widths,\n        heights: heights\n      };\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return value;\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value, index) {\n      return NaN;\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {}\n  }, {\n    key: \"getPixelForTick\",\n    value: function getPixelForTick(index) {\n      var ticks = this.ticks;\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n      return this.getPixelForValue(ticks[index].value);\n    }\n  }, {\n    key: \"getPixelForDecimal\",\n    value: function getPixelForDecimal(decimal) {\n      if (this._reversePixels) {\n        decimal = 1 - decimal;\n      }\n      var pixel = this._startPixel + decimal * this._length;\n      return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n  }, {\n    key: \"getDecimalForPixel\",\n    value: function getDecimalForPixel(pixel) {\n      var decimal = (pixel - this._startPixel) / this._length;\n      return this._reversePixels ? 1 - decimal : decimal;\n    }\n  }, {\n    key: \"getBasePixel\",\n    value: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    }\n  }, {\n    key: \"getBaseValue\",\n    value: function getBaseValue() {\n      var min = this.min,\n        max = this.max;\n      return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext(index) {\n      var ticks = this.ticks || [];\n      if (index >= 0 && index < ticks.length) {\n        var tick = ticks[index];\n        return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n      }\n      return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n  }, {\n    key: \"_tickSize\",\n    value: function _tickSize() {\n      var optionTicks = this.options.ticks;\n      var rot = toRadians(this.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var labelSizes = this._getLabelSizes();\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = labelSizes ? labelSizes.widest.width + padding : 0;\n      var h = labelSizes ? labelSizes.highest.height + padding : 0;\n      return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n  }, {\n    key: \"_isVisible\",\n    value: function _isVisible() {\n      var display = this.options.display;\n      if (display !== 'auto') {\n        return !!display;\n      }\n      return this.getMatchingVisibleMetas().length > 0;\n    }\n  }, {\n    key: \"_computeGridLineItems\",\n    value: function _computeGridLineItems(chartArea) {\n      var axis = this.axis;\n      var chart = this.chart;\n      var options = this.options;\n      var grid = options.grid,\n        position = options.position;\n      var offset = grid.offset;\n      var isHorizontal = this.isHorizontal();\n      var ticks = this.ticks;\n      var ticksLength = ticks.length + (offset ? 1 : 0);\n      var tl = getTickMarkLength(grid);\n      var items = [];\n      var borderOpts = grid.setContext(this.getContext());\n      var axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n      var axisHalfWidth = axisWidth / 2;\n      var alignBorderValue = function alignBorderValue(pixel) {\n        return _alignPixel(chart, pixel, axisWidth);\n      };\n      var borderValue, i, lineValue, alignedLineValue;\n      var tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n      if (position === 'top') {\n        borderValue = alignBorderValue(this.bottom);\n        ty1 = this.bottom - tl;\n        ty2 = borderValue - axisHalfWidth;\n        y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n        y2 = chartArea.bottom;\n      } else if (position === 'bottom') {\n        borderValue = alignBorderValue(this.top);\n        y1 = chartArea.top;\n        y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = this.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignBorderValue(this.right);\n        tx1 = this.right - tl;\n        tx2 = borderValue - axisHalfWidth;\n        x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n        x2 = chartArea.right;\n      } else if (position === 'right') {\n        borderValue = alignBorderValue(this.left);\n        x1 = chartArea.left;\n        x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n        tx1 = borderValue + axisHalfWidth;\n        tx2 = this.left + tl;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n        } else if (isObject(position)) {\n          var positionAxisID = Object.keys(position)[0];\n          var value = position[positionAxisID];\n          borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n        }\n        y1 = chartArea.top;\n        y2 = chartArea.bottom;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = ty1 + tl;\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n        } else if (isObject(position)) {\n          var _positionAxisID2 = Object.keys(position)[0];\n          var _value2 = position[_positionAxisID2];\n          borderValue = alignBorderValue(this.chart.scales[_positionAxisID2].getPixelForValue(_value2));\n        }\n        tx1 = borderValue - axisHalfWidth;\n        tx2 = tx1 - tl;\n        x1 = chartArea.left;\n        x2 = chartArea.right;\n      }\n      var limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n      var step = Math.max(1, Math.ceil(ticksLength / limit));\n      for (i = 0; i < ticksLength; i += step) {\n        var optsAtIndex = grid.setContext(this.getContext(i));\n        var lineWidth = optsAtIndex.lineWidth;\n        var lineColor = optsAtIndex.color;\n        var borderDash = optsAtIndex.borderDash || [];\n        var borderDashOffset = optsAtIndex.borderDashOffset;\n        var tickWidth = optsAtIndex.tickWidth;\n        var tickColor = optsAtIndex.tickColor;\n        var tickBorderDash = optsAtIndex.tickBorderDash || [];\n        var tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n        lineValue = getPixelForGridLine(this, i, offset);\n        if (lineValue === undefined) {\n          continue;\n        }\n        alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n        if (isHorizontal) {\n          tx1 = tx2 = x1 = x2 = alignedLineValue;\n        } else {\n          ty1 = ty2 = y1 = y2 = alignedLineValue;\n        }\n        items.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          width: lineWidth,\n          color: lineColor,\n          borderDash: borderDash,\n          borderDashOffset: borderDashOffset,\n          tickWidth: tickWidth,\n          tickColor: tickColor,\n          tickBorderDash: tickBorderDash,\n          tickBorderDashOffset: tickBorderDashOffset\n        });\n      }\n      this._ticksLength = ticksLength;\n      this._borderValue = borderValue;\n      return items;\n    }\n  }, {\n    key: \"_computeLabelItems\",\n    value: function _computeLabelItems(chartArea) {\n      var axis = this.axis;\n      var options = this.options;\n      var position = options.position,\n        optionTicks = options.ticks;\n      var isHorizontal = this.isHorizontal();\n      var ticks = this.ticks;\n      var align = optionTicks.align,\n        crossAlign = optionTicks.crossAlign,\n        padding = optionTicks.padding,\n        mirror = optionTicks.mirror;\n      var tl = getTickMarkLength(options.grid);\n      var tickAndPadding = tl + padding;\n      var hTickAndPadding = mirror ? -padding : tickAndPadding;\n      var rotation = -toRadians(this.labelRotation);\n      var items = [];\n      var i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n      var textBaseline = 'middle';\n      if (position === 'top') {\n        y = this.bottom - hTickAndPadding;\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (position === 'bottom') {\n        y = this.top + hTickAndPadding;\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (position === 'left') {\n        var ret = this._getYAxisLabelAlignment(tl);\n        textAlign = ret.textAlign;\n        x = ret.x;\n      } else if (position === 'right') {\n        var _ret = this._getYAxisLabelAlignment(tl);\n        textAlign = _ret.textAlign;\n        x = _ret.x;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n        } else if (isObject(position)) {\n          var positionAxisID = Object.keys(position)[0];\n          var value = position[positionAxisID];\n          y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n        }\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n        } else if (isObject(position)) {\n          var _positionAxisID3 = Object.keys(position)[0];\n          var _value3 = position[_positionAxisID3];\n          x = this.chart.scales[_positionAxisID3].getPixelForValue(_value3);\n        }\n        textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n      }\n      if (axis === 'y') {\n        if (align === 'start') {\n          textBaseline = 'top';\n        } else if (align === 'end') {\n          textBaseline = 'bottom';\n        }\n      }\n      var labelSizes = this._getLabelSizes();\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        label = tick.label;\n        var optsAtIndex = optionTicks.setContext(this.getContext(i));\n        pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n        font = this._resolveTickFontOptions(i);\n        lineHeight = font.lineHeight;\n        lineCount = isArray(label) ? label.length : 1;\n        var halfCount = lineCount / 2;\n        var color = optsAtIndex.color;\n        var strokeColor = optsAtIndex.textStrokeColor;\n        var strokeWidth = optsAtIndex.textStrokeWidth;\n        var tickTextAlign = textAlign;\n        if (isHorizontal) {\n          x = pixel;\n          if (textAlign === 'inner') {\n            if (i === ilen - 1) {\n              tickTextAlign = !this.options.reverse ? 'right' : 'left';\n            } else if (i === 0) {\n              tickTextAlign = !this.options.reverse ? 'left' : 'right';\n            } else {\n              tickTextAlign = 'center';\n            }\n          }\n          if (position === 'top') {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = -lineCount * lineHeight + lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n            } else {\n              textOffset = -labelSizes.highest.height + lineHeight / 2;\n            }\n          } else {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n            } else {\n              textOffset = labelSizes.highest.height - lineCount * lineHeight;\n            }\n          }\n          if (mirror) {\n            textOffset *= -1;\n          }\n        } else {\n          y = pixel;\n          textOffset = (1 - lineCount) * lineHeight / 2;\n        }\n        var backdrop = void 0;\n        if (optsAtIndex.showLabelBackdrop) {\n          var labelPadding = toPadding(optsAtIndex.backdropPadding);\n          var height = labelSizes.heights[i];\n          var width = labelSizes.widths[i];\n          var top = y + textOffset - labelPadding.top;\n          var left = x - labelPadding.left;\n          switch (textBaseline) {\n            case 'middle':\n              top -= height / 2;\n              break;\n            case 'bottom':\n              top -= height;\n              break;\n          }\n          switch (textAlign) {\n            case 'center':\n              left -= width / 2;\n              break;\n            case 'right':\n              left -= width;\n              break;\n          }\n          backdrop = {\n            left: left,\n            top: top,\n            width: width + labelPadding.width,\n            height: height + labelPadding.height,\n            color: optsAtIndex.backdropColor\n          };\n        }\n        items.push({\n          rotation: rotation,\n          label: label,\n          font: font,\n          color: color,\n          strokeColor: strokeColor,\n          strokeWidth: strokeWidth,\n          textOffset: textOffset,\n          textAlign: tickTextAlign,\n          textBaseline: textBaseline,\n          translation: [x, y],\n          backdrop: backdrop\n        });\n      }\n      return items;\n    }\n  }, {\n    key: \"_getXAxisLabelAlignment\",\n    value: function _getXAxisLabelAlignment() {\n      var _this$options7 = this.options,\n        position = _this$options7.position,\n        ticks = _this$options7.ticks;\n      var rotation = -toRadians(this.labelRotation);\n      if (rotation) {\n        return position === 'top' ? 'left' : 'right';\n      }\n      var align = 'center';\n      if (ticks.align === 'start') {\n        align = 'left';\n      } else if (ticks.align === 'end') {\n        align = 'right';\n      } else if (ticks.align === 'inner') {\n        align = 'inner';\n      }\n      return align;\n    }\n  }, {\n    key: \"_getYAxisLabelAlignment\",\n    value: function _getYAxisLabelAlignment(tl) {\n      var _this$options8 = this.options,\n        position = _this$options8.position,\n        _this$options8$ticks = _this$options8.ticks,\n        crossAlign = _this$options8$ticks.crossAlign,\n        mirror = _this$options8$ticks.mirror,\n        padding = _this$options8$ticks.padding;\n      var labelSizes = this._getLabelSizes();\n      var tickAndPadding = tl + padding;\n      var widest = labelSizes.widest.width;\n      var textAlign;\n      var x;\n      if (position === 'left') {\n        if (mirror) {\n          x = this.right + padding;\n          if (crossAlign === 'near') {\n            textAlign = 'left';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x += widest / 2;\n          } else {\n            textAlign = 'right';\n            x += widest;\n          }\n        } else {\n          x = this.right - tickAndPadding;\n          if (crossAlign === 'near') {\n            textAlign = 'right';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x -= widest / 2;\n          } else {\n            textAlign = 'left';\n            x = this.left;\n          }\n        }\n      } else if (position === 'right') {\n        if (mirror) {\n          x = this.left + padding;\n          if (crossAlign === 'near') {\n            textAlign = 'right';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x -= widest / 2;\n          } else {\n            textAlign = 'left';\n            x -= widest;\n          }\n        } else {\n          x = this.left + tickAndPadding;\n          if (crossAlign === 'near') {\n            textAlign = 'left';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x += widest / 2;\n          } else {\n            textAlign = 'right';\n            x = this.right;\n          }\n        }\n      } else {\n        textAlign = 'right';\n      }\n      return {\n        textAlign: textAlign,\n        x: x\n      };\n    }\n  }, {\n    key: \"_computeLabelArea\",\n    value: function _computeLabelArea() {\n      if (this.options.ticks.mirror) {\n        return;\n      }\n      var chart = this.chart;\n      var position = this.options.position;\n      if (position === 'left' || position === 'right') {\n        return {\n          top: 0,\n          left: this.left,\n          bottom: chart.height,\n          right: this.right\n        };\n      }\n      if (position === 'top' || position === 'bottom') {\n        return {\n          top: this.top,\n          left: 0,\n          bottom: this.bottom,\n          right: chart.width\n        };\n      }\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground() {\n      var ctx = this.ctx,\n        backgroundColor = this.options.backgroundColor,\n        left = this.left,\n        top = this.top,\n        width = this.width,\n        height = this.height;\n      if (backgroundColor) {\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        ctx.fillRect(left, top, width, height);\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"getLineWidthForValue\",\n    value: function getLineWidthForValue(value) {\n      var grid = this.options.grid;\n      if (!this._isVisible() || !grid.display) {\n        return 0;\n      }\n      var ticks = this.ticks;\n      var index = ticks.findIndex(function (t) {\n        return t.value === value;\n      });\n      if (index >= 0) {\n        var opts = grid.setContext(this.getContext(index));\n        return opts.lineWidth;\n      }\n      return 0;\n    }\n  }, {\n    key: \"drawGrid\",\n    value: function drawGrid(chartArea) {\n      var grid = this.options.grid;\n      var ctx = this.ctx;\n      var items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n      var i, ilen;\n      var drawLine = function drawLine(p1, p2, style) {\n        if (!style.width || !style.color) {\n          return;\n        }\n        ctx.save();\n        ctx.lineWidth = style.width;\n        ctx.strokeStyle = style.color;\n        ctx.setLineDash(style.borderDash || []);\n        ctx.lineDashOffset = style.borderDashOffset;\n        ctx.beginPath();\n        ctx.moveTo(p1.x, p1.y);\n        ctx.lineTo(p2.x, p2.y);\n        ctx.stroke();\n        ctx.restore();\n      };\n      if (grid.display) {\n        for (i = 0, ilen = items.length; i < ilen; ++i) {\n          var item = items[i];\n          if (grid.drawOnChartArea) {\n            drawLine({\n              x: item.x1,\n              y: item.y1\n            }, {\n              x: item.x2,\n              y: item.y2\n            }, item);\n          }\n          if (grid.drawTicks) {\n            drawLine({\n              x: item.tx1,\n              y: item.ty1\n            }, {\n              x: item.tx2,\n              y: item.ty2\n            }, {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            });\n          }\n        }\n      }\n    }\n  }, {\n    key: \"drawBorder\",\n    value: function drawBorder() {\n      var chart = this.chart,\n        ctx = this.ctx,\n        grid = this.options.grid;\n      var borderOpts = grid.setContext(this.getContext());\n      var axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n      if (!axisWidth) {\n        return;\n      }\n      var lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n      var borderValue = this._borderValue;\n      var x1, x2, y1, y2;\n      if (this.isHorizontal()) {\n        x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n        x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n        y1 = y2 = borderValue;\n      } else {\n        y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n        y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n        x1 = x2 = borderValue;\n      }\n      ctx.save();\n      ctx.lineWidth = borderOpts.borderWidth;\n      ctx.strokeStyle = borderOpts.borderColor;\n      ctx.beginPath();\n      ctx.moveTo(x1, y1);\n      ctx.lineTo(x2, y2);\n      ctx.stroke();\n      ctx.restore();\n    }\n  }, {\n    key: \"drawLabels\",\n    value: function drawLabels(chartArea) {\n      var optionTicks = this.options.ticks;\n      if (!optionTicks.display) {\n        return;\n      }\n      var ctx = this.ctx;\n      var area = this._computeLabelArea();\n      if (area) {\n        clipArea(ctx, area);\n      }\n      var items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n      var i, ilen;\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        var item = items[i];\n        var tickFont = item.font;\n        var label = item.label;\n        if (item.backdrop) {\n          ctx.fillStyle = item.backdrop.color;\n          ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n        }\n        var y = item.textOffset;\n        renderText(ctx, label, 0, y, tickFont, item);\n      }\n      if (area) {\n        unclipArea(ctx);\n      }\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {\n      var ctx = this.ctx,\n        _this$options9 = this.options,\n        position = _this$options9.position,\n        title = _this$options9.title,\n        reverse = _this$options9.reverse;\n      if (!title.display) {\n        return;\n      }\n      var font = toFont(title.font);\n      var padding = toPadding(title.padding);\n      var align = title.align;\n      var offset = font.lineHeight / 2;\n      if (position === 'bottom' || position === 'center' || isObject(position)) {\n        offset += padding.bottom;\n        if (isArray(title.text)) {\n          offset += font.lineHeight * (title.text.length - 1);\n        }\n      } else {\n        offset += padding.top;\n      }\n      var _titleArgs = titleArgs(this, offset, position, align),\n        titleX = _titleArgs.titleX,\n        titleY = _titleArgs.titleY,\n        maxWidth = _titleArgs.maxWidth,\n        rotation = _titleArgs.rotation;\n      renderText(ctx, title.text, 0, 0, font, {\n        color: title.color,\n        maxWidth: maxWidth,\n        rotation: rotation,\n        textAlign: titleAlign(align, position, reverse),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(chartArea) {\n      if (!this._isVisible()) {\n        return;\n      }\n      this.drawBackground();\n      this.drawGrid(chartArea);\n      this.drawBorder();\n      this.drawTitle();\n      this.drawLabels(chartArea);\n    }\n  }, {\n    key: \"_layers\",\n    value: function _layers() {\n      var _this10 = this;\n      var opts = this.options;\n      var tz = opts.ticks && opts.ticks.z || 0;\n      var gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n      if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n        return [{\n          z: tz,\n          draw: function draw(chartArea) {\n            _this10.draw(chartArea);\n          }\n        }];\n      }\n      return [{\n        z: gz,\n        draw: function draw(chartArea) {\n          _this10.drawBackground();\n          _this10.drawGrid(chartArea);\n          _this10.drawTitle();\n        }\n      }, {\n        z: gz + 1,\n        draw: function draw() {\n          _this10.drawBorder();\n        }\n      }, {\n        z: tz,\n        draw: function draw(chartArea) {\n          _this10.drawLabels(chartArea);\n        }\n      }];\n    }\n  }, {\n    key: \"getMatchingVisibleMetas\",\n    value: function getMatchingVisibleMetas(type) {\n      var metas = this.chart.getSortedVisibleDatasetMetas();\n      var axisID = this.axis + 'AxisID';\n      var result = [];\n      var i, ilen;\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        var meta = metas[i];\n        if (meta[axisID] === this.id && (!type || meta.type === type)) {\n          result.push(meta);\n        }\n      }\n      return result;\n    }\n  }, {\n    key: \"_resolveTickFontOptions\",\n    value: function _resolveTickFontOptions(index) {\n      var opts = this.options.ticks.setContext(this.getContext(index));\n      return toFont(opts.font);\n    }\n  }, {\n    key: \"_maxDigits\",\n    value: function _maxDigits() {\n      var fontSize = this._resolveTickFontOptions(0).lineHeight;\n      return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n  }]);\n}(Element);\nvar TypedRegistry = /*#__PURE__*/function () {\n  function TypedRegistry(type, scope, override) {\n    _classCallCheck(this, TypedRegistry);\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  return _createClass(TypedRegistry, [{\n    key: \"isForType\",\n    value: function isForType(type) {\n      return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n  }, {\n    key: \"register\",\n    value: function register(item) {\n      var proto = Object.getPrototypeOf(item);\n      var parentScope;\n      if (isIChartComponent(proto)) {\n        parentScope = this.register(proto);\n      }\n      var items = this.items;\n      var id = item.id;\n      var scope = this.scope + '.' + id;\n      if (!id) {\n        throw new Error('class does not have id: ' + item);\n      }\n      if (id in items) {\n        return scope;\n      }\n      items[id] = item;\n      registerDefaults(item, scope, parentScope);\n      if (this.override) {\n        defaults.override(item.id, item.overrides);\n      }\n      return scope;\n    }\n  }, {\n    key: \"get\",\n    value: function get(id) {\n      return this.items[id];\n    }\n  }, {\n    key: \"unregister\",\n    value: function unregister(item) {\n      var items = this.items;\n      var id = item.id;\n      var scope = this.scope;\n      if (id in items) {\n        delete items[id];\n      }\n      if (scope && id in defaults[scope]) {\n        delete defaults[scope][id];\n        if (this.override) {\n          delete overrides[id];\n        }\n      }\n    }\n  }]);\n}();\nfunction registerDefaults(item, scope, parentScope) {\n  var itemDefaults = merge(Object.create(null), [parentScope ? defaults.get(parentScope) : {}, defaults.get(scope), item.defaults]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(function (property) {\n    var propertyParts = property.split('.');\n    var sourceName = propertyParts.pop();\n    var sourceScope = [scope].concat(propertyParts).join('.');\n    var parts = routes[property].split('.');\n    var targetName = parts.pop();\n    var targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\nvar Registry = /*#__PURE__*/function () {\n  function Registry() {\n    _classCallCheck(this, Registry);\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  return _createClass(Registry, [{\n    key: \"add\",\n    value: function add() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      this._each('register', args);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      this._each('unregister', args);\n    }\n  }, {\n    key: \"addControllers\",\n    value: function addControllers() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n      this._each('register', args, this.controllers);\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n      this._each('register', args, this.elements);\n    }\n  }, {\n    key: \"addPlugins\",\n    value: function addPlugins() {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n      this._each('register', args, this.plugins);\n    }\n  }, {\n    key: \"addScales\",\n    value: function addScales() {\n      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n      this._each('register', args, this.scales);\n    }\n  }, {\n    key: \"getController\",\n    value: function getController(id) {\n      return this._get(id, this.controllers, 'controller');\n    }\n  }, {\n    key: \"getElement\",\n    value: function getElement(id) {\n      return this._get(id, this.elements, 'element');\n    }\n  }, {\n    key: \"getPlugin\",\n    value: function getPlugin(id) {\n      return this._get(id, this.plugins, 'plugin');\n    }\n  }, {\n    key: \"getScale\",\n    value: function getScale(id) {\n      return this._get(id, this.scales, 'scale');\n    }\n  }, {\n    key: \"removeControllers\",\n    value: function removeControllers() {\n      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n      this._each('unregister', args, this.controllers);\n    }\n  }, {\n    key: \"removeElements\",\n    value: function removeElements() {\n      for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n        args[_key8] = arguments[_key8];\n      }\n      this._each('unregister', args, this.elements);\n    }\n  }, {\n    key: \"removePlugins\",\n    value: function removePlugins() {\n      for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n        args[_key9] = arguments[_key9];\n      }\n      this._each('unregister', args, this.plugins);\n    }\n  }, {\n    key: \"removeScales\",\n    value: function removeScales() {\n      for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n        args[_key10] = arguments[_key10];\n      }\n      this._each('unregister', args, this.scales);\n    }\n  }, {\n    key: \"_each\",\n    value: function _each(method, args, typedRegistry) {\n      var _this11 = this;\n      _toConsumableArray(args).forEach(function (arg) {\n        var reg = typedRegistry || _this11._getRegistryForType(arg);\n        if (typedRegistry || reg.isForType(arg) || reg === _this11.plugins && arg.id) {\n          _this11._exec(method, reg, arg);\n        } else {\n          each(arg, function (item) {\n            var itemReg = typedRegistry || _this11._getRegistryForType(item);\n            _this11._exec(method, itemReg, item);\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_exec\",\n    value: function _exec(method, registry, component) {\n      var camelMethod = _capitalize(method);\n      callback(component['before' + camelMethod], [], component);\n      registry[method](component);\n      callback(component['after' + camelMethod], [], component);\n    }\n  }, {\n    key: \"_getRegistryForType\",\n    value: function _getRegistryForType(type) {\n      for (var i = 0; i < this._typedRegistries.length; i++) {\n        var reg = this._typedRegistries[i];\n        if (reg.isForType(type)) {\n          return reg;\n        }\n      }\n      return this.plugins;\n    }\n  }, {\n    key: \"_get\",\n    value: function _get(id, typedRegistry, type) {\n      var item = typedRegistry.get(id);\n      if (item === undefined) {\n        throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n      }\n      return item;\n    }\n  }]);\n}();\nvar registry = new Registry();\nvar ScatterController = /*#__PURE__*/function (_DatasetController7) {\n  function ScatterController() {\n    _classCallCheck(this, ScatterController);\n    return _callSuper(this, ScatterController, arguments);\n  }\n  _inherits(ScatterController, _DatasetController7);\n  return _createClass(ScatterController, [{\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      var _meta$data2 = meta.data,\n        points = _meta$data2 === void 0 ? [] : _meta$data2;\n      var animationsDisabled = this.chart._animationsDisabled;\n      var _getStartAndCountOfVi2 = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled),\n        start = _getStartAndCountOfVi2.start,\n        count = _getStartAndCountOfVi2.count;\n      this._drawStart = start;\n      this._drawCount = count;\n      if (_scaleRangesChanged(meta)) {\n        start = 0;\n        count = points.length;\n      }\n      if (this.options.showLine) {\n        var line = meta.dataset,\n          _dataset = meta._dataset;\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        var options = this.resolveDatasetElementOptions(mode);\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n          animated: !animationsDisabled,\n          options: options\n        }, mode);\n      }\n      this.updateElements(points, start, count, mode);\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      var showLine = this.options.showLine;\n      if (!this.datasetElementType && showLine) {\n        this.datasetElementType = registry.getElement('line');\n      }\n      _superPropGet(ScatterController, \"addElements\", this, 3)([]);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var reset = mode === 'reset';\n      var _this$_cachedMeta4 = this._cachedMeta,\n        iScale = _this$_cachedMeta4.iScale,\n        vScale = _this$_cachedMeta4.vScale,\n        _stacked = _this$_cachedMeta4._stacked,\n        _dataset = _this$_cachedMeta4._dataset;\n      var firstOpts = this.resolveDataElementOptions(start, mode);\n      var sharedOptions = this.getSharedOptions(firstOpts);\n      var includeOptions = this.includeOptions(mode, sharedOptions);\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var _this$options10 = this.options,\n        spanGaps = _this$options10.spanGaps,\n        segment = _this$options10.segment;\n      var maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n      var directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n      var prevParsed = start > 0 && this.getParsed(start - 1);\n      for (var i = start; i < start + count; ++i) {\n        var point = points[i];\n        var parsed = this.getParsed(i);\n        var properties = directUpdate ? point : {};\n        var nullData = isNullOrUndef(parsed[vAxis]);\n        var iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n        var vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n        properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n        if (segment) {\n          properties.parsed = parsed;\n          properties.raw = _dataset.data[i];\n        }\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        }\n        if (!directUpdate) {\n          this.updateElement(point, i, properties, mode);\n        }\n        prevParsed = parsed;\n      }\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var meta = this._cachedMeta;\n      var data = meta.data || [];\n      if (!this.options.showLine) {\n        var max = 0;\n        for (var i = data.length - 1; i >= 0; --i) {\n          max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n      }\n      var dataset = meta.dataset;\n      var border = dataset.options && dataset.options.borderWidth || 0;\n      if (!data.length) {\n        return border;\n      }\n      var firstPoint = data[0].size(this.resolveDataElementOptions(0));\n      var lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n      return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n  }]);\n}(DatasetController);\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\nvar controllers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  BarController: BarController,\n  BubbleController: BubbleController,\n  DoughnutController: DoughnutController,\n  LineController: LineController,\n  PolarAreaController: PolarAreaController,\n  PieController: PieController,\n  RadarController: RadarController,\n  ScatterController: ScatterController\n});\nfunction _abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nvar DateAdapter = /*#__PURE__*/function () {\n  function DateAdapter(options) {\n    _classCallCheck(this, DateAdapter);\n    this.options = options || {};\n  }\n  return _createClass(DateAdapter, [{\n    key: \"init\",\n    value: function init(chartOptions) {}\n  }, {\n    key: \"formats\",\n    value: function formats() {\n      return _abstract();\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(value, format) {\n      return _abstract();\n    }\n  }, {\n    key: \"format\",\n    value: function format(timestamp, _format) {\n      return _abstract();\n    }\n  }, {\n    key: \"add\",\n    value: function add(timestamp, amount, unit) {\n      return _abstract();\n    }\n  }, {\n    key: \"diff\",\n    value: function diff(a, b, unit) {\n      return _abstract();\n    }\n  }, {\n    key: \"startOf\",\n    value: function startOf(timestamp, unit, weekday) {\n      return _abstract();\n    }\n  }, {\n    key: \"endOf\",\n    value: function endOf(timestamp, unit) {\n      return _abstract();\n    }\n  }]);\n}();\nDateAdapter.override = function (members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\nfunction binarySearch(metaset, axis, value, intersect) {\n  var controller = metaset.controller,\n    data = metaset.data,\n    _sorted = metaset._sorted;\n  var iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    var lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      var el = data[0];\n      var range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        var start = lookupMethod(data, axis, value - range);\n        var end = lookupMethod(data, axis, value + range);\n        return {\n          lo: start.lo,\n          hi: end.hi\n        };\n      }\n    }\n  }\n  return {\n    lo: 0,\n    hi: data.length - 1\n  };\n}\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  var metasets = chart.getSortedVisibleDatasetMetas();\n  var value = position[axis];\n  for (var i = 0, ilen = metasets.length; i < ilen; ++i) {\n    var _metasets$i = metasets[i],\n      _index2 = _metasets$i.index,\n      data = _metasets$i.data;\n    var _binarySearch = binarySearch(metasets[i], axis, value, intersect),\n      lo = _binarySearch.lo,\n      hi = _binarySearch.hi;\n    for (var j = lo; j <= hi; ++j) {\n      var element = data[j];\n      if (!element.skip) {\n        handler(element, _index2, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  var useX = axis.indexOf('x') !== -1;\n  var useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  var items = [];\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n  var evaluationFunc = function evaluationFunc(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  };\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  var items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    var _element$getProps = element.getProps(['startAngle', 'endAngle'], useFinalPosition),\n      startAngle = _element$getProps.startAngle,\n      endAngle = _element$getProps.endAngle;\n    var _getAngleFromPoint = getAngleFromPoint(element, {\n        x: position.x,\n        y: position.y\n      }),\n      angle = _getAngleFromPoint.angle;\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  var items = [];\n  var distanceMetric = getDistanceMetricForAxis(axis);\n  var minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    var inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    var center = element.getCenterPoint(useFinalPosition);\n    var pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    var distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      }];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n  return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  var items = [];\n  var rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  var intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, function (element, datasetIndex, index) {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  evaluateInteractionItems: evaluateInteractionItems,\n  modes: {\n    index: function index(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'x';\n      var includeInvisible = options.includeInvisible || false;\n      var items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      var elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach(function (meta) {\n        var index = items[0].index;\n        var element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({\n            element: element,\n            datasetIndex: meta.index,\n            index: index\n          });\n        }\n      });\n      return elements;\n    },\n    dataset: function dataset(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      var includeInvisible = options.includeInvisible || false;\n      var items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      if (items.length > 0) {\n        var datasetIndex = items[0].datasetIndex;\n        var data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (var i = 0; i < data.length; ++i) {\n          items.push({\n            element: data[i],\n            datasetIndex: datasetIndex,\n            index: i\n          });\n        }\n      }\n      return items;\n    },\n    point: function point(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      var includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest: function nearest(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      var includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x: function x(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y: function y(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\nvar STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(function (v) {\n    return v.pos === position;\n  });\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(function (v) {\n    return STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis;\n  });\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort(function (a, b) {\n    var v0 = reverse ? b : a;\n    var v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  var layoutBoxes = [];\n  var i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    var _box = box;\n    pos = _box.position;\n    var _box$options = _box.options;\n    stack = _box$options.stack;\n    var _box$options$stackWei = _box$options.stackWeight;\n    stackWeight = _box$options$stackWei === void 0 ? 1 : _box$options$stackWei;\n    layoutBoxes.push({\n      index: i,\n      box: box,\n      pos: pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && pos + stack,\n      stackWeight: stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  var stacks = {};\n  var _iterator5 = _createForOfIteratorHelper(layouts),\n    _step5;\n  try {\n    for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n      var wrap = _step5.value;\n      var stack = wrap.stack,\n        pos = wrap.pos,\n        stackWeight = wrap.stackWeight;\n      if (!stack || !STATIC_POSITIONS.includes(pos)) {\n        continue;\n      }\n      var _stack = stacks[stack] || (stacks[stack] = {\n        count: 0,\n        placed: 0,\n        weight: 0,\n        size: 0\n      });\n      _stack.count++;\n      _stack.weight += stackWeight;\n    }\n  } catch (err) {\n    _iterator5.e(err);\n  } finally {\n    _iterator5.f();\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  var stacks = buildStacks(layouts);\n  var vBoxMaxWidth = params.vBoxMaxWidth,\n    hBoxMaxHeight = params.hBoxMaxHeight;\n  var i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    var fullSize = layout.box.fullSize;\n    var stack = stacks[layout.stack];\n    var factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  var layoutBoxes = wrapBoxes(boxes);\n  var fullSize = sortByWeight(layoutBoxes.filter(function (wrap) {\n    return wrap.box.fullSize;\n  }), true);\n  var left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  var right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  var top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  var bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  var centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  var centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize: fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  var pos = layout.pos,\n    box = layout.box;\n  var maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    var stack = stacks[layout.stack] || {\n      size: 0,\n      count: 1\n    };\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  var newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  var newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  var widthChanged = newWidth !== chartArea.w;\n  var heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal ? {\n    same: widthChanged,\n    other: heightChanged\n  } : {\n    same: heightChanged,\n    other: widthChanged\n  };\n}\nfunction handleMaxPadding(chartArea) {\n  var maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    var change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  var maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    var margin = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n    positions.forEach(function (pos) {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  var refitBoxes = [];\n  var i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n    var _updateDims = updateDims(chartArea, params, layout, stacks),\n      same = _updateDims.same,\n      other = _updateDims.other;\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  var userPadding = params.padding;\n  var x = chartArea.x,\n    y = chartArea.y;\n  var _iterator6 = _createForOfIteratorHelper(boxes),\n    _step6;\n  try {\n    for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n      var layout = _step6.value;\n      var box = layout.box;\n      var stack = stacks[layout.stack] || {\n        count: 1,\n        placed: 0,\n        weight: 1\n      };\n      var weight = layout.stackWeight / stack.weight || 1;\n      if (layout.horizontal) {\n        var width = chartArea.w * weight;\n        var height = stack.size || box.height;\n        if (defined(stack.start)) {\n          y = stack.start;\n        }\n        if (box.fullSize) {\n          setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n        } else {\n          setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n        }\n        stack.start = y;\n        stack.placed += width;\n        y = box.bottom;\n      } else {\n        var _height = chartArea.h * weight;\n        var _width = stack.size || box.width;\n        if (defined(stack.start)) {\n          x = stack.start;\n        }\n        if (box.fullSize) {\n          setBoxDims(box, x, userPadding.top, _width, params.outerHeight - userPadding.bottom - userPadding.top);\n        } else {\n          setBoxDims(box, x, chartArea.top + stack.placed, _width, _height);\n        }\n        stack.start = x;\n        stack.placed += _height;\n        x = box.right;\n      }\n    }\n  } catch (err) {\n    _iterator6.e(err);\n  } finally {\n    _iterator6.f();\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox: function addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function () {\n      return [{\n        z: 0,\n        draw: function draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox: function removeBox(chart, layoutItem) {\n    var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure: function configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update: function update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    var padding = toPadding(chart.options.layout.padding);\n    var availableWidth = Math.max(width - padding.width, 0);\n    var availableHeight = Math.max(height - padding.height, 0);\n    var boxes = buildLayoutBoxes(chart.boxes);\n    var verticalBoxes = boxes.vertical;\n    var horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, function (box) {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    var visibleVerticalBoxCount = verticalBoxes.reduce(function (total, wrap) {\n      return wrap.box.options && wrap.box.options.display === false ? total : total + 1;\n    }, 0) || 1;\n    var params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding: padding,\n      availableWidth: availableWidth,\n      availableHeight: availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    var maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    var chartArea = Object.assign({\n      maxPadding: maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    var stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w\n    };\n    each(boxes.chartArea, function (layout) {\n      var box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0\n      });\n    });\n  }\n};\nvar BasePlatform = /*#__PURE__*/function () {\n  function BasePlatform() {\n    _classCallCheck(this, BasePlatform);\n  }\n  return _createClass(BasePlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(canvas, aspectRatio) {}\n  }, {\n    key: \"releaseContext\",\n    value: function releaseContext(context) {\n      return false;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(chart, type, listener) {}\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(chart, type, listener) {}\n  }, {\n    key: \"getDevicePixelRatio\",\n    value: function getDevicePixelRatio() {\n      return 1;\n    }\n  }, {\n    key: \"getMaximumSize\",\n    value: function getMaximumSize(element, width, height, aspectRatio) {\n      width = Math.max(0, width || element.width);\n      height = height || element.height;\n      return {\n        width: width,\n        height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n      };\n    }\n  }, {\n    key: \"isAttached\",\n    value: function isAttached(canvas) {\n      return true;\n    }\n  }, {\n    key: \"updateConfig\",\n    value: function updateConfig(config) {}\n  }]);\n}();\nvar BasicPlatform = /*#__PURE__*/function (_BasePlatform) {\n  function BasicPlatform() {\n    _classCallCheck(this, BasicPlatform);\n    return _callSuper(this, BasicPlatform, arguments);\n  }\n  _inherits(BasicPlatform, _BasePlatform);\n  return _createClass(BasicPlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(item) {\n      return item && item.getContext && item.getContext('2d') || null;\n    }\n  }, {\n    key: \"updateConfig\",\n    value: function updateConfig(config) {\n      config.options.animation = false;\n    }\n  }]);\n}(BasePlatform);\nvar EXPANDO_KEY = '$chartjs';\nvar EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nvar isNullOrEmpty = function isNullOrEmpty(value) {\n  return value === null || value === '';\n};\nfunction initCanvas(canvas, aspectRatio) {\n  var style = canvas.style;\n  var renderHeight = canvas.getAttribute('height');\n  var renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    var displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      var displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nvar eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  var type = EVENT_TYPES[event.type] || event.type;\n  var _getRelativePosition = getRelativePosition(event, chart),\n    x = _getRelativePosition.x,\n    y = _getRelativePosition.y;\n  return {\n    type: type,\n    chart: chart,\n    \"native\": event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  var _iterator7 = _createForOfIteratorHelper(nodeList),\n    _step7;\n  try {\n    for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n      var node = _step7.value;\n      if (node === canvas || node.contains(canvas)) {\n        return true;\n      }\n    }\n  } catch (err) {\n    _iterator7.e(err);\n  } finally {\n    _iterator7.f();\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n  var observer = new MutationObserver(function (entries) {\n    var trigger = false;\n    var _iterator8 = _createForOfIteratorHelper(entries),\n      _step8;\n    try {\n      for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n        var entry = _step8.value;\n        trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n        trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n      }\n    } catch (err) {\n      _iterator8.e(err);\n    } finally {\n      _iterator8.f();\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n  var observer = new MutationObserver(function (entries) {\n    var trigger = false;\n    var _iterator9 = _createForOfIteratorHelper(entries),\n      _step9;\n    try {\n      for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n        var entry = _step9.value;\n        trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n        trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n      }\n    } catch (err) {\n      _iterator9.e(err);\n    } finally {\n      _iterator9.f();\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\nvar drpListeningCharts = new Map();\nvar oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  var dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach(function (resize, chart) {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts[\"delete\"](chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n  var container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  var resize = throttled(function (width, height) {\n    var w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  var observer = new ResizeObserver(function (entries) {\n    var entry = entries[0];\n    var width = entry.contentRect.width;\n    var height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  var canvas = chart.canvas;\n  var proxy = throttled(function (event) {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, function (args) {\n    var event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nvar DomPlatform = /*#__PURE__*/function (_BasePlatform2) {\n  function DomPlatform() {\n    _classCallCheck(this, DomPlatform);\n    return _callSuper(this, DomPlatform, arguments);\n  }\n  _inherits(DomPlatform, _BasePlatform2);\n  return _createClass(DomPlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(canvas, aspectRatio) {\n      var context = canvas && canvas.getContext && canvas.getContext('2d');\n      if (context && context.canvas === canvas) {\n        initCanvas(canvas, aspectRatio);\n        return context;\n      }\n      return null;\n    }\n  }, {\n    key: \"releaseContext\",\n    value: function releaseContext(context) {\n      var canvas = context.canvas;\n      if (!canvas[EXPANDO_KEY]) {\n        return false;\n      }\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n        if (isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      var style = initial.style || {};\n      Object.keys(style).forEach(function (key) {\n        canvas.style[key] = style[key];\n      });\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n      return true;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(chart, type, listener) {\n      this.removeEventListener(chart, type);\n      var proxies = chart.$proxies || (chart.$proxies = {});\n      var handlers = {\n        attach: createAttachObserver,\n        detach: createDetachObserver,\n        resize: createResizeObserver\n      };\n      var handler = handlers[type] || createProxyAndListen;\n      proxies[type] = handler(chart, type, listener);\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(chart, type) {\n      var proxies = chart.$proxies || (chart.$proxies = {});\n      var proxy = proxies[type];\n      if (!proxy) {\n        return;\n      }\n      var handlers = {\n        attach: releaseObserver,\n        detach: releaseObserver,\n        resize: releaseObserver\n      };\n      var handler = handlers[type] || removeListener;\n      handler(chart, type, proxy);\n      proxies[type] = undefined;\n    }\n  }, {\n    key: \"getDevicePixelRatio\",\n    value: function getDevicePixelRatio() {\n      return window.devicePixelRatio;\n    }\n  }, {\n    key: \"getMaximumSize\",\n    value: function getMaximumSize(canvas, width, height, aspectRatio) {\n      return _getMaximumSize(canvas, width, height, aspectRatio);\n    }\n  }, {\n    key: \"isAttached\",\n    value: function isAttached(canvas) {\n      var container = _getParentNode(canvas);\n      return !!(container && container.isConnected);\n    }\n  }]);\n}(BasePlatform);\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\nvar PluginService = /*#__PURE__*/function () {\n  function PluginService() {\n    _classCallCheck(this, PluginService);\n    this._init = [];\n  }\n  return _createClass(PluginService, [{\n    key: \"notify\",\n    value: function notify(chart, hook, args, filter) {\n      if (hook === 'beforeInit') {\n        this._init = this._createDescriptors(chart, true);\n        this._notify(this._init, chart, 'install');\n      }\n      var descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n      var result = this._notify(descriptors, chart, hook, args);\n      if (hook === 'afterDestroy') {\n        this._notify(descriptors, chart, 'stop');\n        this._notify(this._init, chart, 'uninstall');\n      }\n      return result;\n    }\n  }, {\n    key: \"_notify\",\n    value: function _notify(descriptors, chart, hook, args) {\n      args = args || {};\n      var _iterator10 = _createForOfIteratorHelper(descriptors),\n        _step10;\n      try {\n        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n          var descriptor = _step10.value;\n          var plugin = descriptor.plugin;\n          var method = plugin[hook];\n          var params = [chart, args, descriptor.options];\n          if (callback(method, params, plugin) === false && args.cancelable) {\n            return false;\n          }\n        }\n      } catch (err) {\n        _iterator10.e(err);\n      } finally {\n        _iterator10.f();\n      }\n      return true;\n    }\n  }, {\n    key: \"invalidate\",\n    value: function invalidate() {\n      if (!isNullOrUndef(this._cache)) {\n        this._oldCache = this._cache;\n        this._cache = undefined;\n      }\n    }\n  }, {\n    key: \"_descriptors\",\n    value: function _descriptors(chart) {\n      if (this._cache) {\n        return this._cache;\n      }\n      var descriptors = this._cache = this._createDescriptors(chart);\n      this._notifyStateChanges(chart);\n      return descriptors;\n    }\n  }, {\n    key: \"_createDescriptors\",\n    value: function _createDescriptors(chart, all) {\n      var config = chart && chart.config;\n      var options = valueOrDefault(config.options && config.options.plugins, {});\n      var plugins = allPlugins(config);\n      return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n  }, {\n    key: \"_notifyStateChanges\",\n    value: function _notifyStateChanges(chart) {\n      var previousDescriptors = this._oldCache || [];\n      var descriptors = this._cache;\n      var diff = function diff(a, b) {\n        return a.filter(function (x) {\n          return !b.some(function (y) {\n            return x.plugin.id === y.plugin.id;\n          });\n        });\n      };\n      this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n      this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n  }]);\n}();\nfunction allPlugins(config) {\n  var localIds = {};\n  var plugins = [];\n  var keys = Object.keys(registry.plugins.items);\n  for (var i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  var local = config.plugins || [];\n  for (var _i2 = 0; _i2 < local.length; _i2++) {\n    var plugin = local[_i2];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n  return {\n    plugins: plugins,\n    localIds: localIds\n  };\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, _ref2, options, all) {\n  var plugins = _ref2.plugins,\n    localIds = _ref2.localIds;\n  var result = [];\n  var context = chart.getContext();\n  var _iterator11 = _createForOfIteratorHelper(plugins),\n    _step11;\n  try {\n    for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n      var plugin = _step11.value;\n      var id = plugin.id;\n      var opts = getOpts(options[id], all);\n      if (opts === null) {\n        continue;\n      }\n      result.push({\n        plugin: plugin,\n        options: pluginOpts(chart.config, {\n          plugin: plugin,\n          local: localIds[id]\n        }, opts, context)\n      });\n    }\n  } catch (err) {\n    _iterator11.e(err);\n  } finally {\n    _iterator11.f();\n  }\n  return result;\n}\nfunction pluginOpts(config, _ref3, opts, context) {\n  var plugin = _ref3.plugin,\n    local = _ref3.local;\n  var keys = config.pluginScopeKeys(plugin);\n  var scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\nfunction getIndexAxis(type, options) {\n  var datasetDefaults = defaults.datasets[type] || {};\n  var datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  var axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  var chartDefaults = overrides[config.type] || {\n    scales: {}\n  };\n  var configScales = options.scales || {};\n  var chartIndexAxis = getIndexAxis(config.type, options);\n  var firstIDs = Object.create(null);\n  var scales = Object.create(null);\n  Object.keys(configScales).forEach(function (id) {\n    var scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(\"Invalid scale configuration for scale: \".concat(id));\n    }\n    if (scaleConf._proxy) {\n      return console.warn(\"Ignoring resolver passed as options for scale: \".concat(id));\n    }\n    var axis = determineAxis(id, scaleConf);\n    var defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    var defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{\n      axis: axis\n    }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(function (dataset) {\n    var type = dataset.type || config.type;\n    var indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    var datasetDefaults = overrides[type] || {};\n    var defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(function (defaultID) {\n      var axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      var id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{\n        axis: axis\n      }, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(function (key) {\n    var scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  var options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nvar keyCache = new Map();\nvar keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  var keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nvar addIfFound = function addIfFound(set, obj, key) {\n  var opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nvar Config = /*#__PURE__*/function () {\n  function Config(config) {\n    _classCallCheck(this, Config);\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  return _createClass(Config, [{\n    key: \"platform\",\n    get: function get() {\n      return this._config.platform;\n    }\n  }, {\n    key: \"type\",\n    get: function get() {\n      return this._config.type;\n    },\n    set: function set(type) {\n      this._config.type = type;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this._config.data;\n    },\n    set: function set(data) {\n      this._config.data = initData(data);\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._config.options;\n    },\n    set: function set(options) {\n      this._config.options = options;\n    }\n  }, {\n    key: \"plugins\",\n    get: function get() {\n      return this._config.plugins;\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var config = this._config;\n      this.clearCache();\n      initOptions(config);\n    }\n  }, {\n    key: \"clearCache\",\n    value: function clearCache() {\n      this._scopeCache.clear();\n      this._resolverCache.clear();\n    }\n  }, {\n    key: \"datasetScopeKeys\",\n    value: function datasetScopeKeys(datasetType) {\n      return cachedKeys(datasetType, function () {\n        return [[\"datasets.\".concat(datasetType), '']];\n      });\n    }\n  }, {\n    key: \"datasetAnimationScopeKeys\",\n    value: function datasetAnimationScopeKeys(datasetType, transition) {\n      return cachedKeys(\"\".concat(datasetType, \".transition.\").concat(transition), function () {\n        return [[\"datasets.\".concat(datasetType, \".transitions.\").concat(transition), \"transitions.\".concat(transition)], [\"datasets.\".concat(datasetType), '']];\n      });\n    }\n  }, {\n    key: \"datasetElementScopeKeys\",\n    value: function datasetElementScopeKeys(datasetType, elementType) {\n      return cachedKeys(\"\".concat(datasetType, \"-\").concat(elementType), function () {\n        return [[\"datasets.\".concat(datasetType, \".elements.\").concat(elementType), \"datasets.\".concat(datasetType), \"elements.\".concat(elementType), '']];\n      });\n    }\n  }, {\n    key: \"pluginScopeKeys\",\n    value: function pluginScopeKeys(plugin) {\n      var id = plugin.id;\n      var type = this.type;\n      return cachedKeys(\"\".concat(type, \"-plugin-\").concat(id), function () {\n        return [[\"plugins.\".concat(id)].concat(_toConsumableArray(plugin.additionalOptionScopes || []))];\n      });\n    }\n  }, {\n    key: \"_cachedScopes\",\n    value: function _cachedScopes(mainScope, resetCache) {\n      var _scopeCache = this._scopeCache;\n      var cache = _scopeCache.get(mainScope);\n      if (!cache || resetCache) {\n        cache = new Map();\n        _scopeCache.set(mainScope, cache);\n      }\n      return cache;\n    }\n  }, {\n    key: \"getOptionScopes\",\n    value: function getOptionScopes(mainScope, keyLists, resetCache) {\n      var options = this.options,\n        type = this.type;\n      var cache = this._cachedScopes(mainScope, resetCache);\n      var cached = cache.get(keyLists);\n      if (cached) {\n        return cached;\n      }\n      var scopes = new Set();\n      keyLists.forEach(function (keys) {\n        if (mainScope) {\n          scopes.add(mainScope);\n          keys.forEach(function (key) {\n            return addIfFound(scopes, mainScope, key);\n          });\n        }\n        keys.forEach(function (key) {\n          return addIfFound(scopes, options, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, overrides[type] || {}, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, defaults, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, descriptors, key);\n        });\n      });\n      var array = Array.from(scopes);\n      if (array.length === 0) {\n        array.push(Object.create(null));\n      }\n      if (keysCached.has(keyLists)) {\n        cache.set(keyLists, array);\n      }\n      return array;\n    }\n  }, {\n    key: \"chartOptionScopes\",\n    value: function chartOptionScopes() {\n      var options = this.options,\n        type = this.type;\n      return [options, overrides[type] || {}, defaults.datasets[type] || {}, {\n        type: type\n      }, defaults, descriptors];\n    }\n  }, {\n    key: \"resolveNamedOptions\",\n    value: function resolveNamedOptions(scopes, names, context) {\n      var prefixes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [''];\n      var result = {\n        $shared: true\n      };\n      var _getResolver = getResolver(this._resolverCache, scopes, prefixes),\n        resolver = _getResolver.resolver,\n        subPrefixes = _getResolver.subPrefixes;\n      var options = resolver;\n      if (needContext(resolver, names)) {\n        result.$shared = false;\n        context = isFunction(context) ? context() : context;\n        var subResolver = this.createResolver(scopes, context, subPrefixes);\n        options = _attachContext(resolver, context, subResolver);\n      }\n      var _iterator12 = _createForOfIteratorHelper(names),\n        _step12;\n      try {\n        for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n          var prop = _step12.value;\n          result[prop] = options[prop];\n        }\n      } catch (err) {\n        _iterator12.e(err);\n      } finally {\n        _iterator12.f();\n      }\n      return result;\n    }\n  }, {\n    key: \"createResolver\",\n    value: function createResolver(scopes, context) {\n      var prefixes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [''];\n      var descriptorDefaults = arguments.length > 3 ? arguments[3] : undefined;\n      var _getResolver2 = getResolver(this._resolverCache, scopes, prefixes),\n        resolver = _getResolver2.resolver;\n      return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n  }]);\n}();\nfunction getResolver(resolverCache, scopes, prefixes) {\n  var cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  var cacheKey = prefixes.join();\n  var cached = cache.get(cacheKey);\n  if (!cached) {\n    var resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver: resolver,\n      subPrefixes: prefixes.filter(function (p) {\n        return !p.toLowerCase().includes('hover');\n      })\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nvar hasFunction = function hasFunction(value) {\n  return isObject(value) && Object.getOwnPropertyNames(value).reduce(function (acc, key) {\n    return acc || isFunction(value[key]);\n  }, false);\n};\nfunction needContext(proxy, names) {\n  var _descriptors2 = _descriptors(proxy),\n    isScriptable = _descriptors2.isScriptable,\n    isIndexable = _descriptors2.isIndexable;\n  var _iterator13 = _createForOfIteratorHelper(names),\n    _step13;\n  try {\n    for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n      var prop = _step13.value;\n      var scriptable = isScriptable(prop);\n      var indexable = isIndexable(prop);\n      var value = (indexable || scriptable) && proxy[prop];\n      if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n        return true;\n      }\n    }\n  } catch (err) {\n    _iterator13.e(err);\n  } finally {\n    _iterator13.f();\n  }\n  return false;\n}\nvar version = \"3.9.1\";\nvar KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n  return function (a, b) {\n    return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  var chart = context.chart;\n  var animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  var chart = context.chart;\n  var animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nvar instances = {};\nvar getChart = function getChart(key) {\n  var canvas = getCanvas(key);\n  return Object.values(instances).filter(function (c) {\n    return c.canvas === canvas;\n  }).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  var keys = Object.keys(obj);\n  for (var _i3 = 0, _keys = keys; _i3 < _keys.length; _i3++) {\n    var key = _keys[_i3];\n    var intKey = +key;\n    if (intKey >= start) {\n      var value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nvar Chart = /*#__PURE__*/function () {\n  function Chart(item, userConfig) {\n    var _this12 = this;\n    _classCallCheck(this, Chart);\n    var config = this.config = new Config(userConfig);\n    var initialCanvas = getCanvas(item);\n    var existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n    }\n    var options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    var context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    var canvas = context && context.canvas;\n    var height = canvas && canvas.height;\n    var width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(function (mode) {\n      return _this12.update(mode);\n    }, options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  return _createClass(Chart, [{\n    key: \"aspectRatio\",\n    get: function get() {\n      var _this$options11 = this.options,\n        aspectRatio = _this$options11.aspectRatio,\n        maintainAspectRatio = _this$options11.maintainAspectRatio,\n        width = this.width,\n        height = this.height,\n        _aspectRatio = this._aspectRatio;\n      if (!isNullOrUndef(aspectRatio)) {\n        return aspectRatio;\n      }\n      if (maintainAspectRatio && _aspectRatio) {\n        return _aspectRatio;\n      }\n      return height ? width / height : null;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this.config.data;\n    },\n    set: function set(data) {\n      this.config.data = data;\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._options;\n    },\n    set: function set(options) {\n      this.config.options = options;\n    }\n  }, {\n    key: \"_initialize\",\n    value: function _initialize() {\n      this.notifyPlugins('beforeInit');\n      if (this.options.responsive) {\n        this.resize();\n      } else {\n        retinaScale(this, this.options.devicePixelRatio);\n      }\n      this.bindEvents();\n      this.notifyPlugins('afterInit');\n      return this;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      clearCanvas(this.canvas, this.ctx);\n      return this;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      animator.stop(this);\n      return this;\n    }\n  }, {\n    key: \"resize\",\n    value: function resize(width, height) {\n      if (!animator.running(this)) {\n        this._resize(width, height);\n      } else {\n        this._resizeBeforeDraw = {\n          width: width,\n          height: height\n        };\n      }\n    }\n  }, {\n    key: \"_resize\",\n    value: function _resize(width, height) {\n      var options = this.options;\n      var canvas = this.canvas;\n      var aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n      var newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n      var newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n      var mode = this.width ? 'resize' : 'attach';\n      this.width = newSize.width;\n      this.height = newSize.height;\n      this._aspectRatio = this.aspectRatio;\n      if (!retinaScale(this, newRatio, true)) {\n        return;\n      }\n      this.notifyPlugins('resize', {\n        size: newSize\n      });\n      callback(options.onResize, [this, newSize], this);\n      if (this.attached) {\n        if (this._doResize(mode)) {\n          this.render();\n        }\n      }\n    }\n  }, {\n    key: \"ensureScalesHaveIDs\",\n    value: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      each(scalesOptions, function (axisOptions, axisID) {\n        axisOptions.id = axisID;\n      });\n    }\n  }, {\n    key: \"buildOrUpdateScales\",\n    value: function buildOrUpdateScales() {\n      var _this13 = this;\n      var options = this.options;\n      var scaleOpts = options.scales;\n      var scales = this.scales;\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n      var items = [];\n      if (scaleOpts) {\n        items = items.concat(Object.keys(scaleOpts).map(function (id) {\n          var scaleOptions = scaleOpts[id];\n          var axis = determineAxis(id, scaleOptions);\n          var isRadial = axis === 'r';\n          var isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        }));\n      }\n      each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var axis = determineAxis(id, scaleOptions);\n        var scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n        if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n        updated[id] = true;\n        var scale = null;\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n        } else {\n          var scaleClass = registry.getScale(scaleType);\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            ctx: _this13.ctx,\n            chart: _this13\n          });\n          scales[scale.id] = scale;\n        }\n        scale.init(scaleOptions, options);\n      });\n      each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      each(scales, function (scale) {\n        layouts.configure(_this13, scale, scale.options);\n        layouts.addBox(_this13, scale);\n      });\n    }\n  }, {\n    key: \"_updateMetasets\",\n    value: function _updateMetasets() {\n      var metasets = this._metasets;\n      var numData = this.data.datasets.length;\n      var numMeta = metasets.length;\n      metasets.sort(function (a, b) {\n        return a.index - b.index;\n      });\n      if (numMeta > numData) {\n        for (var i = numData; i < numMeta; ++i) {\n          this._destroyDatasetMeta(i);\n        }\n        metasets.splice(numData, numMeta - numData);\n      }\n      this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n  }, {\n    key: \"_removeUnreferencedMetasets\",\n    value: function _removeUnreferencedMetasets() {\n      var _this14 = this;\n      var metasets = this._metasets,\n        datasets = this.data.datasets;\n      if (metasets.length > datasets.length) {\n        delete this._stacks;\n      }\n      metasets.forEach(function (meta, index) {\n        if (datasets.filter(function (x) {\n          return x === meta._dataset;\n        }).length === 0) {\n          _this14._destroyDatasetMeta(index);\n        }\n      });\n    }\n  }, {\n    key: \"buildOrUpdateControllers\",\n    value: function buildOrUpdateControllers() {\n      var newControllers = [];\n      var datasets = this.data.datasets;\n      var i, ilen;\n      this._removeUnreferencedMetasets();\n      for (i = 0, ilen = datasets.length; i < ilen; i++) {\n        var dataset = datasets[i];\n        var meta = this.getDatasetMeta(i);\n        var type = dataset.type || this.config.type;\n        if (meta.type && meta.type !== type) {\n          this._destroyDatasetMeta(i);\n          meta = this.getDatasetMeta(i);\n        }\n        meta.type = type;\n        meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n        meta.order = dataset.order || 0;\n        meta.index = i;\n        meta.label = '' + dataset.label;\n        meta.visible = this.isDatasetVisible(i);\n        if (meta.controller) {\n          meta.controller.updateIndex(i);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = registry.getController(type);\n          var _defaults$datasets$ty = defaults.datasets[type],\n            datasetElementType = _defaults$datasets$ty.datasetElementType,\n            dataElementType = _defaults$datasets$ty.dataElementType;\n          Object.assign(ControllerClass.prototype, {\n            dataElementType: registry.getElement(dataElementType),\n            datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n          });\n          meta.controller = new ControllerClass(this, i);\n          newControllers.push(meta.controller);\n        }\n      }\n      this._updateMetasets();\n      return newControllers;\n    }\n  }, {\n    key: \"_resetElements\",\n    value: function _resetElements() {\n      var _this15 = this;\n      each(this.data.datasets, function (dataset, datasetIndex) {\n        _this15.getDatasetMeta(datasetIndex).controller.reset();\n      }, this);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._resetElements();\n      this.notifyPlugins('reset');\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var config = this.config;\n      config.update();\n      var options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n      var animsDisabled = this._animationsDisabled = !options.animation;\n      this._updateScales();\n      this._checkEventBindings();\n      this._updateHiddenIndices();\n      this._plugins.invalidate();\n      if (this.notifyPlugins('beforeUpdate', {\n        mode: mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      var newControllers = this.buildOrUpdateControllers();\n      this.notifyPlugins('beforeElementsUpdate');\n      var minPadding = 0;\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n        var _this$getDatasetMeta = this.getDatasetMeta(i),\n          controller = _this$getDatasetMeta.controller;\n        var reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n        controller.buildOrUpdateElements(reset);\n        minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n      }\n      minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n      this._updateLayout(minPadding);\n      if (!animsDisabled) {\n        each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n      this._updateDatasets(mode);\n      this.notifyPlugins('afterUpdate', {\n        mode: mode\n      });\n      this._layers.sort(compare2Level('z', '_idx'));\n      var _active = this._active,\n        _lastEvent = this._lastEvent;\n      if (_lastEvent) {\n        this._eventHandler(_lastEvent, true);\n      } else if (_active.length) {\n        this._updateHoverStyles(_active, _active, true);\n      }\n      this.render();\n    }\n  }, {\n    key: \"_updateScales\",\n    value: function _updateScales() {\n      var _this16 = this;\n      each(this.scales, function (scale) {\n        layouts.removeBox(_this16, scale);\n      });\n      this.ensureScalesHaveIDs();\n      this.buildOrUpdateScales();\n    }\n  }, {\n    key: \"_checkEventBindings\",\n    value: function _checkEventBindings() {\n      var options = this.options;\n      var existingEvents = new Set(Object.keys(this._listeners));\n      var newEvents = new Set(options.events);\n      if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n        this.unbindEvents();\n        this.bindEvents();\n      }\n    }\n  }, {\n    key: \"_updateHiddenIndices\",\n    value: function _updateHiddenIndices() {\n      var _hiddenIndices = this._hiddenIndices;\n      var changes = this._getUniformDataChanges() || [];\n      var _iterator14 = _createForOfIteratorHelper(changes),\n        _step14;\n      try {\n        for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n          var _step14$value = _step14.value,\n            method = _step14$value.method,\n            start = _step14$value.start,\n            count = _step14$value.count;\n          var move = method === '_removeElements' ? -count : count;\n          moveNumericKeys(_hiddenIndices, start, move);\n        }\n      } catch (err) {\n        _iterator14.e(err);\n      } finally {\n        _iterator14.f();\n      }\n    }\n  }, {\n    key: \"_getUniformDataChanges\",\n    value: function _getUniformDataChanges() {\n      var _dataChanges = this._dataChanges;\n      if (!_dataChanges || !_dataChanges.length) {\n        return;\n      }\n      this._dataChanges = [];\n      var datasetCount = this.data.datasets.length;\n      var makeSet = function makeSet(idx) {\n        return new Set(_dataChanges.filter(function (c) {\n          return c[0] === idx;\n        }).map(function (c, i) {\n          return i + ',' + c.splice(1).join(',');\n        }));\n      };\n      var changeSet = makeSet(0);\n      for (var i = 1; i < datasetCount; i++) {\n        if (!setsEqual(changeSet, makeSet(i))) {\n          return;\n        }\n      }\n      return Array.from(changeSet).map(function (c) {\n        return c.split(',');\n      }).map(function (a) {\n        return {\n          method: a[1],\n          start: +a[2],\n          count: +a[3]\n        };\n      });\n    }\n  }, {\n    key: \"_updateLayout\",\n    value: function _updateLayout(minPadding) {\n      var _this17 = this;\n      if (this.notifyPlugins('beforeLayout', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      layouts.update(this, this.width, this.height, minPadding);\n      var area = this.chartArea;\n      var noArea = area.width <= 0 || area.height <= 0;\n      this._layers = [];\n      each(this.boxes, function (box) {\n        var _this17$_layers;\n        if (noArea && box.position === 'chartArea') {\n          return;\n        }\n        if (box.configure) {\n          box.configure();\n        }\n        (_this17$_layers = _this17._layers).push.apply(_this17$_layers, _toConsumableArray(box._layers()));\n      }, this);\n      this._layers.forEach(function (item, index) {\n        item._idx = index;\n      });\n      this.notifyPlugins('afterLayout');\n    }\n  }, {\n    key: \"_updateDatasets\",\n    value: function _updateDatasets(mode) {\n      if (this.notifyPlugins('beforeDatasetsUpdate', {\n        mode: mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        this.getDatasetMeta(i).controller.configure();\n      }\n      for (var _i4 = 0, _ilen = this.data.datasets.length; _i4 < _ilen; ++_i4) {\n        this._updateDataset(_i4, isFunction(mode) ? mode({\n          datasetIndex: _i4\n        }) : mode);\n      }\n      this.notifyPlugins('afterDatasetsUpdate', {\n        mode: mode\n      });\n    }\n  }, {\n    key: \"_updateDataset\",\n    value: function _updateDataset(index, mode) {\n      var meta = this.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        mode: mode,\n        cancelable: true\n      };\n      if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n        return;\n      }\n      meta.controller._update(mode);\n      args.cancelable = false;\n      this.notifyPlugins('afterDatasetUpdate', args);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.notifyPlugins('beforeRender', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      if (animator.has(this)) {\n        if (this.attached && !animator.running(this)) {\n          animator.start(this);\n        }\n      } else {\n        this.draw();\n        onAnimationsComplete({\n          chart: this\n        });\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var i;\n      if (this._resizeBeforeDraw) {\n        var _this$_resizeBeforeDr = this._resizeBeforeDraw,\n          width = _this$_resizeBeforeDr.width,\n          height = _this$_resizeBeforeDr.height;\n        this._resize(width, height);\n        this._resizeBeforeDraw = null;\n      }\n      this.clear();\n      if (this.width <= 0 || this.height <= 0) {\n        return;\n      }\n      if (this.notifyPlugins('beforeDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      var layers = this._layers;\n      for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n        layers[i].draw(this.chartArea);\n      }\n      this._drawDatasets();\n      for (; i < layers.length; ++i) {\n        layers[i].draw(this.chartArea);\n      }\n      this.notifyPlugins('afterDraw');\n    }\n  }, {\n    key: \"_getSortedDatasetMetas\",\n    value: function _getSortedDatasetMetas(filterVisible) {\n      var metasets = this._sortedMetasets;\n      var result = [];\n      var i, ilen;\n      for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n        var meta = metasets[i];\n        if (!filterVisible || meta.visible) {\n          result.push(meta);\n        }\n      }\n      return result;\n    }\n  }, {\n    key: \"getSortedVisibleDatasetMetas\",\n    value: function getSortedVisibleDatasetMetas() {\n      return this._getSortedDatasetMetas(true);\n    }\n  }, {\n    key: \"_drawDatasets\",\n    value: function _drawDatasets() {\n      if (this.notifyPlugins('beforeDatasetsDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      var metasets = this.getSortedVisibleDatasetMetas();\n      for (var i = metasets.length - 1; i >= 0; --i) {\n        this._drawDataset(metasets[i]);\n      }\n      this.notifyPlugins('afterDatasetsDraw');\n    }\n  }, {\n    key: \"_drawDataset\",\n    value: function _drawDataset(meta) {\n      var ctx = this.ctx;\n      var clip = meta._clip;\n      var useClip = !clip.disabled;\n      var area = this.chartArea;\n      var args = {\n        meta: meta,\n        index: meta.index,\n        cancelable: true\n      };\n      if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n        return;\n      }\n      if (useClip) {\n        clipArea(ctx, {\n          left: clip.left === false ? 0 : area.left - clip.left,\n          right: clip.right === false ? this.width : area.right + clip.right,\n          top: clip.top === false ? 0 : area.top - clip.top,\n          bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n        });\n      }\n      meta.controller.draw();\n      if (useClip) {\n        unclipArea(ctx);\n      }\n      args.cancelable = false;\n      this.notifyPlugins('afterDatasetDraw', args);\n    }\n  }, {\n    key: \"isPointInArea\",\n    value: function isPointInArea(point) {\n      return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n  }, {\n    key: \"getElementsAtEventForMode\",\n    value: function getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n      var method = Interaction.modes[mode];\n      if (typeof method === 'function') {\n        return method(this, e, options, useFinalPosition);\n      }\n      return [];\n    }\n  }, {\n    key: \"getDatasetMeta\",\n    value: function getDatasetMeta(datasetIndex) {\n      var dataset = this.data.datasets[datasetIndex];\n      var metasets = this._metasets;\n      var meta = metasets.filter(function (x) {\n        return x && x._dataset === dataset;\n      }).pop();\n      if (!meta) {\n        meta = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          xAxisID: null,\n          yAxisID: null,\n          order: dataset && dataset.order || 0,\n          index: datasetIndex,\n          _dataset: dataset,\n          _parsed: [],\n          _sorted: false\n        };\n        metasets.push(meta);\n      }\n      return meta;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext() {\n      return this.$context || (this.$context = createContext(null, {\n        chart: this,\n        type: 'chart'\n      }));\n    }\n  }, {\n    key: \"getVisibleDatasetCount\",\n    value: function getVisibleDatasetCount() {\n      return this.getSortedVisibleDatasetMetas().length;\n    }\n  }, {\n    key: \"isDatasetVisible\",\n    value: function isDatasetVisible(datasetIndex) {\n      var dataset = this.data.datasets[datasetIndex];\n      if (!dataset) {\n        return false;\n      }\n      var meta = this.getDatasetMeta(datasetIndex);\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n  }, {\n    key: \"setDatasetVisibility\",\n    value: function setDatasetVisibility(datasetIndex, visible) {\n      var meta = this.getDatasetMeta(datasetIndex);\n      meta.hidden = !visible;\n    }\n  }, {\n    key: \"toggleDataVisibility\",\n    value: function toggleDataVisibility(index) {\n      this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n  }, {\n    key: \"getDataVisibility\",\n    value: function getDataVisibility(index) {\n      return !this._hiddenIndices[index];\n    }\n  }, {\n    key: \"_updateVisibility\",\n    value: function _updateVisibility(datasetIndex, dataIndex, visible) {\n      var mode = visible ? 'show' : 'hide';\n      var meta = this.getDatasetMeta(datasetIndex);\n      var anims = meta.controller._resolveAnimations(undefined, mode);\n      if (defined(dataIndex)) {\n        meta.data[dataIndex].hidden = !visible;\n        this.update();\n      } else {\n        this.setDatasetVisibility(datasetIndex, visible);\n        anims.update(meta, {\n          visible: visible\n        });\n        this.update(function (ctx) {\n          return ctx.datasetIndex === datasetIndex ? mode : undefined;\n        });\n      }\n    }\n  }, {\n    key: \"hide\",\n    value: function hide(datasetIndex, dataIndex) {\n      this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n  }, {\n    key: \"show\",\n    value: function show(datasetIndex, dataIndex) {\n      this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n  }, {\n    key: \"_destroyDatasetMeta\",\n    value: function _destroyDatasetMeta(datasetIndex) {\n      var meta = this._metasets[datasetIndex];\n      if (meta && meta.controller) {\n        meta.controller._destroy();\n      }\n      delete this._metasets[datasetIndex];\n    }\n  }, {\n    key: \"_stop\",\n    value: function _stop() {\n      var i, ilen;\n      this.stop();\n      animator.remove(this);\n      for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.notifyPlugins('beforeDestroy');\n      var canvas = this.canvas,\n        ctx = this.ctx;\n      this._stop();\n      this.config.clearCache();\n      if (canvas) {\n        this.unbindEvents();\n        clearCanvas(canvas, ctx);\n        this.platform.releaseContext(ctx);\n        this.canvas = null;\n        this.ctx = null;\n      }\n      this.notifyPlugins('destroy');\n      delete instances[this.id];\n      this.notifyPlugins('afterDestroy');\n    }\n  }, {\n    key: \"toBase64Image\",\n    value: function toBase64Image() {\n      var _this$canvas;\n      return (_this$canvas = this.canvas).toDataURL.apply(_this$canvas, arguments);\n    }\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents() {\n      this.bindUserEvents();\n      if (this.options.responsive) {\n        this.bindResponsiveEvents();\n      } else {\n        this.attached = true;\n      }\n    }\n  }, {\n    key: \"bindUserEvents\",\n    value: function bindUserEvents() {\n      var _this18 = this;\n      var listeners = this._listeners;\n      var platform = this.platform;\n      var _add = function _add(type, listener) {\n        platform.addEventListener(_this18, type, listener);\n        listeners[type] = listener;\n      };\n      var listener = function listener(e, x, y) {\n        e.offsetX = x;\n        e.offsetY = y;\n        _this18._eventHandler(e);\n      };\n      each(this.options.events, function (type) {\n        return _add(type, listener);\n      });\n    }\n  }, {\n    key: \"bindResponsiveEvents\",\n    value: function bindResponsiveEvents() {\n      var _this19 = this;\n      if (!this._responsiveListeners) {\n        this._responsiveListeners = {};\n      }\n      var listeners = this._responsiveListeners;\n      var platform = this.platform;\n      var _add = function _add(type, listener) {\n        platform.addEventListener(_this19, type, listener);\n        listeners[type] = listener;\n      };\n      var _remove = function _remove(type, listener) {\n        if (listeners[type]) {\n          platform.removeEventListener(_this19, type, listener);\n          delete listeners[type];\n        }\n      };\n      var listener = function listener(width, height) {\n        if (_this19.canvas) {\n          _this19.resize(width, height);\n        }\n      };\n      var detached;\n      var _attached = function attached() {\n        _remove('attach', _attached);\n        _this19.attached = true;\n        _this19.resize();\n        _add('resize', listener);\n        _add('detach', detached);\n      };\n      detached = function detached() {\n        _this19.attached = false;\n        _remove('resize', listener);\n        _this19._stop();\n        _this19._resize(0, 0);\n        _add('attach', _attached);\n      };\n      if (platform.isAttached(this.canvas)) {\n        _attached();\n      } else {\n        detached();\n      }\n    }\n  }, {\n    key: \"unbindEvents\",\n    value: function unbindEvents() {\n      var _this20 = this;\n      each(this._listeners, function (listener, type) {\n        _this20.platform.removeEventListener(_this20, type, listener);\n      });\n      this._listeners = {};\n      each(this._responsiveListeners, function (listener, type) {\n        _this20.platform.removeEventListener(_this20, type, listener);\n      });\n      this._responsiveListeners = undefined;\n    }\n  }, {\n    key: \"updateHoverStyle\",\n    value: function updateHoverStyle(items, mode, enabled) {\n      var prefix = enabled ? 'set' : 'remove';\n      var meta, item, i, ilen;\n      if (mode === 'dataset') {\n        meta = this.getDatasetMeta(items[0].datasetIndex);\n        meta.controller['_' + prefix + 'DatasetHoverStyle']();\n      }\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        item = items[i];\n        var controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n        if (controller) {\n          controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n        }\n      }\n    }\n  }, {\n    key: \"getActiveElements\",\n    value: function getActiveElements() {\n      return this._active || [];\n    }\n  }, {\n    key: \"setActiveElements\",\n    value: function setActiveElements(activeElements) {\n      var _this21 = this;\n      var lastActive = this._active || [];\n      var active = activeElements.map(function (_ref4) {\n        var datasetIndex = _ref4.datasetIndex,\n          index = _ref4.index;\n        var meta = _this21.getDatasetMeta(datasetIndex);\n        if (!meta) {\n          throw new Error('No dataset found at index ' + datasetIndex);\n        }\n        return {\n          datasetIndex: datasetIndex,\n          element: meta.data[index],\n          index: index\n        };\n      });\n      var changed = !_elementsEqual(active, lastActive);\n      if (changed) {\n        this._active = active;\n        this._lastEvent = null;\n        this._updateHoverStyles(active, lastActive);\n      }\n    }\n  }, {\n    key: \"notifyPlugins\",\n    value: function notifyPlugins(hook, args, filter) {\n      return this._plugins.notify(this, hook, args, filter);\n    }\n  }, {\n    key: \"_updateHoverStyles\",\n    value: function _updateHoverStyles(active, lastActive, replay) {\n      var hoverOptions = this.options.hover;\n      var diff = function diff(a, b) {\n        return a.filter(function (x) {\n          return !b.some(function (y) {\n            return x.datasetIndex === y.datasetIndex && x.index === y.index;\n          });\n        });\n      };\n      var deactivated = diff(lastActive, active);\n      var activated = replay ? active : diff(active, lastActive);\n      if (deactivated.length) {\n        this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n      }\n      if (activated.length && hoverOptions.mode) {\n        this.updateHoverStyle(activated, hoverOptions.mode, true);\n      }\n    }\n  }, {\n    key: \"_eventHandler\",\n    value: function _eventHandler(e, replay) {\n      var _this22 = this;\n      var args = {\n        event: e,\n        replay: replay,\n        cancelable: true,\n        inChartArea: this.isPointInArea(e)\n      };\n      var eventFilter = function eventFilter(plugin) {\n        return (plugin.options.events || _this22.options.events).includes(e[\"native\"].type);\n      };\n      if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n        return;\n      }\n      var changed = this._handleEvent(e, replay, args.inChartArea);\n      args.cancelable = false;\n      this.notifyPlugins('afterEvent', args, eventFilter);\n      if (changed || args.changed) {\n        this.render();\n      }\n      return this;\n    }\n  }, {\n    key: \"_handleEvent\",\n    value: function _handleEvent(e, replay, inChartArea) {\n      var _this$_active = this._active,\n        lastActive = _this$_active === void 0 ? [] : _this$_active,\n        options = this.options;\n      var useFinalPosition = replay;\n      var active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n      var isClick = _isClickEvent(e);\n      var lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n      if (inChartArea) {\n        this._lastEvent = null;\n        callback(options.onHover, [e, active, this], this);\n        if (isClick) {\n          callback(options.onClick, [e, active, this], this);\n        }\n      }\n      var changed = !_elementsEqual(active, lastActive);\n      if (changed || replay) {\n        this._active = active;\n        this._updateHoverStyles(active, lastActive, replay);\n      }\n      this._lastEvent = lastEvent;\n      return changed;\n    }\n  }, {\n    key: \"_getActiveElements\",\n    value: function _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n      if (e.type === 'mouseout') {\n        return [];\n      }\n      if (!inChartArea) {\n        return lastActive;\n      }\n      var hoverOptions = this.options.hover;\n      return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n  }]);\n}();\nvar invalidatePlugins = function invalidatePlugins() {\n  return each(Chart.instances, function (chart) {\n    return chart._plugins.invalidate();\n  });\n};\nvar enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable: enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable: enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable: enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable: enumerable,\n    value: registry\n  },\n  version: {\n    enumerable: enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable: enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable: enumerable,\n    value: function value() {\n      registry.add.apply(registry, arguments);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable: enumerable,\n    value: function value() {\n      registry.remove.apply(registry, arguments);\n      invalidatePlugins();\n    }\n  }\n});\nfunction clipArc(ctx, element, endAngle) {\n  var startAngle = element.startAngle,\n    pixelMargin = element.pixelMargin,\n    x = element.x,\n    y = element.y,\n    outerRadius = element.outerRadius,\n    innerRadius = element.innerRadius;\n  var angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  var o = toRadiusCorners(arc.options.borderRadius);\n  var halfThickness = (outerRadius - innerRadius) / 2;\n  var innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  var computeOuterLimit = function computeOuterLimit(val) {\n    var outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta)\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end, circular) {\n  var x = element.x,\n    y = element.y,\n    start = element.startAngle,\n    pixelMargin = element.pixelMargin,\n    innerR = element.innerRadius;\n  var outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  var innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  var spacingOffset = 0;\n  var alpha = end - start;\n  if (spacing) {\n    var noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    var noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    var avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    var adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  var beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  var angleOffset = (alpha - beta) / 2;\n  var startAngle = start + angleOffset + spacingOffset;\n  var endAngle = end - angleOffset - spacingOffset;\n  var _parseBorderRadius$ = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle),\n    outerStart = _parseBorderRadius$.outerStart,\n    outerEnd = _parseBorderRadius$.outerEnd,\n    innerStart = _parseBorderRadius$.innerStart,\n    innerEnd = _parseBorderRadius$.innerEnd;\n  var outerStartAdjustedRadius = outerRadius - outerStart;\n  var outerEndAdjustedRadius = outerRadius - outerEnd;\n  var outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  var outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  var innerStartAdjustedRadius = innerRadius + innerStart;\n  var innerEndAdjustedRadius = innerRadius + innerEnd;\n  var innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  var innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  if (circular) {\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n    if (outerEnd > 0) {\n      var pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n    var p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n    if (innerEnd > 0) {\n      var _pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(_pCenter.x, _pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n    ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, startAngle + innerStart / innerRadius, true);\n    if (innerStart > 0) {\n      var _pCenter2 = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(_pCenter2.x, _pCenter2.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n    var p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n    if (outerStart > 0) {\n      var _pCenter3 = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(_pCenter3.x, _pCenter3.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n    var outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    var outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n    var outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    var outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n  var fullCircles = element.fullCircles,\n    startAngle = element.startAngle,\n    circumference = element.circumference;\n  var endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU, circular);\n    for (var i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  var x = element.x,\n    y = element.y,\n    startAngle = element.startAngle,\n    pixelMargin = element.pixelMargin,\n    fullCircles = element.fullCircles;\n  var outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  var innerRadius = element.innerRadius + pixelMargin;\n  var i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle, circular) {\n  var options = element.options;\n  var borderWidth = options.borderWidth,\n    borderJoinStyle = options.borderJoinStyle;\n  var inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.stroke();\n}\nvar ArcElement = /*#__PURE__*/function (_Element2) {\n  function ArcElement(cfg) {\n    var _this23;\n    _classCallCheck(this, ArcElement);\n    _this23 = _callSuper(this, ArcElement);\n    _this23.options = undefined;\n    _this23.circumference = undefined;\n    _this23.startAngle = undefined;\n    _this23.endAngle = undefined;\n    _this23.innerRadius = undefined;\n    _this23.outerRadius = undefined;\n    _this23.pixelMargin = 0;\n    _this23.fullCircles = 0;\n    if (cfg) {\n      Object.assign(_this23, cfg);\n    }\n    return _this23;\n  }\n  _inherits(ArcElement, _Element2);\n  return _createClass(ArcElement, [{\n    key: \"inRange\",\n    value: function inRange(chartX, chartY, useFinalPosition) {\n      var point = this.getProps(['x', 'y'], useFinalPosition);\n      var _getAngleFromPoint2 = getAngleFromPoint(point, {\n          x: chartX,\n          y: chartY\n        }),\n        angle = _getAngleFromPoint2.angle,\n        distance = _getAngleFromPoint2.distance;\n      var _this$getProps2 = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition),\n        startAngle = _this$getProps2.startAngle,\n        endAngle = _this$getProps2.endAngle,\n        innerRadius = _this$getProps2.innerRadius,\n        outerRadius = _this$getProps2.outerRadius,\n        circumference = _this$getProps2.circumference;\n      var rAdjust = this.options.spacing / 2;\n      var _circumference = valueOrDefault(circumference, endAngle - startAngle);\n      var betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n      var withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n      return betweenAngles && withinRadius;\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps3 = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition),\n        x = _this$getProps3.x,\n        y = _this$getProps3.y,\n        startAngle = _this$getProps3.startAngle,\n        endAngle = _this$getProps3.endAngle,\n        innerRadius = _this$getProps3.innerRadius,\n        outerRadius = _this$getProps3.outerRadius;\n      var _this$options12 = this.options,\n        offset = _this$options12.offset,\n        spacing = _this$options12.spacing;\n      var halfAngle = (startAngle + endAngle) / 2;\n      var halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n      return {\n        x: x + Math.cos(halfAngle) * halfRadius,\n        y: y + Math.sin(halfAngle) * halfRadius\n      };\n    }\n  }, {\n    key: \"tooltipPosition\",\n    value: function tooltipPosition(useFinalPosition) {\n      return this.getCenterPoint(useFinalPosition);\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var options = this.options,\n        circumference = this.circumference;\n      var offset = (options.offset || 0) / 2;\n      var spacing = (options.spacing || 0) / 2;\n      var circular = options.circular;\n      this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n      this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n      if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n        return;\n      }\n      ctx.save();\n      var radiusOffset = 0;\n      if (offset) {\n        radiusOffset = offset / 2;\n        var halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n        if (this.circumference >= PI) {\n          radiusOffset = offset;\n        }\n      }\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      var endAngle = drawArc(ctx, this, radiusOffset, spacing, circular);\n      drawBorder(ctx, this, radiusOffset, spacing, endAngle, circular);\n      ctx.restore();\n    }\n  }]);\n}(Element);\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n  circular: true\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\nfunction setStyle(ctx, options) {\n  var style = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : options;\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment) {\n  var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var count = points.length;\n  var _params$start = params.start,\n    paramsStart = _params$start === void 0 ? 0 : _params$start,\n    _params$end = params.end,\n    paramsEnd = _params$end === void 0 ? count - 1 : _params$end;\n  var segmentStart = segment.start,\n    segmentEnd = segment.end;\n  var start = Math.max(paramsStart, segmentStart);\n  var end = Math.min(paramsEnd, segmentEnd);\n  var outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count: count,\n    start: start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  var points = line.points,\n    options = line.options;\n  var _pathVars = pathVars(points, segment, params),\n    count = _pathVars.count,\n    start = _pathVars.start,\n    loop = _pathVars.loop,\n    ilen = _pathVars.ilen;\n  var lineMethod = getLineMethod(options);\n  var _ref5 = params || {},\n    _ref5$move = _ref5.move,\n    move = _ref5$move === void 0 ? true : _ref5$move,\n    reverse = _ref5.reverse;\n  var i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  var points = line.points;\n  var _pathVars2 = pathVars(points, segment, params),\n    count = _pathVars2.count,\n    start = _pathVars2.start,\n    ilen = _pathVars2.ilen;\n  var _ref6 = params || {},\n    _ref6$move = _ref6.move,\n    move = _ref6$move === void 0 ? true : _ref6$move,\n    reverse = _ref6.reverse;\n  var avgX = 0;\n  var countX = 0;\n  var i, point, prevX, minY, maxY, lastY;\n  var pointIndex = function pointIndex(index) {\n    return (start + (reverse ? ilen - index : index)) % count;\n  };\n  var drawX = function drawX() {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    var x = point.x;\n    var y = point.y;\n    var truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  var opts = line.options;\n  var borderDash = opts.borderDash && opts.borderDash.length;\n  var useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  var path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  var segments = line.segments,\n    options = line.options;\n  var segmentMethod = _getSegmentMethod(line);\n  var _iterator15 = _createForOfIteratorHelper(segments),\n    _step15;\n  try {\n    for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n      var segment = _step15.value;\n      setStyle(ctx, options, segment.style);\n      ctx.beginPath();\n      if (segmentMethod(ctx, line, segment, {\n        start: start,\n        end: start + count - 1\n      })) {\n        ctx.closePath();\n      }\n      ctx.stroke();\n    }\n  } catch (err) {\n    _iterator15.e(err);\n  } finally {\n    _iterator15.f();\n  }\n}\nvar usePath2D = typeof Path2D === 'function';\nfunction _draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nvar LineElement = /*#__PURE__*/function (_Element3) {\n  function LineElement(cfg) {\n    var _this24;\n    _classCallCheck(this, LineElement);\n    _this24 = _callSuper(this, LineElement);\n    _this24.animated = true;\n    _this24.options = undefined;\n    _this24._chart = undefined;\n    _this24._loop = undefined;\n    _this24._fullLoop = undefined;\n    _this24._path = undefined;\n    _this24._points = undefined;\n    _this24._segments = undefined;\n    _this24._decimated = false;\n    _this24._pointsUpdated = false;\n    _this24._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(_this24, cfg);\n    }\n    return _this24;\n  }\n  _inherits(LineElement, _Element3);\n  return _createClass(LineElement, [{\n    key: \"updateControlPoints\",\n    value: function updateControlPoints(chartArea, indexAxis) {\n      var options = this.options;\n      if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n        var loop = options.spanGaps ? this._loop : this._fullLoop;\n        _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n        this._pointsUpdated = true;\n      }\n    }\n  }, {\n    key: \"points\",\n    get: function get() {\n      return this._points;\n    },\n    set: function set(points) {\n      this._points = points;\n      delete this._segments;\n      delete this._path;\n      this._pointsUpdated = false;\n    }\n  }, {\n    key: \"segments\",\n    get: function get() {\n      return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      var segments = this.segments;\n      var points = this.points;\n      return segments.length && points[segments[0].start];\n    }\n  }, {\n    key: \"last\",\n    value: function last() {\n      var segments = this.segments;\n      var points = this.points;\n      var count = segments.length;\n      return count && points[segments[count - 1].end];\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(point, property) {\n      var options = this.options;\n      var value = point[property];\n      var points = this.points;\n      var segments = _boundSegments(this, {\n        property: property,\n        start: value,\n        end: value\n      });\n      if (!segments.length) {\n        return;\n      }\n      var result = [];\n      var _interpolate = _getInterpolationMethod(options);\n      var i, ilen;\n      for (i = 0, ilen = segments.length; i < ilen; ++i) {\n        var _segments$i = segments[i],\n          start = _segments$i.start,\n          end = _segments$i.end;\n        var p1 = points[start];\n        var p2 = points[end];\n        if (p1 === p2) {\n          result.push(p1);\n          continue;\n        }\n        var t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n        var interpolated = _interpolate(p1, p2, t, options.stepped);\n        interpolated[property] = point[property];\n        result.push(interpolated);\n      }\n      return result.length === 1 ? result[0] : result;\n    }\n  }, {\n    key: \"pathSegment\",\n    value: function pathSegment(ctx, segment, params) {\n      var segmentMethod = _getSegmentMethod(this);\n      return segmentMethod(ctx, this, segment, params);\n    }\n  }, {\n    key: \"path\",\n    value: function path(ctx, start, count) {\n      var segments = this.segments;\n      var segmentMethod = _getSegmentMethod(this);\n      var loop = this._loop;\n      start = start || 0;\n      count = count || this.points.length - start;\n      var _iterator16 = _createForOfIteratorHelper(segments),\n        _step16;\n      try {\n        for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n          var segment = _step16.value;\n          loop &= segmentMethod(ctx, this, segment, {\n            start: start,\n            end: start + count - 1\n          });\n        }\n      } catch (err) {\n        _iterator16.e(err);\n      } finally {\n        _iterator16.f();\n      }\n      return !!loop;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx, chartArea, start, count) {\n      var options = this.options || {};\n      var points = this.points || [];\n      if (points.length && options.borderWidth) {\n        ctx.save();\n        _draw(ctx, this, start, count);\n        ctx.restore();\n      }\n      if (this.animated) {\n        this._pointsUpdated = false;\n        this._path = undefined;\n      }\n    }\n  }]);\n}(Element);\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: function _indexable(name) {\n    return name !== 'borderDash' && name !== 'fill';\n  }\n};\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  var options = el.options;\n  var _el$getProps = el.getProps([axis], useFinalPosition),\n    value = _el$getProps[axis];\n  return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nvar PointElement = /*#__PURE__*/function (_Element4) {\n  function PointElement(cfg) {\n    var _this25;\n    _classCallCheck(this, PointElement);\n    _this25 = _callSuper(this, PointElement);\n    _this25.options = undefined;\n    _this25.parsed = undefined;\n    _this25.skip = undefined;\n    _this25.stop = undefined;\n    if (cfg) {\n      Object.assign(_this25, cfg);\n    }\n    return _this25;\n  }\n  _inherits(PointElement, _Element4);\n  return _createClass(PointElement, [{\n    key: \"inRange\",\n    value: function inRange(mouseX, mouseY, useFinalPosition) {\n      var options = this.options;\n      var _this$getProps4 = this.getProps(['x', 'y'], useFinalPosition),\n        x = _this$getProps4.x,\n        y = _this$getProps4.y;\n      return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n  }, {\n    key: \"inXRange\",\n    value: function inXRange(mouseX, useFinalPosition) {\n      return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n  }, {\n    key: \"inYRange\",\n    value: function inYRange(mouseY, useFinalPosition) {\n      return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps5 = this.getProps(['x', 'y'], useFinalPosition),\n        x = _this$getProps5.x,\n        y = _this$getProps5.y;\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }, {\n    key: \"size\",\n    value: function size(options) {\n      options = options || this.options || {};\n      var radius = options.radius || 0;\n      radius = Math.max(radius, radius && options.hoverRadius || 0);\n      var borderWidth = radius && options.borderWidth || 0;\n      return (radius + borderWidth) * 2;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx, area) {\n      var options = this.options;\n      if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n        return;\n      }\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.fillStyle = options.backgroundColor;\n      drawPoint(ctx, options, this.x, this.y);\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange() {\n      var options = this.options || {};\n      return options.radius + options.hitRadius;\n    }\n  }]);\n}(Element);\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nfunction getBarBounds(bar, useFinalPosition) {\n  var _bar$getProps = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition),\n    x = _bar$getProps.x,\n    y = _bar$getProps.y,\n    base = _bar$getProps.base,\n    width = _bar$getProps.width,\n    height = _bar$getProps.height;\n  var left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {\n    left: left,\n    top: top,\n    right: right,\n    bottom: bottom\n  };\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  var value = bar.options.borderWidth;\n  var skip = bar.borderSkipped;\n  var o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  var _bar$getProps2 = bar.getProps(['enableBorderRadius']),\n    enableBorderRadius = _bar$getProps2.enableBorderRadius;\n  var value = bar.options.borderRadius;\n  var o = toTRBLCorners(value);\n  var maxR = Math.min(maxW, maxH);\n  var skip = bar.borderSkipped;\n  var enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  var bounds = getBarBounds(bar);\n  var width = bounds.right - bounds.left;\n  var height = bounds.bottom - bounds.top;\n  var border = parseBorderWidth(bar, width / 2, height / 2);\n  var radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius: radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n      }\n    }\n  };\n}\nfunction _inRange(bar, x, y, useFinalPosition) {\n  var skipX = x === null;\n  var skipY = y === null;\n  var skipBoth = skipX && skipY;\n  var bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount) {\n  var refRect = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var x = rect.x !== refRect.x ? -amount : 0;\n  var y = rect.y !== refRect.y ? -amount : 0;\n  var w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  var h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nvar BarElement = /*#__PURE__*/function (_Element5) {\n  function BarElement(cfg) {\n    var _this26;\n    _classCallCheck(this, BarElement);\n    _this26 = _callSuper(this, BarElement);\n    _this26.options = undefined;\n    _this26.horizontal = undefined;\n    _this26.base = undefined;\n    _this26.width = undefined;\n    _this26.height = undefined;\n    _this26.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(_this26, cfg);\n    }\n    return _this26;\n  }\n  _inherits(BarElement, _Element5);\n  return _createClass(BarElement, [{\n    key: \"draw\",\n    value: function draw(ctx) {\n      var inflateAmount = this.inflateAmount,\n        _this$options13 = this.options,\n        borderColor = _this$options13.borderColor,\n        backgroundColor = _this$options13.backgroundColor;\n      var _boundingRects = boundingRects(this),\n        inner = _boundingRects.inner,\n        outer = _boundingRects.outer;\n      var addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n      ctx.save();\n      if (outer.w !== inner.w || outer.h !== inner.h) {\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n        ctx.clip();\n        addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n        ctx.fillStyle = borderColor;\n        ctx.fill('evenodd');\n      }\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(inner, inflateAmount));\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }, {\n    key: \"inRange\",\n    value: function inRange(mouseX, mouseY, useFinalPosition) {\n      return _inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n  }, {\n    key: \"inXRange\",\n    value: function inXRange(mouseX, useFinalPosition) {\n      return _inRange(this, mouseX, null, useFinalPosition);\n    }\n  }, {\n    key: \"inYRange\",\n    value: function inYRange(mouseY, useFinalPosition) {\n      return _inRange(this, null, mouseY, useFinalPosition);\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps6 = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition),\n        x = _this$getProps6.x,\n        y = _this$getProps6.y,\n        base = _this$getProps6.base,\n        horizontal = _this$getProps6.horizontal;\n      return {\n        x: horizontal ? (x + base) / 2 : x,\n        y: horizontal ? y : (y + base) / 2\n      };\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange(axis) {\n      return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n  }]);\n}(Element);\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nvar elements = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ArcElement: ArcElement,\n  LineElement: LineElement,\n  PointElement: PointElement,\n  BarElement: BarElement\n});\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  var samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  var decimated = [];\n  var bucketWidth = (count - 2) / (samples - 2);\n  var sampledIndex = 0;\n  var endIndex = start + count - 1;\n  var a = start;\n  var i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    var avgX = 0;\n    var avgY = 0;\n    var j = void 0;\n    var avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    var avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    var avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    var rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    var rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    var _data$a = data[a],\n      pointAx = _data$a.x,\n      pointAy = _data$a.y;\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  var avgX = 0;\n  var countX = 0;\n  var i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  var decimated = [];\n  var endIndex = start + count - 1;\n  var xMin = data[start].x;\n  var xMax = data[endIndex].x;\n  var dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    var truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      var lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        var intermediateIndex1 = Math.min(minIndex, maxIndex);\n        var intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push(_objectSpread(_objectSpread({}, data[intermediateIndex1]), {}, {\n            x: avgX\n          }));\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push(_objectSpread(_objectSpread({}, data[intermediateIndex2]), {}, {\n            x: avgX\n          }));\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    var data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      value: data\n    });\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach(function (dataset) {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  var pointCount = points.length;\n  var start = 0;\n  var count;\n  var iScale = meta.iScale;\n  var _iScale$getUserBounds = iScale.getUserBounds(),\n    min = _iScale$getUserBounds.min,\n    max = _iScale$getUserBounds.max,\n    minDefined = _iScale$getUserBounds.minDefined,\n    maxDefined = _iScale$getUserBounds.maxDefined;\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {\n    start: start,\n    count: count\n  };\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false\n  },\n  beforeElementsUpdate: function beforeElementsUpdate(chart, args, options) {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    var availableWidth = chart.width;\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      var _data = dataset._data,\n        indexAxis = dataset.indexAxis;\n      var meta = chart.getDatasetMeta(datasetIndex);\n      var data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n      var xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      var _getStartAndCountOfVi3 = getStartAndCountOfVisiblePointsSimplified(meta, data),\n        start = _getStartAndCountOfVi3.start,\n        count = _getStartAndCountOfVi3.count;\n      var threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function get() {\n            return this._decimated;\n          },\n          set: function set(d) {\n            this._data = d;\n          }\n        });\n      }\n      var decimated;\n      switch (options.algorithm) {\n        case 'lttb':\n          decimated = lttbDecimation(data, start, count, availableWidth, options);\n          break;\n        case 'min-max':\n          decimated = minMaxDecimation(data, start, count, availableWidth);\n          break;\n        default:\n          throw new Error(\"Unsupported decimation algorithm '\".concat(options.algorithm, \"'\"));\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy: function destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\nfunction _segments(line, target, property) {\n  var segments = line.segments;\n  var points = line.points;\n  var tpoints = target.points;\n  var parts = [];\n  var _iterator17 = _createForOfIteratorHelper(segments),\n    _step17;\n  try {\n    for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {\n      var segment = _step17.value;\n      var start = segment.start,\n        end = segment.end;\n      end = _findSegmentEnd(start, end, points);\n      var bounds = _getBounds(property, points[start], points[end], segment.loop);\n      if (!target.segments) {\n        parts.push({\n          source: segment,\n          target: bounds,\n          start: points[start],\n          end: points[end]\n        });\n        continue;\n      }\n      var targetSegments = _boundSegments(target, bounds);\n      var _iterator18 = _createForOfIteratorHelper(targetSegments),\n        _step18;\n      try {\n        for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {\n          var tgt = _step18.value;\n          var subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n          var fillSources = _boundSegment(segment, points, subBounds);\n          var _iterator19 = _createForOfIteratorHelper(fillSources),\n            _step19;\n          try {\n            for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {\n              var fillSource = _step19.value;\n              parts.push({\n                source: fillSource,\n                target: tgt,\n                start: _defineProperty({}, property, _getEdge(bounds, subBounds, 'start', Math.max)),\n                end: _defineProperty({}, property, _getEdge(bounds, subBounds, 'end', Math.min))\n              });\n            }\n          } catch (err) {\n            _iterator19.e(err);\n          } finally {\n            _iterator19.f();\n          }\n        }\n      } catch (err) {\n        _iterator18.e(err);\n      } finally {\n        _iterator18.f();\n      }\n    }\n  } catch (err) {\n    _iterator17.e(err);\n  } finally {\n    _iterator17.f();\n  }\n  return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  var start = first[property];\n  var end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {\n    property: property,\n    start: start,\n    end: end\n  };\n}\nfunction _pointsFromSegments(boundary, line) {\n  var _ref7 = boundary || {},\n    _ref7$x = _ref7.x,\n    x = _ref7$x === void 0 ? null : _ref7$x,\n    _ref7$y = _ref7.y,\n    y = _ref7$y === void 0 ? null : _ref7$y;\n  var linePoints = line.points;\n  var points = [];\n  line.segments.forEach(function (_ref8) {\n    var start = _ref8.start,\n      end = _ref8.end;\n    end = _findSegmentEnd(start, end, linePoints);\n    var first = linePoints[start];\n    var last = linePoints[end];\n    if (y !== null) {\n      points.push({\n        x: first.x,\n        y: y\n      });\n      points.push({\n        x: last.x,\n        y: y\n      });\n    } else if (x !== null) {\n      points.push({\n        x: x,\n        y: first.y\n      });\n      points.push({\n        x: x,\n        y: last.y\n      });\n    }\n  });\n  return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n  for (; end > start; end--) {\n    var point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _createBoundaryLine(boundary, line) {\n  var points = [];\n  var _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points: points,\n    options: {\n      tension: 0\n    },\n    _loop: _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\nfunction _resolveTarget(sources, index, propagate) {\n  var source = sources[index];\n  var fill = source.fill;\n  var visited = [index];\n  var target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _decodeFill(line, index, count) {\n  var fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  var target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n  return target;\n}\nfunction _getTargetPixel(fill, scale) {\n  var pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\nfunction _getTargetValue(fill, scale, startValue) {\n  var value;\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\nfunction parseFillOption(line) {\n  var options = line.options;\n  var fillOption = options.fill;\n  var fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction _buildStackLine(source) {\n  var scale = source.scale,\n    index = source.index,\n    line = source.line;\n  var points = [];\n  var segments = line.segments;\n  var sourcePoints = line.points;\n  var linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({\n    x: null,\n    y: scale.bottom\n  }, line));\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    for (var j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({\n    points: points,\n    options: {}\n  });\n}\nfunction getLinesBelow(scale, index) {\n  var below = [];\n  var metas = scale.getMatchingVisibleMetas('line');\n  for (var i = 0; i < metas.length; i++) {\n    var meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  var postponed = [];\n  for (var j = 0; j < linesBelow.length; j++) {\n    var line = linesBelow[j];\n    var _findPoint = findPoint(line, sourcePoint, 'x'),\n      first = _findPoint.first,\n      last = _findPoint.last,\n      point = _findPoint.point;\n    if (!point || first && last) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push.apply(points, postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  var point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  var pointValue = point[property];\n  var segments = line.segments;\n  var linePoints = line.points;\n  var first = false;\n  var last = false;\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    var firstValue = linePoints[segment.start][property];\n    var lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {\n    first: first,\n    last: last,\n    point: point\n  };\n}\nvar simpleArc = /*#__PURE__*/function () {\n  function simpleArc(opts) {\n    _classCallCheck(this, simpleArc);\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  return _createClass(simpleArc, [{\n    key: \"pathSegment\",\n    value: function pathSegment(ctx, bounds, opts) {\n      var x = this.x,\n        y = this.y,\n        radius = this.radius;\n      bounds = bounds || {\n        start: 0,\n        end: TAU\n      };\n      ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n      return !opts.bounds;\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(point) {\n      var x = this.x,\n        y = this.y,\n        radius = this.radius;\n      var angle = point.angle;\n      return {\n        x: x + Math.cos(angle) * radius,\n        y: y + Math.sin(angle) * radius,\n        angle: angle\n      };\n    }\n  }]);\n}();\nfunction _getTarget(source) {\n  var chart = source.chart,\n    fill = source.fill,\n    line = source.line;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  var boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return _createBoundaryLine(boundary, line);\n}\nfunction getLineByIndex(chart, index) {\n  var meta = chart.getDatasetMeta(index);\n  var visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n  var scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n  var _source$scale = source.scale,\n    scale = _source$scale === void 0 ? {} : _source$scale,\n    fill = source.fill;\n  var pixel = _getTargetPixel(fill, scale);\n  if (isNumberFinite(pixel)) {\n    var horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n  return null;\n}\nfunction computeCircularBoundary(source) {\n  var scale = source.scale,\n    fill = source.fill;\n  var options = scale.options;\n  var length = scale.getLabels().length;\n  var start = options.reverse ? scale.max : scale.min;\n  var value = _getTargetValue(fill, scale, start);\n  var target = [];\n  if (options.grid.circular) {\n    var center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (var i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction _drawfill(ctx, source, area) {\n  var target = _getTarget(source);\n  var line = source.line,\n    scale = source.scale,\n    axis = source.axis;\n  var lineOpts = line.options;\n  var fillOption = lineOpts.fill;\n  var color = lineOpts.backgroundColor;\n  var _ref9 = fillOption || {},\n    _ref9$above = _ref9.above,\n    above = _ref9$above === void 0 ? color : _ref9$above,\n    _ref9$below = _ref9.below,\n    below = _ref9$below === void 0 ? color : _ref9$below;\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {\n      line: line,\n      target: target,\n      above: above,\n      below: below,\n      area: area,\n      scale: scale,\n      axis: axis\n    });\n    unclipArea(ctx);\n  }\n}\nfunction doFill(ctx, cfg) {\n  var line = cfg.line,\n    target = cfg.target,\n    above = cfg.above,\n    below = cfg.below,\n    area = cfg.area,\n    scale = cfg.scale;\n  var property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {\n      line: line,\n      target: target,\n      color: above,\n      scale: scale,\n      property: property\n    });\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {\n    line: line,\n    target: target,\n    color: below,\n    scale: scale,\n    property: property\n  });\n  ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n  var segments = target.segments,\n    points = target.points;\n  var first = true;\n  var lineLoop = false;\n  ctx.beginPath();\n  var _iterator20 = _createForOfIteratorHelper(segments),\n    _step20;\n  try {\n    for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {\n      var segment = _step20.value;\n      var start = segment.start,\n        end = segment.end;\n      var firstPoint = points[start];\n      var lastPoint = points[_findSegmentEnd(start, end, points)];\n      if (first) {\n        ctx.moveTo(firstPoint.x, firstPoint.y);\n        first = false;\n      } else {\n        ctx.lineTo(firstPoint.x, clipY);\n        ctx.lineTo(firstPoint.x, firstPoint.y);\n      }\n      lineLoop = !!target.pathSegment(ctx, segment, {\n        move: lineLoop\n      });\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        ctx.lineTo(lastPoint.x, clipY);\n      }\n    }\n  } catch (err) {\n    _iterator20.e(err);\n  } finally {\n    _iterator20.f();\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction fill(ctx, cfg) {\n  var line = cfg.line,\n    target = cfg.target,\n    property = cfg.property,\n    color = cfg.color,\n    scale = cfg.scale;\n  var segments = _segments(line, target, property);\n  var _iterator21 = _createForOfIteratorHelper(segments),\n    _step21;\n  try {\n    for (_iterator21.s(); !(_step21 = _iterator21.n()).done;) {\n      var _step21$value = _step21.value,\n        src = _step21$value.source,\n        tgt = _step21$value.target,\n        start = _step21$value.start,\n        end = _step21$value.end;\n      var _src$style = src.style,\n        _src$style2 = _src$style === void 0 ? {} : _src$style,\n        _src$style2$backgroun = _src$style2.backgroundColor,\n        backgroundColor = _src$style2$backgroun === void 0 ? color : _src$style2$backgroun;\n      var notShape = target !== true;\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n      ctx.beginPath();\n      var lineLoop = !!line.pathSegment(ctx, src);\n      var loop = void 0;\n      if (notShape) {\n        if (lineLoop) {\n          ctx.closePath();\n        } else {\n          interpolatedLineTo(ctx, target, end, property);\n        }\n        var targetLoop = !!target.pathSegment(ctx, tgt, {\n          move: lineLoop,\n          reverse: true\n        });\n        loop = lineLoop && targetLoop;\n        if (!loop) {\n          interpolatedLineTo(ctx, target, start, property);\n        }\n      }\n      ctx.closePath();\n      ctx.fill(loop ? 'evenodd' : 'nonzero');\n      ctx.restore();\n    }\n  } catch (err) {\n    _iterator21.e(err);\n  } finally {\n    _iterator21.f();\n  }\n}\nfunction clipBounds(ctx, scale, bounds) {\n  var _scale$chart$chartAre = scale.chart.chartArea,\n    top = _scale$chart$chartAre.top,\n    bottom = _scale$chart$chartAre.bottom;\n  var _ref10 = bounds || {},\n    property = _ref10.property,\n    start = _ref10.start,\n    end = _ref10.end;\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  var interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate: function afterDatasetsUpdate(chart, _args, options) {\n    var count = (chart.data.datasets || []).length;\n    var sources = [];\n    var meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart: chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line: line\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw: function beforeDraw(chart, _args, options) {\n    var draw = options.drawTime === 'beforeDraw';\n    var metasets = chart.getSortedVisibleDatasetMetas();\n    var area = chart.chartArea;\n    for (var i = metasets.length - 1; i >= 0; --i) {\n      var source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw: function beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    var metasets = chart.getSortedVisibleDatasetMetas();\n    for (var i = metasets.length - 1; i >= 0; --i) {\n      var source = metasets[i].$filler;\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw: function beforeDatasetDraw(chart, args, options) {\n    var source = args.meta.$filler;\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\nvar getBoxSize = function getBoxSize(labelOpts, fontSize) {\n  var _labelOpts$boxHeight = labelOpts.boxHeight,\n    boxHeight = _labelOpts$boxHeight === void 0 ? fontSize : _labelOpts$boxHeight,\n    _labelOpts$boxWidth = labelOpts.boxWidth,\n    boxWidth = _labelOpts$boxWidth === void 0 ? fontSize : _labelOpts$boxWidth;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth: boxWidth,\n    boxHeight: boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nvar itemsEqual = function itemsEqual(a, b) {\n  return a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n};\nvar Legend = /*#__PURE__*/function (_Element6) {\n  function Legend(config) {\n    var _this27;\n    _classCallCheck(this, Legend);\n    _this27 = _callSuper(this, Legend);\n    _this27._added = false;\n    _this27.legendHitBoxes = [];\n    _this27._hoveredItem = null;\n    _this27.doughnutMode = false;\n    _this27.chart = config.chart;\n    _this27.options = config.options;\n    _this27.ctx = config.ctx;\n    _this27.legendItems = undefined;\n    _this27.columnSizes = undefined;\n    _this27.lineWidths = undefined;\n    _this27.maxHeight = undefined;\n    _this27.maxWidth = undefined;\n    _this27.top = undefined;\n    _this27.bottom = undefined;\n    _this27.left = undefined;\n    _this27.right = undefined;\n    _this27.height = undefined;\n    _this27.width = undefined;\n    _this27._margins = undefined;\n    _this27.position = undefined;\n    _this27.weight = undefined;\n    _this27.fullSize = undefined;\n    return _this27;\n  }\n  _inherits(Legend, _Element6);\n  return _createClass(Legend, [{\n    key: \"update\",\n    value: function update(maxWidth, maxHeight, margins) {\n      this.maxWidth = maxWidth;\n      this.maxHeight = maxHeight;\n      this._margins = margins;\n      this.setDimensions();\n      this.buildLabels();\n      this.fit();\n    }\n  }, {\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      if (this.isHorizontal()) {\n        this.width = this.maxWidth;\n        this.left = this._margins.left;\n        this.right = this.width;\n      } else {\n        this.height = this.maxHeight;\n        this.top = this._margins.top;\n        this.bottom = this.height;\n      }\n    }\n  }, {\n    key: \"buildLabels\",\n    value: function buildLabels() {\n      var _this28 = this;\n      var labelOpts = this.options.labels || {};\n      var legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, _this28.chart.data);\n        });\n      }\n      if (labelOpts.sort) {\n        legendItems = legendItems.sort(function (a, b) {\n          return labelOpts.sort(a, b, _this28.chart.data);\n        });\n      }\n      if (this.options.reverse) {\n        legendItems.reverse();\n      }\n      this.legendItems = legendItems;\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var options = this.options,\n        ctx = this.ctx;\n      if (!options.display) {\n        this.width = this.height = 0;\n        return;\n      }\n      var labelOpts = options.labels;\n      var labelFont = toFont(labelOpts.font);\n      var fontSize = labelFont.size;\n      var titleHeight = this._computeTitleHeight();\n      var _getBoxSize = getBoxSize(labelOpts, fontSize),\n        boxWidth = _getBoxSize.boxWidth,\n        itemHeight = _getBoxSize.itemHeight;\n      var width, height;\n      ctx.font = labelFont.string;\n      if (this.isHorizontal()) {\n        width = this.maxWidth;\n        height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n      } else {\n        height = this.maxHeight;\n        width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n      }\n      this.width = Math.min(width, options.maxWidth || this.maxWidth);\n      this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n  }, {\n    key: \"_fitRows\",\n    value: function _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n      var ctx = this.ctx,\n        maxWidth = this.maxWidth,\n        padding = this.options.labels.padding;\n      var hitboxes = this.legendHitBoxes = [];\n      var lineWidths = this.lineWidths = [0];\n      var lineHeight = itemHeight + padding;\n      var totalHeight = titleHeight;\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n      var row = -1;\n      var top = -lineHeight;\n      this.legendItems.forEach(function (legendItem, i) {\n        var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n        if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n          totalHeight += lineHeight;\n          lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n          top += lineHeight;\n          row++;\n        }\n        hitboxes[i] = {\n          left: 0,\n          top: top,\n          row: row,\n          width: itemWidth,\n          height: itemHeight\n        };\n        lineWidths[lineWidths.length - 1] += itemWidth + padding;\n      });\n      return totalHeight;\n    }\n  }, {\n    key: \"_fitCols\",\n    value: function _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n      var ctx = this.ctx,\n        maxHeight = this.maxHeight,\n        padding = this.options.labels.padding;\n      var hitboxes = this.legendHitBoxes = [];\n      var columnSizes = this.columnSizes = [];\n      var heightLimit = maxHeight - titleHeight;\n      var totalWidth = padding;\n      var currentColWidth = 0;\n      var currentColHeight = 0;\n      var left = 0;\n      var col = 0;\n      this.legendItems.forEach(function (legendItem, i) {\n        var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n        if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n          totalWidth += currentColWidth + padding;\n          columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n          });\n          left += currentColWidth + padding;\n          col++;\n          currentColWidth = currentColHeight = 0;\n        }\n        hitboxes[i] = {\n          left: left,\n          top: currentColHeight,\n          col: col,\n          width: itemWidth,\n          height: itemHeight\n        };\n        currentColWidth = Math.max(currentColWidth, itemWidth);\n        currentColHeight += itemHeight + padding;\n      });\n      totalWidth += currentColWidth;\n      columnSizes.push({\n        width: currentColWidth,\n        height: currentColHeight\n      });\n      return totalWidth;\n    }\n  }, {\n    key: \"adjustHitBoxes\",\n    value: function adjustHitBoxes() {\n      if (!this.options.display) {\n        return;\n      }\n      var titleHeight = this._computeTitleHeight();\n      var hitboxes = this.legendHitBoxes,\n        _this$options14 = this.options,\n        align = _this$options14.align,\n        padding = _this$options14.labels.padding,\n        rtl = _this$options14.rtl;\n      var rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n      if (this.isHorizontal()) {\n        var row = 0;\n        var left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        var _iterator22 = _createForOfIteratorHelper(hitboxes),\n          _step22;\n        try {\n          for (_iterator22.s(); !(_step22 = _iterator22.n()).done;) {\n            var hitbox = _step22.value;\n            if (row !== hitbox.row) {\n              row = hitbox.row;\n              left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            }\n            hitbox.top += this.top + titleHeight + padding;\n            hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n            left += hitbox.width + padding;\n          }\n        } catch (err) {\n          _iterator22.e(err);\n        } finally {\n          _iterator22.f();\n        }\n      } else {\n        var col = 0;\n        var top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        var _iterator23 = _createForOfIteratorHelper(hitboxes),\n          _step23;\n        try {\n          for (_iterator23.s(); !(_step23 = _iterator23.n()).done;) {\n            var _hitbox = _step23.value;\n            if (_hitbox.col !== col) {\n              col = _hitbox.col;\n              top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            }\n            _hitbox.top = top;\n            _hitbox.left += this.left + padding;\n            _hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(_hitbox.left), _hitbox.width);\n            top += _hitbox.height + padding;\n          }\n        } catch (err) {\n          _iterator23.e(err);\n        } finally {\n          _iterator23.f();\n        }\n      }\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      if (this.options.display) {\n        var ctx = this.ctx;\n        clipArea(ctx, this);\n        this._draw();\n        unclipArea(ctx);\n      }\n    }\n  }, {\n    key: \"_draw\",\n    value: function _draw() {\n      var _this29 = this;\n      var opts = this.options,\n        columnSizes = this.columnSizes,\n        lineWidths = this.lineWidths,\n        ctx = this.ctx;\n      var align = opts.align,\n        labelOpts = opts.labels;\n      var defaultColor = defaults.color;\n      var rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n      var labelFont = toFont(labelOpts.font);\n      var fontColor = labelOpts.color,\n        padding = labelOpts.padding;\n      var fontSize = labelFont.size;\n      var halfFontSize = fontSize / 2;\n      var cursor;\n      this.drawTitle();\n      ctx.textAlign = rtlHelper.textAlign('left');\n      ctx.textBaseline = 'middle';\n      ctx.lineWidth = 0.5;\n      ctx.font = labelFont.string;\n      var _getBoxSize2 = getBoxSize(labelOpts, fontSize),\n        boxWidth = _getBoxSize2.boxWidth,\n        boxHeight = _getBoxSize2.boxHeight,\n        itemHeight = _getBoxSize2.itemHeight;\n      var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n        if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n          return;\n        }\n        ctx.save();\n        var lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n        ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n        ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n        ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n        ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n        ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n        if (labelOpts.usePointStyle) {\n          var drawOptions = {\n            radius: boxHeight * Math.SQRT2 / 2,\n            pointStyle: legendItem.pointStyle,\n            rotation: legendItem.rotation,\n            borderWidth: lineWidth\n          };\n          var centerX = rtlHelper.xPlus(x, boxWidth / 2);\n          var centerY = y + halfFontSize;\n          drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n        } else {\n          var yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n          var xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n          var borderRadius = toTRBLCorners(legendItem.borderRadius);\n          ctx.beginPath();\n          if (Object.values(borderRadius).some(function (v) {\n            return v !== 0;\n          })) {\n            addRoundedRectPath(ctx, {\n              x: xBoxLeft,\n              y: yBoxTop,\n              w: boxWidth,\n              h: boxHeight,\n              radius: borderRadius\n            });\n          } else {\n            ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n          }\n          ctx.fill();\n          if (lineWidth !== 0) {\n            ctx.stroke();\n          }\n        }\n        ctx.restore();\n      };\n      var fillText = function fillText(x, y, legendItem) {\n        renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n          strikethrough: legendItem.hidden,\n          textAlign: rtlHelper.textAlign(legendItem.textAlign)\n        });\n      };\n      var isHorizontal = this.isHorizontal();\n      var titleHeight = this._computeTitleHeight();\n      if (isHorizontal) {\n        cursor = {\n          x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n          y: this.top + padding + titleHeight,\n          line: 0\n        };\n      } else {\n        cursor = {\n          x: this.left + padding,\n          y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n          line: 0\n        };\n      }\n      overrideTextDirection(this.ctx, opts.textDirection);\n      var lineHeight = itemHeight + padding;\n      this.legendItems.forEach(function (legendItem, i) {\n        ctx.strokeStyle = legendItem.fontColor || fontColor;\n        ctx.fillStyle = legendItem.fontColor || fontColor;\n        var textWidth = ctx.measureText(legendItem.text).width;\n        var textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n        var width = boxWidth + halfFontSize + textWidth;\n        var x = cursor.x;\n        var y = cursor.y;\n        rtlHelper.setWidth(_this29.width);\n        if (isHorizontal) {\n          if (i > 0 && x + width + padding > _this29.right) {\n            y = cursor.y += lineHeight;\n            cursor.line++;\n            x = cursor.x = _alignStartEnd(align, _this29.left + padding, _this29.right - lineWidths[cursor.line]);\n          }\n        } else if (i > 0 && y + lineHeight > _this29.bottom) {\n          x = cursor.x = x + columnSizes[cursor.line].width + padding;\n          cursor.line++;\n          y = cursor.y = _alignStartEnd(align, _this29.top + titleHeight + padding, _this29.bottom - columnSizes[cursor.line].height);\n        }\n        var realX = rtlHelper.x(x);\n        drawLegendBox(realX, y, legendItem);\n        x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : _this29.right, opts.rtl);\n        fillText(rtlHelper.x(x), y, legendItem);\n        if (isHorizontal) {\n          cursor.x += width + padding;\n        } else {\n          cursor.y += lineHeight;\n        }\n      });\n      restoreTextDirection(this.ctx, opts.textDirection);\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {\n      var opts = this.options;\n      var titleOpts = opts.title;\n      var titleFont = toFont(titleOpts.font);\n      var titlePadding = toPadding(titleOpts.padding);\n      if (!titleOpts.display) {\n        return;\n      }\n      var rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n      var ctx = this.ctx;\n      var position = titleOpts.position;\n      var halfFontSize = titleFont.size / 2;\n      var topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n      var y;\n      var left = this.left;\n      var maxWidth = this.width;\n      if (this.isHorizontal()) {\n        maxWidth = Math.max.apply(Math, _toConsumableArray(this.lineWidths));\n        y = this.top + topPaddingPlusHalfFontSize;\n        left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n      } else {\n        var maxHeight = this.columnSizes.reduce(function (acc, size) {\n          return Math.max(acc, size.height);\n        }, 0);\n        y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n      }\n      var x = _alignStartEnd(position, left, left + maxWidth);\n      ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n      ctx.textBaseline = 'middle';\n      ctx.strokeStyle = titleOpts.color;\n      ctx.fillStyle = titleOpts.color;\n      ctx.font = titleFont.string;\n      renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n  }, {\n    key: \"_computeTitleHeight\",\n    value: function _computeTitleHeight() {\n      var titleOpts = this.options.title;\n      var titleFont = toFont(titleOpts.font);\n      var titlePadding = toPadding(titleOpts.padding);\n      return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n  }, {\n    key: \"_getLegendItemAt\",\n    value: function _getLegendItemAt(x, y) {\n      var i, hitBox, lh;\n      if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n        lh = this.legendHitBoxes;\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n          if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n            return this.legendItems[i];\n          }\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(e) {\n      var opts = this.options;\n      if (!isListened(e.type, opts)) {\n        return;\n      }\n      var hoveredItem = this._getLegendItemAt(e.x, e.y);\n      if (e.type === 'mousemove' || e.type === 'mouseout') {\n        var previous = this._hoveredItem;\n        var sameItem = itemsEqual(previous, hoveredItem);\n        if (previous && !sameItem) {\n          callback(opts.onLeave, [e, previous, this], this);\n        }\n        this._hoveredItem = hoveredItem;\n        if (hoveredItem && !sameItem) {\n          callback(opts.onHover, [e, hoveredItem, this], this);\n        }\n      } else if (hoveredItem) {\n        callback(opts.onClick, [e, hoveredItem, this], this);\n      }\n    }\n  }]);\n}(Element);\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start: function start(chart, _args, options) {\n    var legend = chart.legend = new Legend({\n      ctx: chart.ctx,\n      options: options,\n      chart: chart\n    });\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop: function stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate: function afterUpdate(chart) {\n    var legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent: function afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick: function onClick(e, legendItem, legend) {\n      var index = legendItem.datasetIndex;\n      var ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: function color(ctx) {\n        return ctx.chart.options.color;\n      },\n      boxWidth: 40,\n      padding: 10,\n      generateLabels: function generateLabels(chart) {\n        var datasets = chart.data.datasets;\n        var _chart$legend$options = chart.legend.options.labels,\n          usePointStyle = _chart$legend$options.usePointStyle,\n          pointStyle = _chart$legend$options.pointStyle,\n          textAlign = _chart$legend$options.textAlign,\n          color = _chart$legend$options.color;\n        return chart._getSortedDatasetMetas().map(function (meta) {\n          var style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          var borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: function color(ctx) {\n        return ctx.chart.options.color;\n      },\n      display: false,\n      position: 'center',\n      text: ''\n    }\n  },\n  descriptors: {\n    _scriptable: function _scriptable(name) {\n      return !name.startsWith('on');\n    },\n    labels: {\n      _scriptable: function _scriptable(name) {\n        return !['generateLabels', 'filter', 'sort'].includes(name);\n      }\n    }\n  }\n};\nvar Title = /*#__PURE__*/function (_Element7) {\n  function Title(config) {\n    var _this30;\n    _classCallCheck(this, Title);\n    _this30 = _callSuper(this, Title);\n    _this30.chart = config.chart;\n    _this30.options = config.options;\n    _this30.ctx = config.ctx;\n    _this30._padding = undefined;\n    _this30.top = undefined;\n    _this30.bottom = undefined;\n    _this30.left = undefined;\n    _this30.right = undefined;\n    _this30.width = undefined;\n    _this30.height = undefined;\n    _this30.position = undefined;\n    _this30.weight = undefined;\n    _this30.fullSize = undefined;\n    return _this30;\n  }\n  _inherits(Title, _Element7);\n  return _createClass(Title, [{\n    key: \"update\",\n    value: function update(maxWidth, maxHeight) {\n      var opts = this.options;\n      this.left = 0;\n      this.top = 0;\n      if (!opts.display) {\n        this.width = this.height = this.right = this.bottom = 0;\n        return;\n      }\n      this.width = this.right = maxWidth;\n      this.height = this.bottom = maxHeight;\n      var lineCount = isArray(opts.text) ? opts.text.length : 1;\n      this._padding = toPadding(opts.padding);\n      var textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n      if (this.isHorizontal()) {\n        this.height = textSize;\n      } else {\n        this.width = textSize;\n      }\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    }\n  }, {\n    key: \"_drawArgs\",\n    value: function _drawArgs(offset) {\n      var top = this.top,\n        left = this.left,\n        bottom = this.bottom,\n        right = this.right,\n        options = this.options;\n      var align = options.align;\n      var rotation = 0;\n      var maxWidth, titleX, titleY;\n      if (this.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        titleY = top + offset;\n        maxWidth = right - left;\n      } else {\n        if (options.position === 'left') {\n          titleX = left + offset;\n          titleY = _alignStartEnd(align, bottom, top);\n          rotation = PI * -0.5;\n        } else {\n          titleX = right - offset;\n          titleY = _alignStartEnd(align, top, bottom);\n          rotation = PI * 0.5;\n        }\n        maxWidth = bottom - top;\n      }\n      return {\n        titleX: titleX,\n        titleY: titleY,\n        maxWidth: maxWidth,\n        rotation: rotation\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var ctx = this.ctx;\n      var opts = this.options;\n      if (!opts.display) {\n        return;\n      }\n      var fontOpts = toFont(opts.font);\n      var lineHeight = fontOpts.lineHeight;\n      var offset = lineHeight / 2 + this._padding.top;\n      var _this$_drawArgs = this._drawArgs(offset),\n        titleX = _this$_drawArgs.titleX,\n        titleY = _this$_drawArgs.titleY,\n        maxWidth = _this$_drawArgs.maxWidth,\n        rotation = _this$_drawArgs.rotation;\n      renderText(ctx, opts.text, 0, 0, fontOpts, {\n        color: opts.color,\n        maxWidth: maxWidth,\n        rotation: rotation,\n        textAlign: _toLeftRightCenter(opts.align),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n  }]);\n}(Element);\nfunction createTitle(chart, titleOpts) {\n  var title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart: chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start: function start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop: function stop(chart) {\n    var titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold'\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nvar map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start: function start(chart, _args, options) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: options,\n      chart: chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop: function stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map[\"delete\"](chart);\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal'\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nvar positioners = {\n  average: function average(items) {\n    if (!items.length) {\n      return false;\n    }\n    var i, len;\n    var x = 0;\n    var y = 0;\n    var count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      var el = items[i].element;\n      if (el && el.hasValue()) {\n        var pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest: function nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    var x = eventPosition.x;\n    var y = eventPosition.y;\n    var minDistance = Number.POSITIVE_INFINITY;\n    var i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      var el = items[i].element;\n      if (el && el.hasValue()) {\n        var center = el.getCenterPoint();\n        var d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      var tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x: x,\n      y: y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  var element = item.element,\n    datasetIndex = item.datasetIndex,\n    index = item.index;\n  var controller = chart.getDatasetMeta(datasetIndex).controller;\n  var _controller$getLabelA = controller.getLabelAndValue(index),\n    label = _controller$getLabelA.label,\n    value = _controller$getLabelA.value;\n  return {\n    chart: chart,\n    label: label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex: datasetIndex,\n    element: element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  var ctx = tooltip.chart.ctx;\n  var body = tooltip.body,\n    footer = tooltip.footer,\n    title = tooltip.title;\n  var boxWidth = options.boxWidth,\n    boxHeight = options.boxHeight;\n  var bodyFont = toFont(options.bodyFont);\n  var titleFont = toFont(options.titleFont);\n  var footerFont = toFont(options.footerFont);\n  var titleLineCount = title.length;\n  var footerLineCount = footer.length;\n  var bodyLineItemCount = body.length;\n  var padding = toPadding(options.padding);\n  var height = padding.height;\n  var width = 0;\n  var combinedBodyLength = body.reduce(function (count, bodyItem) {\n    return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n  }, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    var bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n  }\n  var widthPadding = 0;\n  var maxLineWidth = function maxLineWidth(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n  each(body, function (bodyItem) {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {\n    width: width,\n    height: height\n  };\n}\nfunction determineYAlign(chart, size) {\n  var y = size.y,\n    height = size.height;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > chart.height - height / 2) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  var x = size.x,\n    width = size.width;\n  var caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  var x = size.x,\n    width = size.width;\n  var chartWidth = chart.width,\n    _chart$chartArea = chart.chartArea,\n    left = _chart$chartArea.left,\n    right = _chart$chartArea.right;\n  var xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  var yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign: yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  var x = size.x,\n    width = size.width;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= width / 2;\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  var y = size.y,\n    height = size.height;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= height / 2;\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  var caretSize = options.caretSize,\n    caretPadding = options.caretPadding,\n    cornerRadius = options.cornerRadius;\n  var xAlign = alignment.xAlign,\n    yAlign = alignment.yAlign;\n  var paddingAndSize = caretSize + caretPadding;\n  var _toTRBLCorners = toTRBLCorners(cornerRadius),\n    topLeft = _toTRBLCorners.topLeft,\n    topRight = _toTRBLCorners.topRight,\n    bottomLeft = _toTRBLCorners.bottomLeft,\n    bottomRight = _toTRBLCorners.bottomRight;\n  var x = alignX(size, xAlign);\n  var y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  var padding = toPadding(options.padding);\n  return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip: tooltip,\n    tooltipItems: tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  var override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nvar Tooltip = /*#__PURE__*/function (_Element8) {\n  function Tooltip(config) {\n    var _this31;\n    _classCallCheck(this, Tooltip);\n    _this31 = _callSuper(this, Tooltip);\n    _this31.opacity = 0;\n    _this31._active = [];\n    _this31._eventPosition = undefined;\n    _this31._size = undefined;\n    _this31._cachedAnimations = undefined;\n    _this31._tooltipItems = [];\n    _this31.$animations = undefined;\n    _this31.$context = undefined;\n    _this31.chart = config.chart || config._chart;\n    _this31._chart = _this31.chart;\n    _this31.options = config.options;\n    _this31.dataPoints = undefined;\n    _this31.title = undefined;\n    _this31.beforeBody = undefined;\n    _this31.body = undefined;\n    _this31.afterBody = undefined;\n    _this31.footer = undefined;\n    _this31.xAlign = undefined;\n    _this31.yAlign = undefined;\n    _this31.x = undefined;\n    _this31.y = undefined;\n    _this31.height = undefined;\n    _this31.width = undefined;\n    _this31.caretX = undefined;\n    _this31.caretY = undefined;\n    _this31.labelColors = undefined;\n    _this31.labelPointStyles = undefined;\n    _this31.labelTextColors = undefined;\n    return _this31;\n  }\n  _inherits(Tooltip, _Element8);\n  return _createClass(Tooltip, [{\n    key: \"initialize\",\n    value: function initialize(options) {\n      this.options = options;\n      this._cachedAnimations = undefined;\n      this.$context = undefined;\n    }\n  }, {\n    key: \"_resolveAnimations\",\n    value: function _resolveAnimations() {\n      var cached = this._cachedAnimations;\n      if (cached) {\n        return cached;\n      }\n      var chart = this.chart;\n      var options = this.options.setContext(this.getContext());\n      var opts = options.enabled && chart.options.animation && options.animations;\n      var animations = new Animations(this.chart, opts);\n      if (opts._cacheable) {\n        this._cachedAnimations = Object.freeze(animations);\n      }\n      return animations;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext() {\n      return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n  }, {\n    key: \"getTitle\",\n    value: function getTitle(context, options) {\n      var callbacks = options.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n      var title = callbacks.title.apply(this, [context]);\n      var afterTitle = callbacks.afterTitle.apply(this, [context]);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    }\n  }, {\n    key: \"getBeforeBody\",\n    value: function getBeforeBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n    }\n  }, {\n    key: \"getBody\",\n    value: function getBody(tooltipItems, options) {\n      var _this32 = this;\n      var callbacks = options.callbacks;\n      var bodyItems = [];\n      each(tooltipItems, function (context) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        var scoped = overrideCallbacks(callbacks, context);\n        pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(_this32, context)));\n        pushOrConcat(bodyItem.lines, scoped.label.call(_this32, context));\n        pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(_this32, context)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    }\n  }, {\n    key: \"getAfterBody\",\n    value: function getAfterBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n    }\n  }, {\n    key: \"getFooter\",\n    value: function getFooter(tooltipItems, options) {\n      var callbacks = options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n      var footer = callbacks.footer.apply(this, [tooltipItems]);\n      var afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    }\n  }, {\n    key: \"_createItems\",\n    value: function _createItems(options) {\n      var _this33 = this;\n      var active = this._active;\n      var data = this.chart.data;\n      var labelColors = [];\n      var labelPointStyles = [];\n      var labelTextColors = [];\n      var tooltipItems = [];\n      var i, len;\n      for (i = 0, len = active.length; i < len; ++i) {\n        tooltipItems.push(createTooltipItem(this.chart, active[i]));\n      }\n      if (options.filter) {\n        tooltipItems = tooltipItems.filter(function (element, index, array) {\n          return options.filter(element, index, array, data);\n        });\n      }\n      if (options.itemSort) {\n        tooltipItems = tooltipItems.sort(function (a, b) {\n          return options.itemSort(a, b, data);\n        });\n      }\n      each(tooltipItems, function (context) {\n        var scoped = overrideCallbacks(options.callbacks, context);\n        labelColors.push(scoped.labelColor.call(_this33, context));\n        labelPointStyles.push(scoped.labelPointStyle.call(_this33, context));\n        labelTextColors.push(scoped.labelTextColor.call(_this33, context));\n      });\n      this.labelColors = labelColors;\n      this.labelPointStyles = labelPointStyles;\n      this.labelTextColors = labelTextColors;\n      this.dataPoints = tooltipItems;\n      return tooltipItems;\n    }\n  }, {\n    key: \"update\",\n    value: function update(changed, replay) {\n      var options = this.options.setContext(this.getContext());\n      var active = this._active;\n      var properties;\n      var tooltipItems = [];\n      if (!active.length) {\n        if (this.opacity !== 0) {\n          properties = {\n            opacity: 0\n          };\n        }\n      } else {\n        var position = positioners[options.position].call(this, active, this._eventPosition);\n        tooltipItems = this._createItems(options);\n        this.title = this.getTitle(tooltipItems, options);\n        this.beforeBody = this.getBeforeBody(tooltipItems, options);\n        this.body = this.getBody(tooltipItems, options);\n        this.afterBody = this.getAfterBody(tooltipItems, options);\n        this.footer = this.getFooter(tooltipItems, options);\n        var size = this._size = getTooltipSize(this, options);\n        var positionAndSize = Object.assign({}, position, size);\n        var alignment = determineAlignment(this.chart, options, positionAndSize);\n        var backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        properties = {\n          opacity: 1,\n          x: backgroundPoint.x,\n          y: backgroundPoint.y,\n          width: size.width,\n          height: size.height,\n          caretX: position.x,\n          caretY: position.y\n        };\n      }\n      this._tooltipItems = tooltipItems;\n      this.$context = undefined;\n      if (properties) {\n        this._resolveAnimations().update(this, properties);\n      }\n      if (changed && options.external) {\n        options.external.call(this, {\n          chart: this.chart,\n          tooltip: this,\n          replay: replay\n        });\n      }\n    }\n  }, {\n    key: \"drawCaret\",\n    value: function drawCaret(tooltipPoint, ctx, size, options) {\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n  }, {\n    key: \"getCaretPosition\",\n    value: function getCaretPosition(tooltipPoint, size, options) {\n      var xAlign = this.xAlign,\n        yAlign = this.yAlign;\n      var caretSize = options.caretSize,\n        cornerRadius = options.cornerRadius;\n      var _toTRBLCorners2 = toTRBLCorners(cornerRadius),\n        topLeft = _toTRBLCorners2.topLeft,\n        topRight = _toTRBLCorners2.topRight,\n        bottomLeft = _toTRBLCorners2.bottomLeft,\n        bottomRight = _toTRBLCorners2.bottomRight;\n      var ptX = tooltipPoint.x,\n        ptY = tooltipPoint.y;\n      var width = size.width,\n        height = size.height;\n      var x1, x2, x3, y1, y2, y3;\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n        x3 = x1;\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n        } else {\n          x2 = this.caretX;\n        }\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          x1 = x2 + caretSize;\n          x3 = x2 - caretSize;\n        }\n        y3 = y1;\n      }\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle(pt, ctx, options) {\n      var title = this.title;\n      var length = title.length;\n      var titleFont, titleSpacing, i;\n      if (length) {\n        var rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        pt.x = getAlignedX(this, options.titleAlign, options);\n        ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n        ctx.textBaseline = 'middle';\n        titleFont = toFont(options.titleFont);\n        titleSpacing = options.titleSpacing;\n        ctx.fillStyle = options.titleColor;\n        ctx.font = titleFont.string;\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n          pt.y += titleFont.lineHeight + titleSpacing;\n          if (i + 1 === length) {\n            pt.y += options.titleMarginBottom - titleSpacing;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_drawColorBox\",\n    value: function _drawColorBox(ctx, pt, i, rtlHelper, options) {\n      var labelColors = this.labelColors[i];\n      var labelPointStyle = this.labelPointStyles[i];\n      var boxHeight = options.boxHeight,\n        boxWidth = options.boxWidth,\n        boxPadding = options.boxPadding;\n      var bodyFont = toFont(options.bodyFont);\n      var colorX = getAlignedX(this, 'left', options);\n      var rtlColorX = rtlHelper.x(colorX);\n      var yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n      var colorY = pt.y + yOffSet;\n      if (options.usePointStyle) {\n        var drawOptions = {\n          radius: Math.min(boxWidth, boxHeight) / 2,\n          pointStyle: labelPointStyle.pointStyle,\n          rotation: labelPointStyle.rotation,\n          borderWidth: 1\n        };\n        var centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n        var centerY = colorY + boxHeight / 2;\n        ctx.strokeStyle = options.multiKeyBackground;\n        ctx.fillStyle = options.multiKeyBackground;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n        ctx.strokeStyle = labelColors.borderColor;\n        ctx.fillStyle = labelColors.backgroundColor;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max.apply(Math, _toConsumableArray(Object.values(labelColors.borderWidth))) : labelColors.borderWidth || 1;\n        ctx.strokeStyle = labelColors.borderColor;\n        ctx.setLineDash(labelColors.borderDash || []);\n        ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n        var outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n        var innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n        var borderRadius = toTRBLCorners(labelColors.borderRadius);\n        if (Object.values(borderRadius).some(function (v) {\n          return v !== 0;\n        })) {\n          ctx.beginPath();\n          ctx.fillStyle = options.multiKeyBackground;\n          addRoundedRectPath(ctx, {\n            x: outerX,\n            y: colorY,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius\n          });\n          ctx.fill();\n          ctx.stroke();\n          ctx.fillStyle = labelColors.backgroundColor;\n          ctx.beginPath();\n          addRoundedRectPath(ctx, {\n            x: innerX,\n            y: colorY + 1,\n            w: boxWidth - 2,\n            h: boxHeight - 2,\n            radius: borderRadius\n          });\n          ctx.fill();\n        } else {\n          ctx.fillStyle = options.multiKeyBackground;\n          ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.fillStyle = labelColors.backgroundColor;\n          ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n        }\n      }\n      ctx.fillStyle = this.labelTextColors[i];\n    }\n  }, {\n    key: \"drawBody\",\n    value: function drawBody(pt, ctx, options) {\n      var body = this.body;\n      var bodySpacing = options.bodySpacing,\n        bodyAlign = options.bodyAlign,\n        displayColors = options.displayColors,\n        boxHeight = options.boxHeight,\n        boxWidth = options.boxWidth,\n        boxPadding = options.boxPadding;\n      var bodyFont = toFont(options.bodyFont);\n      var bodyLineHeight = bodyFont.lineHeight;\n      var xLinePadding = 0;\n      var rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n        pt.y += bodyLineHeight + bodySpacing;\n      };\n      var bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n      var bodyItem, textColor, lines, i, j, ilen, jlen;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'middle';\n      ctx.font = bodyFont.string;\n      pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n      ctx.fillStyle = options.bodyColor;\n      each(this.beforeBody, fillLineOfText);\n      xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n      for (i = 0, ilen = body.length; i < ilen; ++i) {\n        bodyItem = body[i];\n        textColor = this.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        each(bodyItem.before, fillLineOfText);\n        lines = bodyItem.lines;\n        if (displayColors && lines.length) {\n          this._drawColorBox(ctx, pt, i, rtlHelper, options);\n          bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n        }\n        for (j = 0, jlen = lines.length; j < jlen; ++j) {\n          fillLineOfText(lines[j]);\n          bodyLineHeight = bodyFont.lineHeight;\n        }\n        each(bodyItem.after, fillLineOfText);\n      }\n      xLinePadding = 0;\n      bodyLineHeight = bodyFont.lineHeight;\n      each(this.afterBody, fillLineOfText);\n      pt.y -= bodySpacing;\n    }\n  }, {\n    key: \"drawFooter\",\n    value: function drawFooter(pt, ctx, options) {\n      var footer = this.footer;\n      var length = footer.length;\n      var footerFont, i;\n      if (length) {\n        var rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        pt.x = getAlignedX(this, options.footerAlign, options);\n        pt.y += options.footerMarginTop;\n        ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n        ctx.textBaseline = 'middle';\n        footerFont = toFont(options.footerFont);\n        ctx.fillStyle = options.footerColor;\n        ctx.font = footerFont.string;\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n          pt.y += footerFont.lineHeight + options.footerSpacing;\n        }\n      }\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground(pt, ctx, tooltipSize, options) {\n      var xAlign = this.xAlign,\n        yAlign = this.yAlign;\n      var x = pt.x,\n        y = pt.y;\n      var width = tooltipSize.width,\n        height = tooltipSize.height;\n      var _toTRBLCorners3 = toTRBLCorners(options.cornerRadius),\n        topLeft = _toTRBLCorners3.topLeft,\n        topRight = _toTRBLCorners3.topRight,\n        bottomLeft = _toTRBLCorners3.bottomLeft,\n        bottomRight = _toTRBLCorners3.bottomRight;\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.beginPath();\n      ctx.moveTo(x + topLeft, y);\n      if (yAlign === 'top') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x + width - topRight, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x + width, y + height - bottomRight);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x + bottomLeft, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x, y + topLeft);\n      ctx.quadraticCurveTo(x, y, x + topLeft, y);\n      ctx.closePath();\n      ctx.fill();\n      if (options.borderWidth > 0) {\n        ctx.stroke();\n      }\n    }\n  }, {\n    key: \"_updateAnimationTarget\",\n    value: function _updateAnimationTarget(options) {\n      var chart = this.chart;\n      var anims = this.$animations;\n      var animX = anims && anims.x;\n      var animY = anims && anims.y;\n      if (animX || animY) {\n        var position = positioners[options.position].call(this, this._active, this._eventPosition);\n        if (!position) {\n          return;\n        }\n        var size = this._size = getTooltipSize(this, options);\n        var positionAndSize = Object.assign({}, position, this._size);\n        var alignment = determineAlignment(chart, options, positionAndSize);\n        var point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n        if (animX._to !== point.x || animY._to !== point.y) {\n          this.xAlign = alignment.xAlign;\n          this.yAlign = alignment.yAlign;\n          this.width = size.width;\n          this.height = size.height;\n          this.caretX = position.x;\n          this.caretY = position.y;\n          this._resolveAnimations().update(this, point);\n        }\n      }\n    }\n  }, {\n    key: \"_willRender\",\n    value: function _willRender() {\n      return !!this.opacity;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var options = this.options.setContext(this.getContext());\n      var opacity = this.opacity;\n      if (!opacity) {\n        return;\n      }\n      this._updateAnimationTarget(options);\n      var tooltipSize = {\n        width: this.width,\n        height: this.height\n      };\n      var pt = {\n        x: this.x,\n        y: this.y\n      };\n      opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n      var padding = toPadding(options.padding);\n      var hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n      if (options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity;\n        this.drawBackground(pt, ctx, tooltipSize, options);\n        overrideTextDirection(ctx, options.textDirection);\n        pt.y += padding.top;\n        this.drawTitle(pt, ctx, options);\n        this.drawBody(pt, ctx, options);\n        this.drawFooter(pt, ctx, options);\n        restoreTextDirection(ctx, options.textDirection);\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"getActiveElements\",\n    value: function getActiveElements() {\n      return this._active || [];\n    }\n  }, {\n    key: \"setActiveElements\",\n    value: function setActiveElements(activeElements, eventPosition) {\n      var _this34 = this;\n      var lastActive = this._active;\n      var active = activeElements.map(function (_ref11) {\n        var datasetIndex = _ref11.datasetIndex,\n          index = _ref11.index;\n        var meta = _this34.chart.getDatasetMeta(datasetIndex);\n        if (!meta) {\n          throw new Error('Cannot find a dataset at index ' + datasetIndex);\n        }\n        return {\n          datasetIndex: datasetIndex,\n          element: meta.data[index],\n          index: index\n        };\n      });\n      var changed = !_elementsEqual(lastActive, active);\n      var positionChanged = this._positionChanged(active, eventPosition);\n      if (changed || positionChanged) {\n        this._active = active;\n        this._eventPosition = eventPosition;\n        this._ignoreReplayEvents = true;\n        this.update(true);\n      }\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(e, replay) {\n      var inChartArea = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      if (replay && this._ignoreReplayEvents) {\n        return false;\n      }\n      this._ignoreReplayEvents = false;\n      var options = this.options;\n      var lastActive = this._active || [];\n      var active = this._getActiveElements(e, lastActive, replay, inChartArea);\n      var positionChanged = this._positionChanged(active, e);\n      var changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n      if (changed) {\n        this._active = active;\n        if (options.enabled || options.external) {\n          this._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          this.update(true, replay);\n        }\n      }\n      return changed;\n    }\n  }, {\n    key: \"_getActiveElements\",\n    value: function _getActiveElements(e, lastActive, replay, inChartArea) {\n      var options = this.options;\n      if (e.type === 'mouseout') {\n        return [];\n      }\n      if (!inChartArea) {\n        return lastActive;\n      }\n      var active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n      return active;\n    }\n  }, {\n    key: \"_positionChanged\",\n    value: function _positionChanged(active, e) {\n      var caretX = this.caretX,\n        caretY = this.caretY,\n        options = this.options;\n      var position = positioners[options.position].call(this, active, e);\n      return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n  }]);\n}(Element);\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners: positioners,\n  afterInit: function afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({\n        chart: chart,\n        options: options\n      });\n    }\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset: function reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw: function afterDraw(chart) {\n    var tooltip = chart.tooltip;\n    if (tooltip && tooltip._willRender()) {\n      var args = {\n        tooltip: tooltip\n      };\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent: function afterEvent(chart, args) {\n    if (chart.tooltip) {\n      var useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold'\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {},\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold'\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: function boxHeight(ctx, opts) {\n      return opts.bodyFont.size;\n    },\n    boxWidth: function boxWidth(ctx, opts) {\n      return opts.bodyFont.size;\n    },\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart'\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title: function title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          var item = tooltipItems[0];\n          var labels = item.chart.data.labels;\n          var labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label: function label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        var label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        var value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor: function labelColor(tooltipItem) {\n        var meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        var options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0\n        };\n      },\n      labelTextColor: function labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle: function labelPointStyle(tooltipItem) {\n        var meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        var options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: function _scriptable(name) {\n      return name !== 'filter' && name !== 'itemSort' && name !== 'external';\n    },\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\nvar plugins = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Decimation: plugin_decimation,\n  Filler: index,\n  Legend: plugin_legend,\n  SubTitle: plugin_subtitle,\n  Title: plugin_title,\n  Tooltip: plugin_tooltip\n});\nvar addIfString = function addIfString(labels, raw, index, addedLabels) {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({\n      index: index,\n      label: raw\n    });\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  var first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  var last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nvar validIndex = function validIndex(index, max) {\n  return index === null ? null : _limitValue(Math.round(index), 0, max);\n};\nvar CategoryScale = /*#__PURE__*/function (_Scale) {\n  function CategoryScale(cfg) {\n    var _this35;\n    _classCallCheck(this, CategoryScale);\n    _this35 = _callSuper(this, CategoryScale, [cfg]);\n    _this35._startValue = undefined;\n    _this35._valueRange = 0;\n    _this35._addedLabels = [];\n    return _this35;\n  }\n  _inherits(CategoryScale, _Scale);\n  return _createClass(CategoryScale, [{\n    key: \"init\",\n    value: function init(scaleOptions) {\n      var added = this._addedLabels;\n      if (added.length) {\n        var labels = this.getLabels();\n        var _iterator24 = _createForOfIteratorHelper(added),\n          _step24;\n        try {\n          for (_iterator24.s(); !(_step24 = _iterator24.n()).done;) {\n            var _step24$value = _step24.value,\n              _index3 = _step24$value.index,\n              label = _step24$value.label;\n            if (labels[_index3] === label) {\n              labels.splice(_index3, 1);\n            }\n          }\n        } catch (err) {\n          _iterator24.e(err);\n        } finally {\n          _iterator24.f();\n        }\n        this._addedLabels = [];\n      }\n      _superPropGet(CategoryScale, \"init\", this, 3)([scaleOptions]);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (isNullOrUndef(raw)) {\n        return null;\n      }\n      var labels = this.getLabels();\n      index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n      return validIndex(index, labels.length - 1);\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getUserBounds2 = this.getUserBounds(),\n        minDefined = _this$getUserBounds2.minDefined,\n        maxDefined = _this$getUserBounds2.maxDefined;\n      var _this$getMinMax = this.getMinMax(true),\n        min = _this$getMinMax.min,\n        max = _this$getMinMax.max;\n      if (this.options.bounds === 'ticks') {\n        if (!minDefined) {\n          min = 0;\n        }\n        if (!maxDefined) {\n          max = this.getLabels().length - 1;\n        }\n      }\n      this.min = min;\n      this.max = max;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var min = this.min;\n      var max = this.max;\n      var offset = this.options.offset;\n      var ticks = [];\n      var labels = this.getLabels();\n      labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n      this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n      this._startValue = this.min - (offset ? 0.5 : 0);\n      for (var value = min; value <= max; value++) {\n        ticks.push({\n          value: value\n        });\n      }\n      return ticks;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      var labels = this.getLabels();\n      if (value >= 0 && value < labels.length) {\n        return labels[value];\n      }\n      return value;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      _superPropGet(CategoryScale, \"configure\", this, 3)([]);\n      if (!this.isHorizontal()) {\n        this._reversePixels = !this._reversePixels;\n      }\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      if (typeof value !== 'number') {\n        value = this.parse(value);\n      }\n      return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n  }, {\n    key: \"getPixelForTick\",\n    value: function getPixelForTick(index) {\n      var ticks = this.ticks;\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n      return this.getPixelForValue(ticks[index].value);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n  }, {\n    key: \"getBasePixel\",\n    value: function getBasePixel() {\n      return this.bottom;\n    }\n  }]);\n}(Scale);\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\nfunction generateTicks$1(generationOptions, dataRange) {\n  var ticks = [];\n  var MIN_SPACING = 1e-14;\n  var bounds = generationOptions.bounds,\n    step = generationOptions.step,\n    min = generationOptions.min,\n    max = generationOptions.max,\n    precision = generationOptions.precision,\n    count = generationOptions.count,\n    maxTicks = generationOptions.maxTicks,\n    maxDigits = generationOptions.maxDigits,\n    includeBounds = generationOptions.includeBounds;\n  var unit = step || 1;\n  var maxSpaces = maxTicks - 1;\n  var rmin = dataRange.min,\n    rmax = dataRange.max;\n  var minDefined = !isNullOrUndef(min);\n  var maxDefined = !isNullOrUndef(max);\n  var countDefined = !isNullOrUndef(count);\n  var minSpacing = (rmax - rmin) / (maxDigits + 1);\n  var spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  var factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{\n      value: rmin\n    }, {\n      value: rmax\n    }];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  var decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  var j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({\n        value: min\n      });\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({\n      value: Math.round((niceMin + j * spacing) * factor) / factor\n    });\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({\n        value: max\n      });\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({\n      value: niceMax\n    });\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, _ref12) {\n  var horizontal = _ref12.horizontal,\n    minRotation = _ref12.minRotation;\n  var rad = toRadians(minRotation);\n  var ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  var length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nvar LinearScaleBase = /*#__PURE__*/function (_Scale2) {\n  function LinearScaleBase(cfg) {\n    var _this36;\n    _classCallCheck(this, LinearScaleBase);\n    _this36 = _callSuper(this, LinearScaleBase, [cfg]);\n    _this36.start = undefined;\n    _this36.end = undefined;\n    _this36._startValue = undefined;\n    _this36._endValue = undefined;\n    _this36._valueRange = 0;\n    return _this36;\n  }\n  _inherits(LinearScaleBase, _Scale2);\n  return _createClass(LinearScaleBase, [{\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (isNullOrUndef(raw)) {\n        return null;\n      }\n      if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n        return null;\n      }\n      return +raw;\n    }\n  }, {\n    key: \"handleTickRangeOptions\",\n    value: function handleTickRangeOptions() {\n      var beginAtZero = this.options.beginAtZero;\n      var _this$getUserBounds3 = this.getUserBounds(),\n        minDefined = _this$getUserBounds3.minDefined,\n        maxDefined = _this$getUserBounds3.maxDefined;\n      var min = this.min,\n        max = this.max;\n      var setMin = function setMin(v) {\n        return min = minDefined ? min : v;\n      };\n      var setMax = function setMax(v) {\n        return max = maxDefined ? max : v;\n      };\n      if (beginAtZero) {\n        var minSign = sign(min);\n        var maxSign = sign(max);\n        if (minSign < 0 && maxSign < 0) {\n          setMax(0);\n        } else if (minSign > 0 && maxSign > 0) {\n          setMin(0);\n        }\n      }\n      if (min === max) {\n        var offset = 1;\n        if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n          offset = Math.abs(max * 0.05);\n        }\n        setMax(max + offset);\n        if (!beginAtZero) {\n          setMin(min - offset);\n        }\n      }\n      this.min = min;\n      this.max = max;\n    }\n  }, {\n    key: \"getTickLimit\",\n    value: function getTickLimit() {\n      var tickOpts = this.options.ticks;\n      var maxTicksLimit = tickOpts.maxTicksLimit,\n        stepSize = tickOpts.stepSize;\n      var maxTicks;\n      if (stepSize) {\n        maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n        if (maxTicks > 1000) {\n          console.warn(\"scales.\".concat(this.id, \".ticks.stepSize: \").concat(stepSize, \" would result generating up to \").concat(maxTicks, \" ticks. Limiting to 1000.\"));\n          maxTicks = 1000;\n        }\n      } else {\n        maxTicks = this.computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n      return maxTicks;\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var opts = this.options;\n      var tickOpts = opts.ticks;\n      var maxTicks = this.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        bounds: opts.bounds,\n        min: opts.min,\n        max: opts.max,\n        precision: tickOpts.precision,\n        step: tickOpts.stepSize,\n        count: tickOpts.count,\n        maxDigits: this._maxDigits(),\n        horizontal: this.isHorizontal(),\n        minRotation: tickOpts.minRotation || 0,\n        includeBounds: tickOpts.includeBounds !== false\n      };\n      var dataRange = this._range || this;\n      var ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n      if (opts.bounds === 'ticks') {\n        _setMinAndMaxByKey(ticks, this, 'value');\n      }\n      if (opts.reverse) {\n        ticks.reverse();\n        this.start = this.max;\n        this.end = this.min;\n      } else {\n        this.start = this.min;\n        this.end = this.max;\n      }\n      return ticks;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var ticks = this.ticks;\n      var start = this.min;\n      var end = this.max;\n      _superPropGet(LinearScaleBase, \"configure\", this, 3)([]);\n      if (this.options.offset && ticks.length) {\n        var offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n        start -= offset;\n        end += offset;\n      }\n      this._startValue = start;\n      this._endValue = end;\n      this._valueRange = end - start;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n  }]);\n}(Scale);\nvar LinearScale = /*#__PURE__*/function (_LinearScaleBase) {\n  function LinearScale() {\n    _classCallCheck(this, LinearScale);\n    return _callSuper(this, LinearScale, arguments);\n  }\n  _inherits(LinearScale, _LinearScaleBase);\n  return _createClass(LinearScale, [{\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getMinMax2 = this.getMinMax(true),\n        min = _this$getMinMax2.min,\n        max = _this$getMinMax2.max;\n      this.min = isNumberFinite(min) ? min : 0;\n      this.max = isNumberFinite(max) ? max : 1;\n      this.handleTickRangeOptions();\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      var horizontal = this.isHorizontal();\n      var length = horizontal ? this.width : this.height;\n      var minRotation = toRadians(this.options.ticks.minRotation);\n      var ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n      var tickFont = this._resolveTickFontOptions(0);\n      return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n  }]);\n}(LinearScaleBase);\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\nfunction isMajor(tickVal) {\n  var remain = tickVal / Math.pow(10, Math.floor(log10(tickVal)));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  var endExp = Math.floor(log10(dataRange.max));\n  var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  var ticks = [];\n  var tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  var exp = Math.floor(log10(tickVal));\n  var significand = Math.floor(tickVal / Math.pow(10, exp));\n  var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({\n      value: tickVal,\n      major: isMajor(tickVal)\n    });\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || exp === endExp && significand < endSignificand);\n  var lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({\n    value: lastTick,\n    major: isMajor(tickVal)\n  });\n  return ticks;\n}\nvar LogarithmicScale = /*#__PURE__*/function (_Scale3) {\n  function LogarithmicScale(cfg) {\n    var _this37;\n    _classCallCheck(this, LogarithmicScale);\n    _this37 = _callSuper(this, LogarithmicScale, [cfg]);\n    _this37.start = undefined;\n    _this37.end = undefined;\n    _this37._startValue = undefined;\n    _this37._valueRange = 0;\n    return _this37;\n  }\n  _inherits(LogarithmicScale, _Scale3);\n  return _createClass(LogarithmicScale, [{\n    key: \"parse\",\n    value: function parse(raw, index) {\n      var value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n      if (value === 0) {\n        this._zero = true;\n        return undefined;\n      }\n      return isNumberFinite(value) && value > 0 ? value : null;\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getMinMax3 = this.getMinMax(true),\n        min = _this$getMinMax3.min,\n        max = _this$getMinMax3.max;\n      this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n      this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n      if (this.options.beginAtZero) {\n        this._zero = true;\n      }\n      this.handleTickRangeOptions();\n    }\n  }, {\n    key: \"handleTickRangeOptions\",\n    value: function handleTickRangeOptions() {\n      var _this$getUserBounds4 = this.getUserBounds(),\n        minDefined = _this$getUserBounds4.minDefined,\n        maxDefined = _this$getUserBounds4.maxDefined;\n      var min = this.min;\n      var max = this.max;\n      var setMin = function setMin(v) {\n        return min = minDefined ? min : v;\n      };\n      var setMax = function setMax(v) {\n        return max = maxDefined ? max : v;\n      };\n      var exp = function exp(v, m) {\n        return Math.pow(10, Math.floor(log10(v)) + m);\n      };\n      if (min === max) {\n        if (min <= 0) {\n          setMin(1);\n          setMax(10);\n        } else {\n          setMin(exp(min, -1));\n          setMax(exp(max, +1));\n        }\n      }\n      if (min <= 0) {\n        setMin(exp(max, -1));\n      }\n      if (max <= 0) {\n        setMax(exp(min, +1));\n      }\n      if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n        setMin(exp(min, -1));\n      }\n      this.min = min;\n      this.max = max;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var opts = this.options;\n      var generationOptions = {\n        min: this._userMin,\n        max: this._userMax\n      };\n      var ticks = generateTicks(generationOptions, this);\n      if (opts.bounds === 'ticks') {\n        _setMinAndMaxByKey(ticks, this, 'value');\n      }\n      if (opts.reverse) {\n        ticks.reverse();\n        this.start = this.max;\n        this.end = this.min;\n      } else {\n        this.start = this.min;\n        this.end = this.max;\n      }\n      return ticks;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var start = this.min;\n      _superPropGet(LogarithmicScale, \"configure\", this, 3)([]);\n      this._startValue = log10(start);\n      this._valueRange = log10(this.max) - log10(start);\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      if (value === undefined || value === 0) {\n        value = this.min;\n      }\n      if (value === null || isNaN(value)) {\n        return NaN;\n      }\n      return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var decimal = this.getDecimalForPixel(pixel);\n      return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n  }]);\n}(Scale);\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\nfunction getTickBackdropHeight(opts) {\n  var tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    var padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - size / 2,\n      end: pos + size / 2\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  var orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  var limits = Object.assign({}, orig);\n  var labelSizes = [];\n  var padding = [];\n  var valueCount = scale._pointLabels.length;\n  var pointLabelOpts = scale.options.pointLabels;\n  var additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (var i = 0; i < valueCount; i++) {\n    var opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    var pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    var plFont = toFont(opts.font);\n    var textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    var angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    var angle = Math.round(toDegrees(angleRadians));\n    var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  var sin = Math.abs(Math.sin(angle));\n  var cos = Math.abs(Math.cos(angle));\n  var x = 0;\n  var y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  var items = [];\n  var valueCount = scale._pointLabels.length;\n  var opts = scale.options;\n  var extra = getTickBackdropHeight(opts) / 2;\n  var outerDistance = scale.drawingArea;\n  var additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (var i = 0; i < valueCount; i++) {\n    var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    var angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    var size = labelSizes[i];\n    var y = yForAngle(pointLabelPosition.y, size.h, angle);\n    var textAlign = getTextAlignForAngle(angle);\n    var left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y: y,\n      textAlign: textAlign,\n      left: left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= w / 2;\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= h / 2;\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  var ctx = scale.ctx,\n    pointLabels = scale.options.pointLabels;\n  for (var i = labelCount - 1; i >= 0; i--) {\n    var optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    var plFont = toFont(optsAtIndex.font);\n    var _scale$_pointLabelIte = scale._pointLabelItems[i],\n      x = _scale$_pointLabelIte.x,\n      y = _scale$_pointLabelIte.y,\n      textAlign = _scale$_pointLabelIte.textAlign,\n      left = _scale$_pointLabelIte.left,\n      top = _scale$_pointLabelIte.top,\n      right = _scale$_pointLabelIte.right,\n      bottom = _scale$_pointLabelIte.bottom;\n    var backdropColor = optsAtIndex.backdropColor;\n    if (!isNullOrUndef(backdropColor)) {\n      var borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      var padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      var backdropLeft = left - padding.left;\n      var backdropTop = top - padding.top;\n      var backdropWidth = right - left + padding.width;\n      var backdropHeight = bottom - top + padding.height;\n      if (Object.values(borderRadius).some(function (v) {\n        return v !== 0;\n      })) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n    renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n      color: optsAtIndex.color,\n      textAlign: textAlign,\n      textBaseline: 'middle'\n    });\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  var ctx = scale.ctx;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    var pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (var i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  var ctx = scale.ctx;\n  var circular = gridLineOpts.circular;\n  var color = gridLineOpts.color,\n    lineWidth = gridLineOpts.lineWidth;\n  if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label: label,\n    index: index,\n    type: 'pointLabel'\n  });\n}\nvar RadialLinearScale = /*#__PURE__*/function (_LinearScaleBase2) {\n  function RadialLinearScale(cfg) {\n    var _this38;\n    _classCallCheck(this, RadialLinearScale);\n    _this38 = _callSuper(this, RadialLinearScale, [cfg]);\n    _this38.xCenter = undefined;\n    _this38.yCenter = undefined;\n    _this38.drawingArea = undefined;\n    _this38._pointLabels = [];\n    _this38._pointLabelItems = [];\n    return _this38;\n  }\n  _inherits(RadialLinearScale, _LinearScaleBase2);\n  return _createClass(RadialLinearScale, [{\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      var padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n      var w = this.width = this.maxWidth - padding.width;\n      var h = this.height = this.maxHeight - padding.height;\n      this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n      this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n      this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getMinMax4 = this.getMinMax(false),\n        min = _this$getMinMax4.min,\n        max = _this$getMinMax4.max;\n      this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n      this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n      this.handleTickRangeOptions();\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var _this39 = this;\n      LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n      this._pointLabels = this.getLabels().map(function (value, index) {\n        var label = callback(_this39.options.pointLabels.callback, [value, index], _this39);\n        return label || label === 0 ? label : '';\n      }).filter(function (v, i) {\n        return _this39.chart.getDataVisibility(i);\n      });\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var opts = this.options;\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(this);\n      } else {\n        this.setCenterPoint(0, 0, 0, 0);\n      }\n    }\n  }, {\n    key: \"setCenterPoint\",\n    value: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n      this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n      this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n  }, {\n    key: \"getIndexAngle\",\n    value: function getIndexAngle(index) {\n      var angleMultiplier = TAU / (this._pointLabels.length || 1);\n      var startAngle = this.options.startAngle || 0;\n      return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n  }, {\n    key: \"getDistanceFromCenterForValue\",\n    value: function getDistanceFromCenterForValue(value) {\n      if (isNullOrUndef(value)) {\n        return NaN;\n      }\n      var scalingFactor = this.drawingArea / (this.max - this.min);\n      if (this.options.reverse) {\n        return (this.max - value) * scalingFactor;\n      }\n      return (value - this.min) * scalingFactor;\n    }\n  }, {\n    key: \"getValueForDistanceFromCenter\",\n    value: function getValueForDistanceFromCenter(distance) {\n      if (isNullOrUndef(distance)) {\n        return NaN;\n      }\n      var scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n      return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n  }, {\n    key: \"getPointLabelContext\",\n    value: function getPointLabelContext(index) {\n      var pointLabels = this._pointLabels || [];\n      if (index >= 0 && index < pointLabels.length) {\n        var pointLabel = pointLabels[index];\n        return createPointLabelContext(this.getContext(), index, pointLabel);\n      }\n    }\n  }, {\n    key: \"getPointPosition\",\n    value: function getPointPosition(index, distanceFromCenter) {\n      var additionalAngle = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n      return {\n        x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n        y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n        angle: angle\n      };\n    }\n  }, {\n    key: \"getPointPositionForValue\",\n    value: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n  }, {\n    key: \"getBasePosition\",\n    value: function getBasePosition(index) {\n      return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n  }, {\n    key: \"getPointLabelPosition\",\n    value: function getPointLabelPosition(index) {\n      var _this$_pointLabelItem = this._pointLabelItems[index],\n        left = _this$_pointLabelItem.left,\n        top = _this$_pointLabelItem.top,\n        right = _this$_pointLabelItem.right,\n        bottom = _this$_pointLabelItem.bottom;\n      return {\n        left: left,\n        top: top,\n        right: right,\n        bottom: bottom\n      };\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground() {\n      var _this$options15 = this.options,\n        backgroundColor = _this$options15.backgroundColor,\n        circular = _this$options15.grid.circular;\n      if (backgroundColor) {\n        var ctx = this.ctx;\n        ctx.save();\n        ctx.beginPath();\n        pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n        ctx.closePath();\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"drawGrid\",\n    value: function drawGrid() {\n      var _this40 = this;\n      var ctx = this.ctx;\n      var opts = this.options;\n      var angleLines = opts.angleLines,\n        grid = opts.grid;\n      var labelCount = this._pointLabels.length;\n      var i, offset, position;\n      if (opts.pointLabels.display) {\n        drawPointLabels(this, labelCount);\n      }\n      if (grid.display) {\n        this.ticks.forEach(function (tick, index) {\n          if (index !== 0) {\n            offset = _this40.getDistanceFromCenterForValue(tick.value);\n            var optsAtIndex = grid.setContext(_this40.getContext(index - 1));\n            drawRadiusLine(_this40, optsAtIndex, offset, labelCount);\n          }\n        });\n      }\n      if (angleLines.display) {\n        ctx.save();\n        for (i = labelCount - 1; i >= 0; i--) {\n          var optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n          var color = optsAtIndex.color,\n            lineWidth = optsAtIndex.lineWidth;\n          if (!lineWidth || !color) {\n            continue;\n          }\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = color;\n          ctx.setLineDash(optsAtIndex.borderDash);\n          ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n          offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n          position = this.getPointPosition(i, offset);\n          ctx.beginPath();\n          ctx.moveTo(this.xCenter, this.yCenter);\n          ctx.lineTo(position.x, position.y);\n          ctx.stroke();\n        }\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"drawBorder\",\n    value: function drawBorder() {}\n  }, {\n    key: \"drawLabels\",\n    value: function drawLabels() {\n      var _this41 = this;\n      var ctx = this.ctx;\n      var opts = this.options;\n      var tickOpts = opts.ticks;\n      if (!tickOpts.display) {\n        return;\n      }\n      var startAngle = this.getIndexAngle(0);\n      var offset, width;\n      ctx.save();\n      ctx.translate(this.xCenter, this.yCenter);\n      ctx.rotate(startAngle);\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      this.ticks.forEach(function (tick, index) {\n        if (index === 0 && !opts.reverse) {\n          return;\n        }\n        var optsAtIndex = tickOpts.setContext(_this41.getContext(index));\n        var tickFont = toFont(optsAtIndex.font);\n        offset = _this41.getDistanceFromCenterForValue(_this41.ticks[index].value);\n        if (optsAtIndex.showLabelBackdrop) {\n          ctx.font = tickFont.string;\n          width = ctx.measureText(tick.label).width;\n          ctx.fillStyle = optsAtIndex.backdropColor;\n          var padding = toPadding(optsAtIndex.backdropPadding);\n          ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n        }\n        renderText(ctx, tick.label, 0, -offset, tickFont, {\n          color: optsAtIndex.color\n        });\n      });\n      ctx.restore();\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {}\n  }]);\n}(LinearScaleBase);\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback: function callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\nvar INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: 1000\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: 60\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: 60\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: 24\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: 30\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: 4\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: 12\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: 4\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nvar UNITS = Object.keys(INTERVALS);\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction _parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  var adapter = scale._adapter;\n  var _scale$_parseOpts = scale._parseOpts,\n    parser = _scale$_parseOpts.parser,\n    round = _scale$_parseOpts.round,\n    isoWeekday = _scale$_parseOpts.isoWeekday;\n  var value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  var ilen = UNITS.length;\n  for (var i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    var interval = INTERVALS[UNITS[i]];\n    var factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (var i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    var unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    var _lookup2 = _lookup(timestamps, time),\n      lo = _lookup2.lo,\n      hi = _lookup2.hi;\n    var timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  var adapter = scale._adapter;\n  var first = +adapter.startOf(ticks[0].value, majorUnit);\n  var last = ticks[ticks.length - 1].value;\n  var major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  var ticks = [];\n  var map = {};\n  var ilen = values.length;\n  var i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value: value,\n      major: false\n    });\n  }\n  return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nvar TimeScale = /*#__PURE__*/function (_Scale4) {\n  function TimeScale(props) {\n    var _this42;\n    _classCallCheck(this, TimeScale);\n    _this42 = _callSuper(this, TimeScale, [props]);\n    _this42._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    _this42._unit = 'day';\n    _this42._majorUnit = undefined;\n    _this42._offsets = {};\n    _this42._normalized = false;\n    _this42._parseOpts = undefined;\n    return _this42;\n  }\n  _inherits(TimeScale, _Scale4);\n  return _createClass(TimeScale, [{\n    key: \"init\",\n    value: function init(scaleOpts, opts) {\n      var time = scaleOpts.time || (scaleOpts.time = {});\n      var adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n      adapter.init(opts);\n      mergeIf(time.displayFormats, adapter.formats());\n      this._parseOpts = {\n        parser: time.parser,\n        round: time.round,\n        isoWeekday: time.isoWeekday\n      };\n      _superPropGet(TimeScale, \"init\", this, 3)([scaleOpts]);\n      this._normalized = opts.normalized;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (raw === undefined) {\n        return null;\n      }\n      return _parse(this, raw);\n    }\n  }, {\n    key: \"beforeLayout\",\n    value: function beforeLayout() {\n      _superPropGet(TimeScale, \"beforeLayout\", this, 3)([]);\n      this._cache = {\n        data: [],\n        labels: [],\n        all: []\n      };\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var options = this.options;\n      var adapter = this._adapter;\n      var unit = options.time.unit || 'day';\n      var _this$getUserBounds5 = this.getUserBounds(),\n        min = _this$getUserBounds5.min,\n        max = _this$getUserBounds5.max,\n        minDefined = _this$getUserBounds5.minDefined,\n        maxDefined = _this$getUserBounds5.maxDefined;\n      function _applyBounds(bounds) {\n        if (!minDefined && !isNaN(bounds.min)) {\n          min = Math.min(min, bounds.min);\n        }\n        if (!maxDefined && !isNaN(bounds.max)) {\n          max = Math.max(max, bounds.max);\n        }\n      }\n      if (!minDefined || !maxDefined) {\n        _applyBounds(this._getLabelBounds());\n        if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n          _applyBounds(this.getMinMax(false));\n        }\n      }\n      min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n      max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n      this.min = Math.min(min, max - 1);\n      this.max = Math.max(min + 1, max);\n    }\n  }, {\n    key: \"_getLabelBounds\",\n    value: function _getLabelBounds() {\n      var arr = this.getLabelTimestamps();\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      if (arr.length) {\n        min = arr[0];\n        max = arr[arr.length - 1];\n      }\n      return {\n        min: min,\n        max: max\n      };\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var options = this.options;\n      var timeOpts = options.time;\n      var tickOpts = options.ticks;\n      var timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n      if (options.bounds === 'ticks' && timestamps.length) {\n        this.min = this._userMin || timestamps[0];\n        this.max = this._userMax || timestamps[timestamps.length - 1];\n      }\n      var min = this.min;\n      var max = this.max;\n      var ticks = _filterBetween(timestamps, min, max);\n      this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n      this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n      this.initOffsets(timestamps);\n      if (options.reverse) {\n        ticks.reverse();\n      }\n      return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n  }, {\n    key: \"afterAutoSkip\",\n    value: function afterAutoSkip() {\n      if (this.options.offsetAfterAutoskip) {\n        this.initOffsets(this.ticks.map(function (tick) {\n          return +tick.value;\n        }));\n      }\n    }\n  }, {\n    key: \"initOffsets\",\n    value: function initOffsets(timestamps) {\n      var start = 0;\n      var end = 0;\n      var first, last;\n      if (this.options.offset && timestamps.length) {\n        first = this.getDecimalForValue(timestamps[0]);\n        if (timestamps.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n        }\n        last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n        if (timestamps.length === 1) {\n          end = last;\n        } else {\n          end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n        }\n      }\n      var limit = timestamps.length < 3 ? 0.5 : 0.25;\n      start = _limitValue(start, 0, limit);\n      end = _limitValue(end, 0, limit);\n      this._offsets = {\n        start: start,\n        end: end,\n        factor: 1 / (start + 1 + end)\n      };\n    }\n  }, {\n    key: \"_generate\",\n    value: function _generate() {\n      var adapter = this._adapter;\n      var min = this.min;\n      var max = this.max;\n      var options = this.options;\n      var timeOpts = options.time;\n      var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n      var stepSize = valueOrDefault(timeOpts.stepSize, 1);\n      var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n      var hasWeekday = isNumber(weekday) || weekday === true;\n      var ticks = {};\n      var first = min;\n      var time, count;\n      if (hasWeekday) {\n        first = +adapter.startOf(first, 'isoWeek', weekday);\n      }\n      first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n      if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n        throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n      }\n      var timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n      for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n        addTick(ticks, time, timestamps);\n      }\n      if (time === max || options.bounds === 'ticks' || count === 1) {\n        addTick(ticks, time, timestamps);\n      }\n      return Object.keys(ticks).sort(function (a, b) {\n        return a - b;\n      }).map(function (x) {\n        return +x;\n      });\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      var adapter = this._adapter;\n      var timeOpts = this.options.time;\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(value, timeOpts.tooltipFormat);\n      }\n      return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n  }, {\n    key: \"_tickFormatFunction\",\n    value: function _tickFormatFunction(time, index, ticks, format) {\n      var options = this.options;\n      var formats = options.time.displayFormats;\n      var unit = this._unit;\n      var majorUnit = this._majorUnit;\n      var minorFormat = unit && formats[unit];\n      var majorFormat = majorUnit && formats[majorUnit];\n      var tick = ticks[index];\n      var major = majorUnit && majorFormat && tick && tick.major;\n      var label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n      var formatter = options.ticks.callback;\n      return formatter ? callback(formatter, [label, index, ticks], this) : label;\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var i, ilen, tick;\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        tick.label = this._tickFormatFunction(tick.value, i, ticks);\n      }\n    }\n  }, {\n    key: \"getDecimalForValue\",\n    value: function getDecimalForValue(value) {\n      return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      var offsets = this._offsets;\n      var pos = this.getDecimalForValue(value);\n      return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var offsets = this._offsets;\n      var pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return this.min + pos * (this.max - this.min);\n    }\n  }, {\n    key: \"_getLabelSize\",\n    value: function _getLabelSize(label) {\n      var ticksOpts = this.options.ticks;\n      var tickLabelWidth = this.ctx.measureText(label).width;\n      var angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = this._resolveTickFontOptions(0).size;\n      return {\n        w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n        h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n      };\n    }\n  }, {\n    key: \"_getLabelCapacity\",\n    value: function _getLabelCapacity(exampleTime) {\n      var timeOpts = this.options.time;\n      var displayFormats = timeOpts.displayFormats;\n      var format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n      var exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n      var size = this._getLabelSize(exampleLabel);\n      var capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n      return capacity > 0 ? capacity : 1;\n    }\n  }, {\n    key: \"getDataTimestamps\",\n    value: function getDataTimestamps() {\n      var timestamps = this._cache.data || [];\n      var i, ilen;\n      if (timestamps.length) {\n        return timestamps;\n      }\n      var metas = this.getMatchingVisibleMetas();\n      if (this._normalized && metas.length) {\n        return this._cache.data = metas[0].controller.getAllParsedValues(this);\n      }\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n      }\n      return this._cache.data = this.normalize(timestamps);\n    }\n  }, {\n    key: \"getLabelTimestamps\",\n    value: function getLabelTimestamps() {\n      var timestamps = this._cache.labels || [];\n      var i, ilen;\n      if (timestamps.length) {\n        return timestamps;\n      }\n      var labels = this.getLabels();\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        timestamps.push(_parse(this, labels[i]));\n      }\n      return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize(values) {\n      return _arrayUnique(values.sort(sorter));\n    }\n  }]);\n}(Scale);\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\nfunction interpolate(table, val, reverse) {\n  var lo = 0;\n  var hi = table.length - 1;\n  var prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      var _lookupByKey2 = _lookupByKey(table, 'pos', val);\n      lo = _lookupByKey2.lo;\n      hi = _lookupByKey2.hi;\n    }\n    var _table$lo = table[lo];\n    prevSource = _table$lo.pos;\n    prevTarget = _table$lo.time;\n    var _table$hi = table[hi];\n    nextSource = _table$hi.pos;\n    nextTarget = _table$hi.time;\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      var _lookupByKey3 = _lookupByKey(table, 'time', val);\n      lo = _lookupByKey3.lo;\n      hi = _lookupByKey3.hi;\n    }\n    var _table$lo2 = table[lo];\n    prevSource = _table$lo2.time;\n    prevTarget = _table$lo2.pos;\n    var _table$hi2 = table[hi];\n    nextSource = _table$hi2.time;\n    nextTarget = _table$hi2.pos;\n  }\n  var span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nvar TimeSeriesScale = /*#__PURE__*/function (_TimeScale) {\n  function TimeSeriesScale(props) {\n    var _this43;\n    _classCallCheck(this, TimeSeriesScale);\n    _this43 = _callSuper(this, TimeSeriesScale, [props]);\n    _this43._table = [];\n    _this43._minPos = undefined;\n    _this43._tableRange = undefined;\n    return _this43;\n  }\n  _inherits(TimeSeriesScale, _TimeScale);\n  return _createClass(TimeSeriesScale, [{\n    key: \"initOffsets\",\n    value: function initOffsets() {\n      var timestamps = this._getTimestampsForTable();\n      var table = this._table = this.buildLookupTable(timestamps);\n      this._minPos = interpolate(table, this.min);\n      this._tableRange = interpolate(table, this.max) - this._minPos;\n      _superPropGet(TimeSeriesScale, \"initOffsets\", this, 3)([timestamps]);\n    }\n  }, {\n    key: \"buildLookupTable\",\n    value: function buildLookupTable(timestamps) {\n      var min = this.min,\n        max = this.max;\n      var items = [];\n      var table = [];\n      var i, ilen, prev, curr, next;\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        curr = timestamps[i];\n        if (curr >= min && curr <= max) {\n          items.push(curr);\n        }\n      }\n      if (items.length < 2) {\n        return [{\n          time: min,\n          pos: 0\n        }, {\n          time: max,\n          pos: 1\n        }];\n      }\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        next = items[i + 1];\n        prev = items[i - 1];\n        curr = items[i];\n        if (Math.round((next + prev) / 2) !== curr) {\n          table.push({\n            time: curr,\n            pos: i / (ilen - 1)\n          });\n        }\n      }\n      return table;\n    }\n  }, {\n    key: \"_getTimestampsForTable\",\n    value: function _getTimestampsForTable() {\n      var timestamps = this._cache.all || [];\n      if (timestamps.length) {\n        return timestamps;\n      }\n      var data = this.getDataTimestamps();\n      var label = this.getLabelTimestamps();\n      if (data.length && label.length) {\n        timestamps = this.normalize(data.concat(label));\n      } else {\n        timestamps = data.length ? data : label;\n      }\n      timestamps = this._cache.all = timestamps;\n      return timestamps;\n    }\n  }, {\n    key: \"getDecimalForValue\",\n    value: function getDecimalForValue(value) {\n      return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var offsets = this._offsets;\n      var decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n  }]);\n}(TimeScale);\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\nvar scales = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CategoryScale: CategoryScale,\n  LinearScale: LinearScale,\n  LogarithmicScale: LogarithmicScale,\n  RadialLinearScale: RadialLinearScale,\n  TimeScale: TimeScale,\n  TimeSeriesScale: TimeSeriesScale\n});\nvar registerables = [controllers, elements, plugins, scales];\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };","map":{"version":3,"names":["r","requestAnimFrame","a","resolve","e","effects","c","color","d","defaults","i","isObject","b","isArray","v","valueOrDefault","u","unlistenArrayEvents","l","listenArrayEvents","f","resolveObjectKey","g","isNumberFinite","h","createContext","j","defined","s","sign","k","isNullOrUndef","_","_arrayUnique","t","toRadians","m","toPercentage","n","toDimension","T","TAU","o","formatNumber","p","_angleBetween","H","HALF_PI","P","PI","q","_getStartAndCountOfVisiblePoints","w","_scaleRangesChanged","x","isNumber","y","_parseObjectDataRadialScale","z","log10","A","_factorize","B","finiteOrDefault","C","callback","D","_addGrace","E","_limitValue","F","toDegrees","G","_measureText","I","_int16Range","J","_alignPixel","K","toPadding","L","clipArea","M","renderText","N","unclipArea","O","toFont","Q","each","R","_toLeftRightCenter","S","_alignStartEnd","U","overrides","V","merge","W","_capitalize","X","getRelativePosition","Y","_rlookupByKey","Z","_lookupByKey","$","_isPointInArea","a0","getAngleFromPoint","a1","getMaximumSize","a2","_getParentNode","a3","readUsedSize","a4","throttled","a5","supportsEventListenerOptions","a6","_isDomSupported","a7","descriptors","a8","isFunction","a9","_attachContext","aa","_createResolver","ab","_descriptors","ac","mergeIf","ad","uid","ae","debounce","af","retinaScale","ag","clearCanvas","ah","setsEqual","ai","_elementsEqual","aj","_isClickEvent","ak","_isBetween","al","_readValueToProps","am","_updateBezierControlPoints","an","_computeSegments","ao","_boundSegments","ap","_steppedInterpolation","aq","_bezierInterpolation","ar","_pointInLine","as","_steppedLineTo","at","_bezierCurveTo","au","drawPoint","av","addRoundedRectPath","aw","toTRBL","ax","toTRBLCorners","ay","_boundSegment","az","_normalizeAngle","aA","getRtlAdapter","aB","overrideTextDirection","aC","_textX","aD","restoreTextDirection","aE","drawPointLegend","aF","noop","aG","distanceBetweenPoints","aH","_setMinAndMaxByKey","aI","niceNum","aJ","almostWhole","aK","almostEquals","aL","_decimalPlaces","aM","_longestText","aN","_filterBetween","aO","_lookup","Animator","_classCallCheck","_request","_charts","Map","_running","_lastDate","undefined","_createClass","key","value","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","_this","call","window","_update","_this2","arguments","length","Date","now","remaining","running","items","draw","item","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","_this$_getAnims$items","apply","_toConsumableArray","has","reduce","acc","cur","max","_duration","stop","cancel","remove","animator","transparent","interpolators","boolean","from","to","factor","c0","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","numbers","colors","animationOptions","Object","keys","animation","describe","_fallback","_indexable","_scriptable","name","properties","resize","show","animations","visible","hide","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","_i","_animationOptions","option","_animateOptions","values","newOptions","options","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","size","assign","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","top","right","bottom","left","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","convertObjectDataToArray","data","adata","Array","isStacked","meta","stacked","getStackKey","indexScale","valueScale","concat","id","getUserBounds","_scale$getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","_iterator","_createForOfIteratorHelper","getMatchingVisibleMetas","_step","done","err","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","itemStacks","_top","_bottom","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","_iterator2","_step2","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","addElements","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","_defineProperty","_this$_parsing","_this$_parsing$xAxisK","xAxisKey","_this$_parsing$yAxisK","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","otherScale","_getUserBounds","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","clip","elements","area","chartArea","drawActiveElementsOnTop","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","dataElementType","elementType","_this3","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","_iterator3","_step3","_step3$value","_slicedToArray","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_args2","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","prototype","getAllScaleValues","_cache","$bar","visibleMetas","sort","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","base","setBorderSkipped","edge","borderSkipped","_borderProps","enableBorderRadius","parseEdge","swap","startEnd","orig","v1","v2","setInflateAmount","_ref","inflateAmount","BarController","_DatasetController","_callSuper","_inherits","_this$_parsing2","_this$_parsing2$xAxis","_this$_parsing2$yAxis","iAxisKey","vAxisKey","obj","_superPropGet","bars","getBasePixel","_getRuler","_this$_getSharedOptio","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","grouped","skipNull","val","isNaN","_iterator4","_step4","indexOf","_getStackCount","_getStackIndex","_startPixel","_endPixel","_this$_cachedMeta","_this$options","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","_index_","offset","grid","_value_","beginAtZero","BubbleController","_DatasetController2","radius","points","_this$_cachedMeta2","_this$_getSharedOptio2","point","iPixel","vPixel","skip","plugins","tooltip","title","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","minX","minY","DoughnutController","_DatasetController3","_this4","innerRadius","outerRadius","getter","_this$_parsing$key","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","_this$_getRotationExt","_getRatioAndOffset","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","_this$_getSharedOptio3","arc","metaData","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","aspectRatio","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","onClick","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","LineController","_DatasetController4","line","_meta$data","_dataset","animationsDisabled","_getStartAndCountOfVi","_datasetIndex","_decimated","showLine","segment","animated","_this$_cachedMeta3","_this$_getSharedOptio4","_this$options2","spanGaps","maxGapLength","directUpdate","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","_DatasetController5","_this5","bind","_updateRadius","_this6","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","_this7","angleLines","display","circular","pointLabels","PieController","_DoughnutController","RadarController","_DatasetController6","_fullLoop","pointPosition","getPointPositionForValue","fill","Element","tooltipPosition","useFinalPosition","_this$getProps","getProps","hasValue","final","_this8","ret","defaultRoutes","formatters","numeric","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","format","logarithmic","pow","Ticks","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickLength","tickWidth","tickColor","borderDash","borderDashOffset","padding","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","align","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","result","ceil","majorStart","majorEnd","len","diff","reverseAlign","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","getTitleHeight","fallback","font","lines","lineHeight","createScaleContext","createTickContext","titleAlign","position","titleArgs","titleX","titleY","positionAxisID","Scale","_Element","_this9","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_reversePixels","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","setContext","suggestedMin","suggestedMax","_this$getUserBounds","metas","getPadding","getTicks","xLabels","yLabels","beforeLayout","beforeUpdate","margins","_this$options3","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","sqrt","asin","_this$options4","titleOpts","gridOpts","titleHeight","_this$_getLabelSizes","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","_this$options5","_this$options5$ticks","isRotated","labelsBelowTicks","offsetLeft","offsetRight","_this$options6","isFullSize","fullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","jlen","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","valueAt","idx","getValueForPixel","pixel","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","tickTextAlign","backdrop","labelPadding","translation","_this$options7","_this$options8","_this$options8$ticks","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","lastLineWidth","drawLabels","drawTitle","_this$options9","_titleArgs","_layers","_this10","tz","gz","getSortedVisibleDatasetMetas","axisID","_maxDigits","fontSize","TypedRegistry","scope","override","create","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","Error","registerDefaults","unregister","itemDefaults","routeDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","Registry","controllers","_typedRegistries","_len","_key","_each","_len2","_key2","addControllers","_len3","_key3","_len4","_key4","addPlugins","_len5","_key5","addScales","_len6","_key6","getController","_get","getElement","getPlugin","getScale","removeControllers","_len7","_key7","removeElements","_len8","_key8","removePlugins","_len9","_key9","removeScales","_len10","_key10","typedRegistry","_this11","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","ScatterController","_DatasetController7","_meta$data2","_getStartAndCountOfVi2","_this$_cachedMeta4","_this$options10","interaction","__proto__","abstract","DateAdapter","chartOptions","formats","timestamp","amount","unit","startOf","weekday","endOf","members","adapters","_date","binarySearch","metaset","intersect","lookupMethod","el","getRange","lo","hi","evaluateInteractionItems","handler","_metasets$i","_binarySearch","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","getIntersectItems","includeInvisible","isPointInArea","evaluationFunc","inRange","getNearestRadialItems","_element$getProps","_getAngleFromPoint","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","wrapBoxes","boxes","layoutBoxes","stackWeight","_box","_box$options","_box$options$stackWei","buildStacks","layouts","_iterator5","_step5","wrap","includes","_stack","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","changed","_updateDims","setBoxDims","placeBoxes","userPadding","_iterator6","_step6","autoPadding","addBox","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","visibleVerticalBoxCount","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","isAttached","updateConfig","BasicPlatform","_BasePlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","eventListenerOptions","passive","addListener","node","removeListener","fromNativeEvent","_getRelativePosition","nodeListContains","nodeList","_iterator7","_step7","contains","createAttachObserver","observer","MutationObserver","entries","trigger","_iterator8","_step8","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","_iterator9","_step9","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","container","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","DomPlatform","_BasePlatform2","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","PluginService","_init","notify","hook","_createDescriptors","_iterator10","_step10","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","local","getOpts","_ref2","_iterator11","_step11","pluginOpts","_ref3","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","console","error","_proxy","warn","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","_getResolver","getResolver","resolver","subPrefixes","needContext","subResolver","_iterator12","_step12","descriptorDefaults","_getResolver2","resolverCache","hasFunction","_descriptors2","isScriptable","isIndexable","_iterator13","_step13","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","_i3","_keys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","Chart","userConfig","_this12","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","_this$options11","maintainAspectRatio","responsive","bindEvents","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","_this13","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","_this14","buildOrUpdateControllers","newControllers","order","ControllerClass","_defaults$datasets$ty","_resetElements","_this15","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_this$getDatasetMeta","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","_this16","existingEvents","newEvents","events","unbindEvents","changes","_getUniformDataChanges","_iterator14","_step14","_step14$value","datasetCount","makeSet","changeSet","_this17","noArea","_this17$_layers","_idx","_updateDataset","_this$_resizeBeforeDr","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","_this$canvas","toDataURL","bindUserEvents","bindResponsiveEvents","_this18","_add","_this19","_remove","detached","_this20","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","_this21","lastActive","_ref4","replay","hoverOptions","hover","deactivated","activated","_this22","eventFilter","_handleEvent","_this$_active","_getActiveElements","onHover","invalidatePlugins","enumerable","defineProperties","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","_parseBorderRadius$","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","drawFullCircleBorders","inner","borderJoinStyle","lineJoin","ArcElement","_Element2","_this23","chartX","chartY","_getAngleFromPoint2","_this$getProps2","rAdjust","betweenAngles","withinRadius","_this$getProps3","_this$options12","halfAngle","halfRadius","radiusOffset","translate","setStyle","lineCap","borderCapStyle","previous","getLineMethod","stepped","tension","cubicInterpolationMode","pathVars","_params$start","paramsStart","_params$end","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","_pathVars","lineMethod","_ref5","_ref5$move","fastPathSegment","_pathVars2","_ref6","_ref6$move","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","_iterator15","_step15","usePath2D","LineElement","_Element3","_this24","_points","_segments","_pointsUpdated","interpolate","_interpolate","_segments$i","interpolated","_iterator16","_step16","capBezierPoints","inRange$1","_el$getProps","hitRadius","PointElement","_Element4","_this25","mouseX","mouseY","_this$getProps4","inXRange","inYRange","_this$getProps5","hoverRadius","getBarBounds","bar","_bar$getProps","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","_bar$getProps2","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","inflateRect","refRect","BarElement","_Element5","_this26","_this$options13","_boundingRects","addRectPath","_this$getProps6","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","_data$a","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","_objectSpread","cleanDecimatedDataset","defineProperty","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","pointCount","_iScale$getUserBounds","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","_getStartAndCountOfVi3","threshold","configurable","tpoints","_iterator17","_step17","_findSegmentEnd","_getBounds","targetSegments","_iterator18","_step18","tgt","subBounds","fillSources","_iterator19","_step19","fillSource","_getEdge","_pointsFromSegments","boundary","_ref7","_ref7$x","_ref7$y","linePoints","_ref8","_createBoundaryLine","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","parseFillOption","parseFloat","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","_findPoint","findPoint","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_source$scale","_drawfill","lineOpts","_ref9","_ref9$above","above","_ref9$below","doFill","clipVertical","clipY","lineLoop","_iterator20","_step20","_iterator21","_step21","_step21$value","src","_src$style","_src$style2","_src$style2$backgroun","notShape","clipBounds","interpolatedLineTo","targetLoop","_scale$chart$chartAre","_ref10","interpolatedPoint","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","_labelOpts$boxHeight","boxHeight","_labelOpts$boxWidth","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_Element6","_this27","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","_this28","labelFont","_computeTitleHeight","_getBoxSize","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","_this$options14","rtl","rtlHelper","_iterator22","_step22","hitbox","leftForLtr","_iterator23","_step23","_draw","_this29","defaultColor","fontColor","halfFontSize","cursor","_getBoxSize2","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","fillText","strikethrough","textDirection","textWidth","setWidth","realX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","plugin_legend","_element","afterEvent","ci","_chart$legend$options","Title","_Element7","_this30","_padding","textSize","_drawArgs","fontOpts","_this$_drawArgs","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","str","String","createTooltipItem","_controller$getLabelA","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","_chart$chartArea","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","_toTRBLCorners","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","Tooltip","_Element8","_this31","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","_this32","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","_this33","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","_toTRBLCorners2","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","_toTRBLCorners3","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","_this34","_ref11","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","labelCount","Decimation","Filler","SubTitle","addIfString","addedLabels","findOrAddLabel","lastIndexOf","CategoryScale","_Scale","_this35","_startValue","_valueRange","_addedLabels","added","_iterator24","_step24","_step24$value","isFinite","_this$getUserBounds2","_this$getMinMax","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","_ref12","rad","LinearScaleBase","_Scale2","_this36","_endValue","handleTickRangeOptions","_this$getUserBounds3","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","_LinearScaleBase","_this$getMinMax2","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","LogarithmicScale","_Scale3","_this37","_zero","_this$getMinMax3","_this$getUserBounds4","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","_scale$_pointLabelIte","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","_LinearScaleBase2","_this38","_this$getMinMax4","_this39","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","_this$_pointLabelItem","_this$options15","_this40","_this41","rotate","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","_scale$_parseOpts","_parseOpts","parser","isoWeekday","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","_lookup2","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_Scale4","_this42","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_this$getUserBounds5","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","formatter","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","_lookupByKey2","_table$lo","_table$hi","_lookupByKey3","_table$lo2","_table$hi2","span","TimeSeriesScale","_TimeScale","_this43","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","_adapters"],"sources":["C:/Users/HUAWEI/Documents/GitHub/SinfonyPlataforma/node_modules/chart.js/dist/chart.mjs"],"sourcesContent":["/*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as log10, A as _factorize, B as finiteOrDefault, C as callback, D as _addGrace, E as _limitValue, F as toDegrees, G as _measureText, I as _int16Range, J as _alignPixel, K as toPadding, L as clipArea, M as renderText, N as unclipArea, O as toFont, Q as each, R as _toLeftRightCenter, S as _alignStartEnd, U as overrides, V as merge, W as _capitalize, X as getRelativePosition, Y as _rlookupByKey, Z as _lookupByKey, $ as _isPointInArea, a0 as getAngleFromPoint, a1 as getMaximumSize, a2 as _getParentNode, a3 as readUsedSize, a4 as throttled, a5 as supportsEventListenerOptions, a6 as _isDomSupported, a7 as descriptors, a8 as isFunction, a9 as _attachContext, aa as _createResolver, ab as _descriptors, ac as mergeIf, ad as uid, ae as debounce, af as retinaScale, ag as clearCanvas, ah as setsEqual, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _readValueToProps, am as _updateBezierControlPoints, an as _computeSegments, ao as _boundSegments, ap as _steppedInterpolation, aq as _bezierInterpolation, ar as _pointInLine, as as _steppedLineTo, at as _bezierCurveTo, au as drawPoint, av as addRoundedRectPath, aw as toTRBL, ax as toTRBLCorners, ay as _boundSegment, az as _normalizeAngle, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as noop, aG as distanceBetweenPoints, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as _longestText, aN as _filterBetween, aO as _lookup } from './chunks/helpers.segment.mjs';\nexport { d as defaults } from './chunks/helpers.segment.mjs';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n    return range;\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndex.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n      if (isHorizontal) {\n        x = pixel;\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass ScatterController extends DatasetController {\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    if (this.options.showLine) {\n      const {dataset: line, _dataset} = meta;\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n    this.updateElements(points, start, count, mode);\n  }\n  addElements() {\n    const {showLine} = this.options;\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = registry.getElement('line');\n    }\n    super.addElements();\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  init(chartOptions) {}\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  evaluateInteractionItems,\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n  return {plugins, localIds};\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.9.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end, circular) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  if (circular) {\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle, circular) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle, circular);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n  circular: true,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n  return target;\n}\nfunction _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\nfunction _getTargetValue(fill, scale, startValue) {\n  let value;\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n\nfunction _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n\nfunction _getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return _createBoundaryLine(boundary, line);\n}\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n  if (isNumberFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n  return null;\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  _willRender() {\n    return !!this.opacity;\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    adapter.init(opts);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  afterAutoSkip() {\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}