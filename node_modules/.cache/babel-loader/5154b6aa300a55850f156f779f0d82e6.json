{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import CustomInput from\"components/CustomInput/CustomInput.js\";export default function InputEmail(props){const[email,setEmail]=useState(props.valor);const[validate,setValidate]=useState(true);const actualizar=value=>{if(/^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.([a-zA-Z]{2,4})+$/.test(email)){setValidate(false);setEmail(value);props.indexArray===-1?props.update(props.index,value):props.update(props.indexArray,props.index,value);}else{setEmail(value);}};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(CustomInput,{labelText:props.nombre,id:props.nombre,formControlProps:{fullWidth:true,required:true},inputProps:{type:\"text\",onChange:e=>actualizar(e.target.value),value:email}}),validate&&/*#__PURE__*/React.createElement(\"span\",{style:{color:\"red\"}},\"El correo se encuentra mal escrito.\"));}","map":{"version":3,"names":["React","useState","useEffect","CustomInput","InputEmail","props","email","setEmail","valor","validate","setValidate","actualizar","value","test","indexArray","update","index","createElement","labelText","nombre","id","formControlProps","fullWidth","required","inputProps","type","onChange","e","target","style","color"],"sources":["C:/Users/HUAWEI/Documents/GitHub/SinfonyPlataforma/src/views/Components/ComponetsForm/inputEmail.js"],"sourcesContent":["\r\nimport React, { useState, useEffect } from \"react\";\r\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\r\n\r\nexport default function InputEmail(props) {\r\n\r\n    const [email, setEmail] = useState(props.valor);\r\n    const [validate, setValidate] = useState(true);\r\n\r\n    const actualizar = (value) => {\r\n        if (/^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.([a-zA-Z]{2,4})+$/.test(email)) {\r\n            setValidate(false)\r\n            setEmail(value);\r\n            props.indexArray === -1 ? props.update(props.index, value) : props.update(props.indexArray,props.index, value)\r\n            \r\n        } else {\r\n            setEmail(value);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <CustomInput\r\n                labelText={props.nombre}\r\n                id={props.nombre}\r\n                formControlProps={{\r\n                    fullWidth: true,\r\n                    required: true,\r\n                }}\r\n                inputProps={{\r\n                    type: \"text\",\r\n                    onChange: (e) => actualizar(e.target.value),\r\n                    value: email,\r\n                }}\r\n            />\r\n            {validate && <span style={{ color: \"red\" }} >El correo se encuentra mal escrito.</span>}\r\n        </div>\r\n    )\r\n\r\n}"],"mappings":"AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,WAAW,KAAM,uCAAuC,CAE/D,cAAe,SAAS,CAAAC,UAAUA,CAACC,KAAK,CAAE,CAEtC,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGN,QAAQ,CAACI,KAAK,CAACG,KAAK,CAAC,CAC/C,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGT,QAAQ,CAAC,IAAI,CAAC,CAE9C,KAAM,CAAAU,UAAU,CAAIC,KAAK,EAAK,CAC1B,GAAI,oDAAoD,CAACC,IAAI,CAACP,KAAK,CAAC,CAAE,CAClEI,WAAW,CAAC,KAAK,CAAC,CAClBH,QAAQ,CAACK,KAAK,CAAC,CACfP,KAAK,CAACS,UAAU,GAAK,CAAC,CAAC,CAAGT,KAAK,CAACU,MAAM,CAACV,KAAK,CAACW,KAAK,CAAEJ,KAAK,CAAC,CAAGP,KAAK,CAACU,MAAM,CAACV,KAAK,CAACS,UAAU,CAACT,KAAK,CAACW,KAAK,CAAEJ,KAAK,CAAC,CAElH,CAAC,IAAM,CACHL,QAAQ,CAACK,KAAK,CAAC,CACnB,CACJ,CAAC,CAED,mBACIZ,KAAA,CAAAiB,aAAA,yBACIjB,KAAA,CAAAiB,aAAA,CAACd,WAAW,EACRe,SAAS,CAAEb,KAAK,CAACc,MAAO,CACxBC,EAAE,CAAEf,KAAK,CAACc,MAAO,CACjBE,gBAAgB,CAAE,CACdC,SAAS,CAAE,IAAI,CACfC,QAAQ,CAAE,IACd,CAAE,CACFC,UAAU,CAAE,CACRC,IAAI,CAAE,MAAM,CACZC,QAAQ,CAAGC,CAAC,EAAKhB,UAAU,CAACgB,CAAC,CAACC,MAAM,CAAChB,KAAK,CAAC,CAC3CA,KAAK,CAAEN,KACX,CAAE,CACL,CAAC,CACDG,QAAQ,eAAIT,KAAA,CAAAiB,aAAA,SAAMY,KAAK,CAAE,CAAEC,KAAK,CAAE,KAAM,CAAE,EAAE,qCAAyC,CACrF,CAAC,CAGd","ignoreList":[]},"metadata":{},"sourceType":"module"}