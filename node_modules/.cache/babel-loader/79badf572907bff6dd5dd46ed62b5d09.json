{"ast":null,"code":"import { palabras } from '../ValoresDefecto/palabras';\n\n//Se tiene para el texto que se va a imprimir se acorde al campo que se escribio en la plantilla\n\nexport default function CambiarVocabulario(props) {\n  var found = props.found;\n  console.log(props.found.slice(3, -3).split(':')[0]);\n  var palabra = props.found.slice(3, -3).split(':')[0];\n  var texto = props.texto;\n  var genero = props.genero;\n  var cantidad = props.cantidad;\n  var nuevoTexto = '';\n  console.log(\"texto\");\n  console.log(texto);\n  palabras.map(function (item, index) {\n    if (item.name === palabra) {\n      if (item.tipo === 'cantidad') {\n        if (cantidad === 1) {\n          nuevoTexto = texto.replace(found, item.singular);\n        } else if (cantidad > 1) {\n          nuevoTexto = texto.replace(found, item.plural);\n        }\n      } else if (item.tipo === 'generoCantidad') {\n        if (cantidad === 1 && genero === 'Masculino') {\n          nuevoTexto = texto.replace(found, item.singularM);\n        }\n        if (cantidad === 1 && genero === 'Femenino') {\n          nuevoTexto = texto.replace(found, item.singularF);\n        }\n        if (cantidad > 1 && genero === 'Masculino') {\n          nuevoTexto = texto.replace(found, item.pluralM);\n        }\n        if (cantidad > 1 && genero === 'Femenino') {\n          nuevoTexto = texto.replace(found, item.pluralF);\n        }\n      }\n    }\n  });\n  console.log(nuevoTexto);\n  return nuevoTexto;\n}","map":{"version":3,"names":["palabras","CambiarVocabulario","props","found","console","log","slice","split","palabra","texto","genero","cantidad","nuevoTexto","map","item","index","name","tipo","replace","singular","plural","singularM","singularF","pluralM","pluralF"],"sources":["C:/Users/HUAWEI/Documents/GitHub/SinfonyPlataforma/src/views/Components/Digitacion/CambiarVocabulario.js"],"sourcesContent":["import {palabras} from '../ValoresDefecto/palabras'\r\n\r\n\r\n//Se tiene para el texto que se va a imprimir se acorde al campo que se escribio en la plantilla\r\n\r\nexport default function CambiarVocabulario(props) {\r\n    let found = props.found;\r\n    console.log(props.found.slice(3, -3).split(':')[0])\r\n    let palabra = props.found.slice(3, -3).split(':')[0];\r\n    let texto = props.texto;\r\n    let genero = props.genero;\r\n    let cantidad = props.cantidad;\r\n    let nuevoTexto = '';\r\n\r\n    console.log(\"texto\")\r\n    console.log(texto)\r\n    palabras.map((item, index) => {\r\n        if (item.name === palabra) {\r\n            if (item.tipo === 'cantidad') {\r\n                if (cantidad === 1) {\r\n                    nuevoTexto = texto.replace(found, item.singular);\r\n                } else if (cantidad > 1) {\r\n                    nuevoTexto = texto.replace(found, item.plural);\r\n                }\r\n            } else if (item.tipo === 'generoCantidad') {\r\n                if (cantidad === 1 && genero === 'Masculino') {\r\n                    nuevoTexto = texto.replace(found, item.singularM);\r\n                }\r\n                if (cantidad === 1 && genero === 'Femenino') {\r\n                    nuevoTexto = texto.replace(found, item.singularF);\r\n                }\r\n                if (cantidad > 1 && genero === 'Masculino') {\r\n                    nuevoTexto = texto.replace(found, item.pluralM);\r\n                }\r\n                if (cantidad > 1 && genero === 'Femenino') {\r\n                    nuevoTexto = texto.replace(found, item.pluralF);\r\n                }\r\n\r\n            }\r\n        }\r\n    })\r\n    console.log(nuevoTexto);\r\n    return (nuevoTexto)\r\n\r\n}\r\n"],"mappings":"AAAA,SAAQA,QAAQ,QAAO,4BAA4B;;AAGnD;;AAEA,eAAe,SAASC,kBAAkBA,CAACC,KAAK,EAAE;EAC9C,IAAIC,KAAK,GAAGD,KAAK,CAACC,KAAK;EACvBC,OAAO,CAACC,GAAG,CAACH,KAAK,CAACC,KAAK,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACnD,IAAIC,OAAO,GAAGN,KAAK,CAACC,KAAK,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACpD,IAAIE,KAAK,GAAGP,KAAK,CAACO,KAAK;EACvB,IAAIC,MAAM,GAAGR,KAAK,CAACQ,MAAM;EACzB,IAAIC,QAAQ,GAAGT,KAAK,CAACS,QAAQ;EAC7B,IAAIC,UAAU,GAAG,EAAE;EAEnBR,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;EACpBD,OAAO,CAACC,GAAG,CAACI,KAAK,CAAC;EAClBT,QAAQ,CAACa,GAAG,CAAC,UAACC,IAAI,EAAEC,KAAK,EAAK;IAC1B,IAAID,IAAI,CAACE,IAAI,KAAKR,OAAO,EAAE;MACvB,IAAIM,IAAI,CAACG,IAAI,KAAK,UAAU,EAAE;QAC1B,IAAIN,QAAQ,KAAK,CAAC,EAAE;UAChBC,UAAU,GAAGH,KAAK,CAACS,OAAO,CAACf,KAAK,EAAEW,IAAI,CAACK,QAAQ,CAAC;QACpD,CAAC,MAAM,IAAIR,QAAQ,GAAG,CAAC,EAAE;UACrBC,UAAU,GAAGH,KAAK,CAACS,OAAO,CAACf,KAAK,EAAEW,IAAI,CAACM,MAAM,CAAC;QAClD;MACJ,CAAC,MAAM,IAAIN,IAAI,CAACG,IAAI,KAAK,gBAAgB,EAAE;QACvC,IAAIN,QAAQ,KAAK,CAAC,IAAID,MAAM,KAAK,WAAW,EAAE;UAC1CE,UAAU,GAAGH,KAAK,CAACS,OAAO,CAACf,KAAK,EAAEW,IAAI,CAACO,SAAS,CAAC;QACrD;QACA,IAAIV,QAAQ,KAAK,CAAC,IAAID,MAAM,KAAK,UAAU,EAAE;UACzCE,UAAU,GAAGH,KAAK,CAACS,OAAO,CAACf,KAAK,EAAEW,IAAI,CAACQ,SAAS,CAAC;QACrD;QACA,IAAIX,QAAQ,GAAG,CAAC,IAAID,MAAM,KAAK,WAAW,EAAE;UACxCE,UAAU,GAAGH,KAAK,CAACS,OAAO,CAACf,KAAK,EAAEW,IAAI,CAACS,OAAO,CAAC;QACnD;QACA,IAAIZ,QAAQ,GAAG,CAAC,IAAID,MAAM,KAAK,UAAU,EAAE;UACvCE,UAAU,GAAGH,KAAK,CAACS,OAAO,CAACf,KAAK,EAAEW,IAAI,CAACU,OAAO,CAAC;QACnD;MAEJ;IACJ;EACJ,CAAC,CAAC;EACFpB,OAAO,CAACC,GAAG,CAACO,UAAU,CAAC;EACvB,OAAQA,UAAU;AAEtB","ignoreList":[]},"metadata":{},"sourceType":"module"}