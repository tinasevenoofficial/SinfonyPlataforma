{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\HUAWEI\\\\Documents\\\\GitHub\\\\SinfonyPlataforma\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"C:\\\\Users\\\\HUAWEI\\\\Documents\\\\GitHub\\\\SinfonyPlataforma\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\Users\\\\HUAWEI\\\\Documents\\\\GitHub\\\\SinfonyPlataforma\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { useCallback, useState } from 'react';\nvar defaultOptions = {\n  key: 'id'\n};\nvar useCRUD = function useCRUD() {\n  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultOptions,\n    key = _ref.key;\n  var _useState = useState(initialState),\n    _useState2 = _slicedToArray(_useState, 2),\n    fields = _useState2[0],\n    reset = _useState2[1];\n  var update = useCallback(function (id, data) {\n    reset(function (beforeData) {\n      var copy = _toConsumableArray(beforeData);\n      var index = copy.findIndex(function (item) {\n        return item[key] === id;\n      });\n      if (index !== -1) copy[index] = _objectSpread(_objectSpread({}, copy[index]), data);\n      return copy;\n    });\n  }, []);\n  var append = useCallback(function (data) {\n    reset(function (beforeData) {\n      var copy = [].concat(_toConsumableArray(beforeData), [data]);\n      return copy;\n    });\n  }, []);\n  var remove = useCallback(function (id) {\n    reset(function (beforeData) {\n      var copy = _toConsumableArray(beforeData);\n      var index = copy.findIndex(function (item) {\n        return item[key] === id;\n      });\n      copy.splice(index, 1);\n      return copy;\n    });\n  }, []);\n  var replace = useCallback(function (list) {\n    reset(list);\n  }, []);\n  return {\n    fields: fields,\n    reset: reset,\n    append: append,\n    update: update,\n    remove: remove,\n    replace: replace\n  };\n};\nexport default useCRUD;","map":{"version":3,"names":["useCallback","useState","defaultOptions","key","useCRUD","initialState","arguments","length","undefined","_ref","_useState","_useState2","_slicedToArray","fields","reset","update","id","data","beforeData","copy","_toConsumableArray","index","findIndex","item","_objectSpread","append","concat","remove","splice","replace","list"],"sources":["C:/Users/HUAWEI/Documents/GitHub/SinfonyPlataforma/src/hooks/useCRUD.js"],"sourcesContent":["import { useCallback, useState } from 'react'\r\n\r\nconst defaultOptions = { key: 'id' }\r\n\r\nconst useCRUD = (initialState = [], { key } = defaultOptions) => {\r\n  const [fields, reset] = useState(initialState)\r\n\r\n  const update = useCallback((id, data) => {\r\n    reset(beforeData => {\r\n      const copy = [...beforeData]\r\n      const index = copy.findIndex(item => item[key] === id)\r\n      if (index !== -1) copy[index] = { ...copy[index], ...data }\r\n      return copy\r\n    })\r\n  }, [])\r\n\r\n  const append = useCallback(data => {\r\n    reset(beforeData => {\r\n      const copy = [...beforeData, data]\r\n      return copy\r\n    })\r\n  }, [])\r\n\r\n  const remove = useCallback(id => {\r\n    reset(beforeData => {\r\n      const copy = [...beforeData]\r\n      const index = copy.findIndex(item => item[key] === id)\r\n      copy.splice(index, 1)\r\n      return copy\r\n    })\r\n  }, [])\r\n\r\n  const replace = useCallback(list => {\r\n    reset(list)\r\n  }, [])\r\n\r\n  return { fields, reset, append, update, remove, replace }\r\n}\r\n\r\nexport default useCRUD\r\n"],"mappings":";;;AAAA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAE7C,IAAMC,cAAc,GAAG;EAAEC,GAAG,EAAE;AAAK,CAAC;AAEpC,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAoD;EAAA,IAAhDC,YAAY,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EAAA,IAAAG,IAAA,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAYJ,cAAc;IAAtBC,GAAG,GAAAM,IAAA,CAAHN,GAAG;EACvC,IAAAO,SAAA,GAAwBT,QAAQ,CAACI,YAAY,CAAC;IAAAM,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvCG,MAAM,GAAAF,UAAA;IAAEG,KAAK,GAAAH,UAAA;EAEpB,IAAMI,MAAM,GAAGf,WAAW,CAAC,UAACgB,EAAE,EAAEC,IAAI,EAAK;IACvCH,KAAK,CAAC,UAAAI,UAAU,EAAI;MAClB,IAAMC,IAAI,GAAAC,kBAAA,CAAOF,UAAU,CAAC;MAC5B,IAAMG,KAAK,GAAGF,IAAI,CAACG,SAAS,CAAC,UAAAC,IAAI;QAAA,OAAIA,IAAI,CAACpB,GAAG,CAAC,KAAKa,EAAE;MAAA,EAAC;MACtD,IAAIK,KAAK,KAAK,CAAC,CAAC,EAAEF,IAAI,CAACE,KAAK,CAAC,GAAAG,aAAA,CAAAA,aAAA,KAAQL,IAAI,CAACE,KAAK,CAAC,GAAKJ,IAAI,CAAE;MAC3D,OAAOE,IAAI;IACb,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMM,MAAM,GAAGzB,WAAW,CAAC,UAAAiB,IAAI,EAAI;IACjCH,KAAK,CAAC,UAAAI,UAAU,EAAI;MAClB,IAAMC,IAAI,MAAAO,MAAA,CAAAN,kBAAA,CAAOF,UAAU,IAAED,IAAI,EAAC;MAClC,OAAOE,IAAI;IACb,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMQ,MAAM,GAAG3B,WAAW,CAAC,UAAAgB,EAAE,EAAI;IAC/BF,KAAK,CAAC,UAAAI,UAAU,EAAI;MAClB,IAAMC,IAAI,GAAAC,kBAAA,CAAOF,UAAU,CAAC;MAC5B,IAAMG,KAAK,GAAGF,IAAI,CAACG,SAAS,CAAC,UAAAC,IAAI;QAAA,OAAIA,IAAI,CAACpB,GAAG,CAAC,KAAKa,EAAE;MAAA,EAAC;MACtDG,IAAI,CAACS,MAAM,CAACP,KAAK,EAAE,CAAC,CAAC;MACrB,OAAOF,IAAI;IACb,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMU,OAAO,GAAG7B,WAAW,CAAC,UAAA8B,IAAI,EAAI;IAClChB,KAAK,CAACgB,IAAI,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEjB,MAAM,EAANA,MAAM;IAAEC,KAAK,EAALA,KAAK;IAAEW,MAAM,EAANA,MAAM;IAAEV,MAAM,EAANA,MAAM;IAAEY,MAAM,EAANA,MAAM;IAAEE,OAAO,EAAPA;EAAQ,CAAC;AAC3D,CAAC;AAED,eAAezB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}