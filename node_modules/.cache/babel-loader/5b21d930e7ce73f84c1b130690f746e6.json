{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\HUAWEI\\\\Documents\\\\GitHub\\\\SinfonyPlataforma\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\HUAWEI\\\\Documents\\\\GitHub\\\\SinfonyPlataforma\\\\src\\\\views\\\\Components\\\\ComponetsForm\\\\inputTipoDocNum.js\";\nimport React, { useState } from \"react\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nexport default function InputTipoDocNum(props) {\n  var _useState = useState(props.valor),\n    _useState2 = _slicedToArray(_useState, 2),\n    valor = _useState2[0],\n    setValor = _useState2[1];\n  var actualizar = function actualizar(value) {\n    console.log(value);\n    setValor(value);\n    props.indexArray === -1 ? props.update(props.index, value) : props.update(props.indexArray, props.index, value);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CustomInput, {\n    labelText: \"\",\n    id: props.nombre,\n    formControlProps: {\n      fullWidth: true,\n      required: true\n    },\n    inputProps: {\n      type: 'number',\n      onChange: function onChange(e) {\n        return actualizar(e.target.value);\n      },\n      value: valor\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"names":["React","useState","CustomInput","InputTipoDocNum","props","_useState","valor","_useState2","_slicedToArray","setValor","actualizar","value","console","log","indexArray","update","index","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","labelText","id","nombre","formControlProps","fullWidth","required","inputProps","type","onChange","e","target"],"sources":["C:/Users/HUAWEI/Documents/GitHub/SinfonyPlataforma/src/views/Components/ComponetsForm/inputTipoDocNum.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\r\n\r\nexport default function InputTipoDocNum(props) {\r\n\r\n    const [valor, setValor] = useState(props.valor);\r\n\r\n    const actualizar = (value) => {\r\n        console.log(value)\r\n        setValor(value);\r\n        props.indexArray === -1 ? props.update(props.index, value) : props.update(props.indexArray,props.index, value)\r\n    }\r\n\r\n  return (\r\n        <div>\r\n            <CustomInput\r\n                labelText=\"\"\r\n                id={props.nombre}\r\n                formControlProps={{\r\n                    fullWidth: true,\r\n                    required: true,\r\n                }}\r\n                inputProps={{\r\n                    type: 'number',\r\n                    onChange: (e) => actualizar(e.target.value),\r\n                    value: valor,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,uCAAuC;AAE/D,eAAe,SAASC,eAAeA,CAACC,KAAK,EAAE;EAE3C,IAAAC,SAAA,GAA0BJ,QAAQ,CAACG,KAAK,CAACE,KAAK,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAAxCC,KAAK,GAAAC,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EAEtB,IAAMG,UAAU,GAAG,SAAbA,UAAUA,CAAIC,KAAK,EAAK;IAC1BC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClBF,QAAQ,CAACE,KAAK,CAAC;IACfP,KAAK,CAACU,UAAU,KAAK,CAAC,CAAC,GAAGV,KAAK,CAACW,MAAM,CAACX,KAAK,CAACY,KAAK,EAAEL,KAAK,CAAC,GAAGP,KAAK,CAACW,MAAM,CAACX,KAAK,CAACU,UAAU,EAACV,KAAK,CAACY,KAAK,EAAEL,KAAK,CAAC;EAClH,CAAC;EAEH,oBACMX,KAAA,CAAAiB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACIvB,KAAA,CAAAiB,aAAA,CAACf,WAAW;IACRsB,SAAS,EAAC,EAAE;IACZC,EAAE,EAAErB,KAAK,CAACsB,MAAO;IACjBC,gBAAgB,EAAE;MACdC,SAAS,EAAE,IAAI;MACfC,QAAQ,EAAE;IACd,CAAE;IACFC,UAAU,EAAE;MACRC,IAAI,EAAE,QAAQ;MACdC,QAAQ,EAAE,SAAVA,QAAQA,CAAGC,CAAC;QAAA,OAAKvB,UAAU,CAACuB,CAAC,CAACC,MAAM,CAACvB,KAAK,CAAC;MAAA;MAC3CA,KAAK,EAAEL;IACX,CAAE;IAAAY,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACL,CACA,CAAC;AAEd","ignoreList":[]},"metadata":{},"sourceType":"module"}