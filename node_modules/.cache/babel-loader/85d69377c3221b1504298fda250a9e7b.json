{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\HUAWEI\\\\Documents\\\\GitHub\\\\SinfonyPlataforma\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\HUAWEI\\\\Documents\\\\GitHub\\\\SinfonyPlataforma\\\\src\\\\views\\\\Components\\\\Digitacion\\\\JsonACampos.js\";\n/* eslint-disable */\nimport React from \"react\";\nimport InputUpdate from '../ComponetsForm/InputUpdate';\nimport InputTipoDoc from '../ComponetsForm/InputTipoDoc';\nimport InputNotaria from '../ComponetsForm/inputNotaria';\nimport InputPais from '../ComponetsForm/InputPais';\nimport InputEstadoCivil from '../ComponetsForm/InputEstadoCivil';\nimport InputSoloGenero from '../ComponetsForm/InputSoloGenero';\nimport InputNotaria2 from \"../ComponetsForm/InputNotaria2\";\nimport InputNotaria3 from \"../ComponetsForm/InputNotaria3\";\nimport InputEmail from \"../ComponetsForm/inputEmail\";\nimport InputTiempo from \"../ComponetsForm/InputTiempo\";\nimport InputTipoDocNum from \"../ComponetsForm/inputTipoDocNum\";\nimport InputFechaTiempo from \"../ComponetsForm/InputFechaTiempo\";\nimport InputTextArea from \"../ComponetsForm/InputTextarea\";\nimport InputArray from \"../ComponetsForm/InputArray\";\nimport InputMayorMenorEdad from \"../ComponetsForm/InputMayorMenorEdad\";\nexport default function jsonACampos(props) {\n  var _this = this;\n  var documentos = props.documentos ? props.documentos : [];\n  var esSubArray = props.subArray ? props.subArray : false;\n  var indexSubArray = props.subArray ? props.indexSubArray : -1;\n  console.log(\"documentos recibidos por Props en jsonACampos\");\n  console.log(props.documentos);\n  var fieldsForm = [];\n  var nombresCampos = [];\n\n  //actualizar campos con solo una variable\n  var update = function update(posicion) {\n    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    console.log(\"JSON que tiene todo\");\n    console.log(documentos);\n    var jsontemp = _toConsumableArray(documentos);\n    console.log(\"Actualizar campos\");\n    console.log(jsontemp[posicion]);\n    jsontemp[posicion].valor = value;\n    documentos = _toConsumableArray(jsontemp);\n  };\n  var updateArray = function updateArray(posicionArrayGeneral, posicionSubArray, value) {\n    console.log(\"JSON que tiene todo ARRAY\");\n    console.log(documentos);\n    var jsontemp = _toConsumableArray(documentos);\n    var subJsonTemp = _toConsumableArray(jsontemp[posicionArrayGeneral].valor);\n    console.log(\"Actualizar campos\");\n    console.log(subJsonTemp[posicionSubArray]);\n    subJsonTemp[posicionSubArray].valor = value;\n    documentos = _toConsumableArray(jsontemp);\n  };\n  var updateCantidadArray = function updateCantidadArray(posicionArrayGeneral, cantidad) {\n    console.log(\"JSON que tiene todo\");\n    console.log(documentos);\n    var jsontemp = _toConsumableArray(documentos);\n    console.log(\"Actualizar campos\");\n    console.log(jsontemp[posicionArrayGeneral]);\n    jsontemp[posicionArrayGeneral].cantidad = cantidad;\n    documentos = _toConsumableArray(jsontemp);\n  };\n  documentos.sort(function (a, b) {\n    return parseFloat(a.orden) - parseFloat(b.orden);\n  });\n  documentos.forEach(function (item, index) {\n    //Realizar nombres de campos presentables para mostrar en formulario\n    var nombreCampo = \"\";\n    if (/_/g.test(item.nombre)) {\n      nombreCampo = item.nombre.split('_')[0].substr(0, 1).toUpperCase() + item.nombre.split('_')[0].substr(1) + \" \" + item.nombre.split('_')[1];\n    } else {\n      nombreCampo = item.nombre.substr(0, 1).toUpperCase() + item.nombre.substr(1);\n    }\n\n    //Creaci√≥n de campos\n    var tipo = item.tipo.includes('invicible') ? item.tipo.replace(\"invicible\", \"\") : item.tipo;\n    console.log(tipo);\n    switch (tipo) {\n      case \"number\":\n        {\n          var found = nombresCampos.find(function (element) {\n            return element == item.nombre;\n          });\n          if (!found) {\n            nombresCampos.push(item.nombre.toString());\n            fieldsForm.push(/*#__PURE__*/React.createElement(\"div\", {\n              className: \"col-md-12\",\n              style: {\n                margin: '20px'\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 25\n              }\n            }, /*#__PURE__*/React.createElement(\"span\", {\n              style: {\n                fontSize: 16\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(\"b\", {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 60\n              }\n            }, nombreCampo, \":\")), /*#__PURE__*/React.createElement(InputUpdate, {\n              update: esSubArray ? props.updateArrayProps : update,\n              valor: item.valor,\n              nombre: item.nombre,\n              index: index,\n              tipo: \"number\",\n              indexArray: indexSubArray,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 29\n              }\n            })));\n          }\n          break;\n        }\n      case \"number1\":\n        {\n          var _found = nombresCampos.find(function (element) {\n            return element == item.nombre;\n          });\n          if (!_found) {\n            nombresCampos.push(item.nombre.toString());\n            fieldsForm.push(/*#__PURE__*/React.createElement(\"div\", {\n              className: \"col-md-12\",\n              style: {\n                margin: '20px'\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 25\n              }\n            }, /*#__PURE__*/React.createElement(\"span\", {\n              style: {\n                fontSize: 16\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(\"b\", {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 60\n              }\n            }, nombreCampo, \":\")), /*#__PURE__*/React.createElement(InputUpdate, {\n              update: esSubArray ? props.updateArrayProps : update,\n              valor: item.valor,\n              nombre: item.nombre,\n              index: index,\n              tipo: \"number\",\n              indexArray: indexSubArray,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 29\n              }\n            })));\n          }\n          break;\n        }\n      case \"text\":\n        {\n          var _found2 = nombresCampos.find(function (element) {\n            return element == item.nombre;\n          });\n          if (!_found2) {\n            nombresCampos.push(item.nombre);\n            fieldsForm.push(/*#__PURE__*/React.createElement(\"div\", {\n              className: \"col-md-12\",\n              style: {\n                margin: '20px'\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 25\n              }\n            }, /*#__PURE__*/React.createElement(\"span\", {\n              style: {\n                fontSize: 16\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(\"b\", {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 60\n              }\n            }, nombreCampo, \":\")), /*#__PURE__*/React.createElement(InputUpdate, {\n              update: esSubArray ? props.updateArrayProps : update,\n              valor: item.valor,\n              nombre: item.nombre,\n              index: index,\n              tipo: \"text\",\n              indexArray: indexSubArray,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 29\n              }\n            })));\n          }\n          break;\n        }\n      case \"email\":\n        {\n          var _found3 = nombresCampos.find(function (element) {\n            return element == item.nombre;\n          });\n          if (!_found3) {\n            nombresCampos.push(item.nombre);\n            fieldsForm.push(/*#__PURE__*/React.createElement(\"div\", {\n              className: \"col-md-12\",\n              style: {\n                margin: '20px'\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 25\n              }\n            }, /*#__PURE__*/React.createElement(\"span\", {\n              style: {\n                fontSize: 16\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(\"b\", {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 60\n              }\n            }, nombreCampo, \":\")), /*#__PURE__*/React.createElement(InputEmail, {\n              update: esSubArray ? props.updateArrayProps : update,\n              valor: item.valor,\n              nombre: item.nombre,\n              index: index,\n              indexArray: indexSubArray,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 29\n              }\n            })));\n          }\n          break;\n        }\n      case \"date\":\n        {\n          var _found4 = nombresCampos.find(function (element) {\n            return element == item.nombre;\n          });\n          if (!_found4) {\n            nombresCampos.push(item.nombre);\n            fieldsForm.push(/*#__PURE__*/React.createElement(\"div\", {\n              className: \"col-md-12\",\n              style: {\n                margin: '20px'\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 25\n              }\n            }, /*#__PURE__*/React.createElement(\"span\", {\n              style: {\n                fontSize: 16\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(\"b\", {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 60\n              }\n            }, nombreCampo, \":\")), /*#__PURE__*/React.createElement(InputUpdate, {\n              update: esSubArray ? props.updateArrayProps : update,\n              valor: item.valor,\n              nombre: item.nombre,\n              index: index,\n              tipo: \"date\",\n              indexArray: indexSubArray,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 29\n              }\n            })));\n          }\n          break;\n        }\n      case \"date1\":\n        {\n          var _found5 = nombresCampos.find(function (element) {\n            return element == item.nombre;\n          });\n          if (!_found5) {\n            nombresCampos.push(item.nombre);\n            fieldsForm.push(/*#__PURE__*/React.createElement(\"div\", {\n              className: \"col-md-12\",\n              style: {\n                margin: '20px'\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 25\n              }\n            }, /*#__PURE__*/React.createElement(\"span\", {\n              style: {\n                fontSize: 16\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(\"b\", {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 60\n              }\n            }, nombreCampo, \":\")), /*#__PURE__*/React.createElement(InputUpdate, {\n              update: esSubArray ? props.updateArrayProps : update,\n              valor: item.valor,\n              nombre: item.nombre,\n              index: index,\n              tipo: \"date\",\n              indexArray: indexSubArray,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 29\n              }\n            })));\n          }\n          break;\n        }\n      case \"date2\":\n        {\n          var _found6 = nombresCampos.find(function (element) {\n            return element == item.nombre;\n          });\n          if (!_found6) {\n            nombresCampos.push(item.nombre);\n            fieldsForm.push(/*#__PURE__*/React.createElement(\"div\", {\n              className: \"col-md-12\",\n              style: {\n                margin: '20px'\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 25\n              }\n            }, /*#__PURE__*/React.createElement(\"span\", {\n              style: {\n                fontSize: 16\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(\"b\", {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 60\n              }\n            }, nombreCampo, \":\")), /*#__PURE__*/React.createElement(InputUpdate, {\n              update: esSubArray ? props.updateArrayProps : update,\n              valor: item.valor,\n              nombre: item.nombre,\n              index: index,\n              tipo: \"date\",\n              indexArray: indexSubArray,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 29\n              }\n            })));\n          }\n          break;\n        }\n      case \"date3\":\n        {\n          var _found7 = nombresCampos.find(function (element) {\n            return element == item.nombre;\n          });\n          if (!_found7) {\n            nombresCampos.push(item.nombre);\n            fieldsForm.push(/*#__PURE__*/React.createElement(\"div\", {\n              className: \"col-md-12\",\n              style: {\n                margin: '20px'\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 25\n              }\n            }, /*#__PURE__*/React.createElement(\"span\", {\n              style: {\n                fontSize: 16\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(\"b\", {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 60\n              }\n            }, nombreCampo, \":\")), /*#__PURE__*/React.createElement(InputUpdate, {\n              update: esSubArray ? props.updateArrayProps : update,\n              valor: item.valor,\n              nombre: item.nombre,\n              index: index,\n              tipo: \"date\",\n              indexArray: indexSubArray,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 29\n              }\n            })));\n          }\n          break;\n        }\n      case \"date4\":\n        {\n          var _found8 = nombresCampos.find(function (element) {\n            return element == item.nombre;\n          });\n          if (!_found8) {\n            nombresCampos.push(item.nombre);\n            fieldsForm.push(/*#__PURE__*/React.createElement(\"div\", {\n              className: \"col-md-12\",\n              style: {\n                margin: '20px'\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 25\n              }\n            }, /*#__PURE__*/React.createElement(\"span\", {\n              style: {\n                fontSize: 16\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(\"b\", {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 60\n              }\n            }, nombreCampo, \":\")), /*#__PURE__*/React.createElement(InputUpdate, {\n              update: esSubArray ? props.updateArrayProps : update,\n              valor: item.valor,\n              nombre: item.nombre,\n              index: index,\n              tipo: \"date\",\n              indexArray: indexSubArray,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 29\n              }\n            })));\n          }\n          break;\n        }\n      case \"date5\":\n        {\n          var _found9 = nombresCampos.find(function (element) {\n            return element == item.nombre;\n          });\n          if (!_found9) {\n            nombresCampos.push(item.nombre);\n            fieldsForm.push(/*#__PURE__*/React.createElement(\"div\", {\n              className: \"col-md-12\",\n              style: {\n                margin: '20px'\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 25\n              }\n            }, /*#__PURE__*/React.createElement(\"span\", {\n              style: {\n                fontSize: 16\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(\"b\", {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 60\n              }\n            }, nombreCampo, \":\")), /*#__PURE__*/React.createElement(InputUpdate, {\n              update: esSubArray ? props.updateArrayProps : update,\n              valor: item.valor,\n              nombre: item.nombre,\n              index: index,\n              tipo: \"date\",\n              indexArray: indexSubArray,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 29\n              }\n            })));\n          }\n          break;\n        }\n      case \"date6\":\n        {\n          var _found10 = nombresCampos.find(function (element) {\n            return element == item.nombre;\n          });\n          if (!_found10) {\n            nombresCampos.push(item.nombre);\n            fieldsForm.push(/*#__PURE__*/React.createElement(\"div\", {\n              className: \"col-md-12\",\n              style: {\n                margin: '20px'\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 25\n              }\n            }, /*#__PURE__*/React.createElement(\"span\", {\n              style: {\n                fontSize: 16\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(\"b\", {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 60\n              }\n            }, nombreCampo, \":\")), /*#__PURE__*/React.createElement(InputFechaTiempo, {\n              update: esSubArray ? props.updateArrayProps : update,\n              valor: item.valor,\n              nombre: item.nombre,\n              index: index,\n              indexArray: indexSubArray,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 29\n              }\n            })));\n          }\n          break;\n        }\n      case \"tipoDoc\":\n        {\n          var _found11 = nombresCampos.find(function (element) {\n            return element == item.nombre;\n          });\n          if (!_found11) {\n            nombresCampos.push(item.nombre);\n            fieldsForm.push(/*#__PURE__*/React.createElement(\"div\", {\n              className: \"col-md-12\",\n              style: {\n                margin: '20px'\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 25\n              }\n            }, /*#__PURE__*/React.createElement(\"span\", {\n              style: {\n                fontSize: 16\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(\"b\", {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 60\n              }\n            }, nombreCampo, \":\")), /*#__PURE__*/React.createElement(InputTipoDoc, {\n              update: esSubArray ? props.updateArrayProps : update,\n              valor: item.valor,\n              nombre: item.nombre,\n              index: index,\n              indexArray: indexSubArray,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 29\n              }\n            })));\n          }\n          break;\n        }\n      case \"tipoDocCom\":\n        {\n          var _found12 = nombresCampos.find(function (element) {\n            return element == item.nombre;\n          });\n          if (!_found12) {\n            nombresCampos.push(item.nombre);\n            fieldsForm.push(/*#__PURE__*/React.createElement(\"div\", {\n              className: \"col-md-12\",\n              style: {\n                margin: '20px'\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 25\n              }\n            }, /*#__PURE__*/React.createElement(\"span\", {\n              style: {\n                fontSize: 16\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(\"b\", {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 60\n              }\n            }, nombreCampo, \":\")), /*#__PURE__*/React.createElement(InputTipoDoc, {\n              update: esSubArray ? props.updateArrayProps : update,\n              valor: item.valor,\n              nombre: item.nombre,\n              index: index,\n              indexArray: indexSubArray,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 29\n              }\n            })));\n          }\n          break;\n        }\n      case \"textarea\":\n        {\n          var _found13 = nombresCampos.find(function (element) {\n            return element == item.nombre;\n          });\n          if (!_found13) {\n            nombresCampos.push(item.nombre);\n            fieldsForm.push(/*#__PURE__*/React.createElement(\"div\", {\n              className: \"col-md-12\",\n              style: {\n                margin: '20px'\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 25\n              }\n            }, /*#__PURE__*/React.createElement(\"span\", {\n              style: {\n                fontSize: 16\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(\"b\", {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 60\n              }\n            }, nombreCampo, \":\")), /*#__PURE__*/React.createElement(InputTextArea, {\n              update: esSubArray ? props.updateArrayProps : update,\n              valor: item.valor,\n              nombre: item.nombre,\n              index: index,\n              indexArray: indexSubArray,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 29\n              }\n            })));\n          }\n          break;\n        }\n      case \"pais\":\n        {\n          var _found14 = nombresCampos.find(function (element) {\n            return element == item.nombre;\n          });\n          if (!_found14) {\n            nombresCampos.push(item.nombre);\n            fieldsForm.push(/*#__PURE__*/React.createElement(\"div\", {\n              className: \"col-md-12\",\n              style: {\n                margin: '20px'\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 25\n              }\n            }, /*#__PURE__*/React.createElement(\"span\", {\n              style: {\n                fontSize: 16\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(\"b\", {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 60\n              }\n            }, nombreCampo, \":\")), /*#__PURE__*/React.createElement(InputPais, {\n              update: esSubArray ? props.updateArrayProps : update,\n              valor: item.valor,\n              nombre: item.nombre,\n              index: index,\n              indexArray: indexSubArray,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 29\n              }\n            })));\n          }\n          break;\n        }\n      case \"tiempo\":\n        {\n          var _found15 = nombresCampos.find(function (element) {\n            return element == item.nombre;\n          });\n          if (!_found15) {\n            nombresCampos.push(item.nombre);\n            fieldsForm.push(/*#__PURE__*/React.createElement(\"div\", {\n              className: \"col-md-12\",\n              style: {\n                margin: '20px'\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 25\n              }\n            }, /*#__PURE__*/React.createElement(\"span\", {\n              style: {\n                fontSize: 16\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(\"b\", {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 60\n              }\n            }, nombreCampo, \":\")), /*#__PURE__*/React.createElement(InputTiempo, {\n              update: esSubArray ? props.updateArrayProps : update,\n              valor: item.valor,\n              nombre: item.nombre,\n              index: index,\n              indexArray: indexSubArray,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 29\n              }\n            })));\n          }\n          break;\n        }\n      case \"estadocivil\":\n        {\n          var _found16 = nombresCampos.find(function (element) {\n            return element == item.nombre;\n          });\n          if (!_found16) {\n            nombresCampos.push(item.nombre);\n            fieldsForm.push(/*#__PURE__*/React.createElement(\"div\", {\n              className: \"col-md-12\",\n              style: {\n                margin: '20px'\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 25\n              }\n            }, /*#__PURE__*/React.createElement(\"span\", {\n              style: {\n                fontSize: 16\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(\"b\", {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 60\n              }\n            }, nombreCampo, \":\")), /*#__PURE__*/React.createElement(InputEstadoCivil, {\n              update: esSubArray ? props.updateArrayProps : update,\n              valor: item.valor,\n              nombre: item.nombre,\n              index: index,\n              indexArray: indexSubArray,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 29\n              }\n            })));\n          }\n          break;\n        }\n      case \"sologenero\":\n        {\n          var _found17 = nombresCampos.find(function (element) {\n            return element == item.nombre;\n          });\n          if (!_found17) {\n            nombresCampos.push(item.nombre);\n            fieldsForm.push(/*#__PURE__*/React.createElement(\"div\", {\n              className: \"col-md-12\",\n              style: {\n                margin: '20px'\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 25\n              }\n            }, /*#__PURE__*/React.createElement(\"span\", {\n              style: {\n                fontSize: 16\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(\"b\", {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 60\n              }\n            }, nombreCampo, \":\")), /*#__PURE__*/React.createElement(InputSoloGenero, {\n              update: esSubArray ? props.updateArrayProps : update,\n              valor: item.valor,\n              nombre: item.nombre,\n              index: index,\n              indexArray: indexSubArray,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 29\n              }\n            })));\n          }\n          break;\n        }\n      case \"tipoDocNum\":\n        {\n          var _found18 = nombresCampos.find(function (element) {\n            return element == item.nombre;\n          });\n          if (!_found18) {\n            nombresCampos.push(item.nombre);\n            fieldsForm.push(/*#__PURE__*/React.createElement(\"div\", {\n              className: \"col-md-12\",\n              style: {\n                margin: '20px'\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 25\n              }\n            }, /*#__PURE__*/React.createElement(\"span\", {\n              style: {\n                fontSize: 16\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(\"b\", {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 60\n              }\n            }, nombreCampo, \":\")), /*#__PURE__*/React.createElement(InputTipoDocNum, {\n              update: esSubArray ? props.updateArrayProps : update,\n              valor: item.valor,\n              nombre: item.nombre,\n              index: index,\n              indexArray: indexSubArray,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 453,\n                columnNumber: 29\n              }\n            })));\n          }\n          break;\n        }\n      case \"notaria\":\n        {\n          var _found19 = nombresCampos.find(function (element) {\n            return element == item.nombre;\n          });\n          if (!_found19) {\n            nombresCampos.push(item.nombre);\n            fieldsForm.push(/*#__PURE__*/React.createElement(\"div\", {\n              className: \"col-md-12\",\n              style: {\n                margin: '20px'\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 25\n              }\n            }, /*#__PURE__*/React.createElement(InputNotaria, {\n              update: esSubArray ? props.updateArrayProps : update,\n              index: index,\n              indexArray: indexSubArray,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 29\n              }\n            })));\n          }\n          break;\n        }\n      case \"notaria1\":\n        {\n          var _found20 = nombresCampos.find(function (element) {\n            return element == item.nombre;\n          });\n          if (!_found20) {\n            nombresCampos.push(item.nombre);\n            fieldsForm.push(/*#__PURE__*/React.createElement(\"div\", {\n              className: \"col-md-12\",\n              style: {\n                margin: '20px'\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 488,\n                columnNumber: 25\n              }\n            }, /*#__PURE__*/React.createElement(InputNotaria2, {\n              update: esSubArray ? props.updateArrayProps : update,\n              index: index,\n              indexArray: indexSubArray,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 489,\n                columnNumber: 29\n              }\n            })));\n          }\n          break;\n        }\n      case \"notaria2\":\n        {\n          var _found21 = nombresCampos.find(function (element) {\n            return element == item.nombre;\n          });\n          if (!_found21) {\n            nombresCampos.push(item.nombre);\n            fieldsForm.push(/*#__PURE__*/React.createElement(\"div\", {\n              className: \"col-md-12\",\n              style: {\n                margin: '20px'\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 505,\n                columnNumber: 25\n              }\n            }, /*#__PURE__*/React.createElement(InputNotaria3, {\n              update: esSubArray ? props.updateArrayProps : update,\n              index: index,\n              indexArray: indexSubArray,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 506,\n                columnNumber: 29\n              }\n            })));\n          }\n          break;\n        }\n      case \"array\":\n        {\n          var _found22 = nombresCampos.find(function (element) {\n            return element == item.nombre;\n          });\n          if (!_found22) {\n            nombresCampos.push(item.nombre);\n            fieldsForm.push(/*#__PURE__*/React.createElement(\"div\", {\n              className: \"col-md-12\",\n              style: {\n                margin: '20px'\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 522,\n                columnNumber: 25\n              }\n            }, /*#__PURE__*/React.createElement(\"span\", {\n              style: {\n                fontSize: 16\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 523,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(\"b\", {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 523,\n                columnNumber: 60\n              }\n            }, nombreCampo, \":\")), /*#__PURE__*/React.createElement(InputArray, {\n              valor: item.valor,\n              camposOriginal: item.original,\n              nombre: item.nombre,\n              cantidad: item.cantidad,\n              index: index,\n              update: updateArray,\n              updateField: update,\n              updateCantidad: updateCantidadArray,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 524,\n                columnNumber: 29\n              }\n            })));\n          }\n          break;\n        }\n      case \"mayoromenor\":\n        {\n          var _found23 = nombresCampos.find(function (element) {\n            return element == item.nombre;\n          });\n          if (!_found23) {\n            nombresCampos.push(item.nombre);\n            fieldsForm.push(/*#__PURE__*/React.createElement(\"div\", {\n              className: \"col-md-12\",\n              style: {\n                margin: '20px'\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 545,\n                columnNumber: 25\n              }\n            }, /*#__PURE__*/React.createElement(\"span\", {\n              style: {\n                fontSize: 16\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 546,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(\"b\", {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 546,\n                columnNumber: 60\n              }\n            }, nombreCampo, \":\")), /*#__PURE__*/React.createElement(InputMayorMenorEdad, {\n              update: esSubArray ? props.updateArrayProps : update,\n              valor: item.valor,\n              nombre: item.nombre,\n              index: index,\n              indexArray: indexSubArray,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 547,\n                columnNumber: 29\n              }\n            })));\n          }\n          break;\n        }\n      default:\n        return \"Campo no reconocido\";\n    }\n  });\n  console.log(\"Campos finales en jsonAcampos\");\n  console.log(fieldsForm);\n  return [documentos, fieldsForm];\n}","map":{"version":3,"names":["React","InputUpdate","InputTipoDoc","InputNotaria","InputPais","InputEstadoCivil","InputSoloGenero","InputNotaria2","InputNotaria3","InputEmail","InputTiempo","InputTipoDocNum","InputFechaTiempo","InputTextArea","InputArray","InputMayorMenorEdad","jsonACampos","props","_this","documentos","esSubArray","subArray","indexSubArray","console","log","fieldsForm","nombresCampos","update","posicion","value","arguments","length","undefined","jsontemp","_toConsumableArray","valor","updateArray","posicionArrayGeneral","posicionSubArray","subJsonTemp","updateCantidadArray","cantidad","sort","a","b","parseFloat","orden","forEach","item","index","nombreCampo","test","nombre","split","substr","toUpperCase","tipo","includes","replace","found","find","element","push","toString","createElement","className","style","margin","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","updateArrayProps","indexArray","camposOriginal","original","updateField","updateCantidad"],"sources":["C:/Users/HUAWEI/Documents/GitHub/SinfonyPlataforma/src/views/Components/Digitacion/JsonACampos.js"],"sourcesContent":["/* eslint-disable */\r\nimport React from \"react\";\r\nimport InputUpdate from '../ComponetsForm/InputUpdate';\r\nimport InputTipoDoc from '../ComponetsForm/InputTipoDoc';\r\nimport InputNotaria from '../ComponetsForm/inputNotaria';\r\nimport InputPais from '../ComponetsForm/InputPais';\r\nimport InputEstadoCivil from '../ComponetsForm/InputEstadoCivil';\r\nimport InputSoloGenero from '../ComponetsForm/InputSoloGenero';\r\nimport InputNotaria2 from \"../ComponetsForm/InputNotaria2\";\r\nimport InputNotaria3 from \"../ComponetsForm/InputNotaria3\";\r\nimport InputEmail from \"../ComponetsForm/inputEmail\";\r\nimport InputTiempo from \"../ComponetsForm/InputTiempo\";\r\nimport InputTipoDocNum from \"../ComponetsForm/inputTipoDocNum\"\r\nimport InputFechaTiempo from \"../ComponetsForm/InputFechaTiempo\";\r\nimport InputTextArea from \"../ComponetsForm/InputTextarea\";\r\nimport InputArray from \"../ComponetsForm/InputArray\";\r\nimport InputMayorMenorEdad from \"../ComponetsForm/InputMayorMenorEdad\";\r\n\r\nexport default function jsonACampos(props) {\r\n\r\n    let documentos = props.documentos ? props.documentos : [];\r\n    let esSubArray = props.subArray ? props.subArray : false;\r\n    let indexSubArray = props.subArray ? props.indexSubArray : -1;\r\n    console.log(\"documentos recibidos por Props en jsonACampos\")\r\n    console.log(props.documentos)\r\n    let fieldsForm = [];\r\n    let nombresCampos = []\r\n\r\n    //actualizar campos con solo una variable\r\n    const update = (posicion, value = 0) => {\r\n        console.log(\"JSON que tiene todo\")\r\n        console.log(documentos)\r\n        let jsontemp = [...documentos];\r\n        console.log(\"Actualizar campos\");\r\n        console.log(jsontemp[posicion]);\r\n        jsontemp[posicion].valor = value;\r\n        documentos = [...jsontemp];\r\n    };\r\n\r\n    const updateArray = (posicionArrayGeneral, posicionSubArray, value) => {\r\n        console.log(\"JSON que tiene todo ARRAY\")\r\n        console.log(documentos)\r\n        let jsontemp = [...documentos];\r\n        let subJsonTemp = [...jsontemp[posicionArrayGeneral].valor]\r\n        console.log(\"Actualizar campos\");\r\n        console.log(subJsonTemp[posicionSubArray]);\r\n        subJsonTemp[posicionSubArray].valor = value;\r\n        documentos = [...jsontemp];\r\n    };\r\n\r\n    const updateCantidadArray = (posicionArrayGeneral, cantidad) => {\r\n        console.log(\"JSON que tiene todo\")\r\n        console.log(documentos)\r\n        let jsontemp = [...documentos];\r\n        console.log(\"Actualizar campos\");\r\n        console.log(jsontemp[posicionArrayGeneral]);\r\n        jsontemp[posicionArrayGeneral].cantidad = cantidad;\r\n        documentos = [...jsontemp];\r\n    }\r\n\r\n\r\n    documentos.sort((a, b) => parseFloat(a.orden) - parseFloat(b.orden));\r\n    documentos.forEach((item, index) => {\r\n\r\n        //Realizar nombres de campos presentables para mostrar en formulario\r\n        let nombreCampo = \"\";\r\n        if (/_/g.test(item.nombre)) {\r\n            nombreCampo = item.nombre.split('_')[0].substr(0, 1).toUpperCase() + item.nombre.split('_')[0].substr(1,) + \" \" + item.nombre.split('_')[1];\r\n        } else {\r\n            nombreCampo = item.nombre.substr(0, 1).toUpperCase() + item.nombre.substr(1,);\r\n        }\r\n\r\n        //Creaci√≥n de campos\r\n        let tipo = item.tipo.includes('invicible') ? item.tipo.replace(\"invicible\", \"\")  : item.tipo\r\n        console.log(tipo)\r\n        switch (tipo) {\r\n            case \"number\": {\r\n                let found = nombresCampos.find(element => element == item.nombre);\r\n                if (!found) {\r\n                    nombresCampos.push(item.nombre.toString());\r\n                    fieldsForm.push(\r\n                        <div className=\"col-md-12\" style={{ margin: '20px' }}>\r\n                            <span style={{ fontSize: 16 }}><b>{nombreCampo}:</b></span>\r\n                            <InputUpdate\r\n                                update={esSubArray ? props.updateArrayProps : update}\r\n                                valor={item.valor}\r\n                                nombre={item.nombre}\r\n                                index={index}\r\n                                tipo={\"number\"}\r\n                                indexArray={indexSubArray}\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n                break;\r\n            }\r\n\r\n            case \"number1\": {\r\n                let found = nombresCampos.find(element => element == item.nombre);\r\n                if (!found) {\r\n                    nombresCampos.push(item.nombre.toString());\r\n                    fieldsForm.push(\r\n                        <div className=\"col-md-12\" style={{ margin: '20px' }}>\r\n                            <span style={{ fontSize: 16 }}><b>{nombreCampo}:</b></span>\r\n                            <InputUpdate\r\n                                update={esSubArray ? props.updateArrayProps : update}\r\n                                valor={item.valor}\r\n                                nombre={item.nombre}\r\n                                index={index}\r\n                                tipo={\"number\"}\r\n                                indexArray={indexSubArray}\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n                break;\r\n            }\r\n\r\n            case \"text\": {\r\n                const found = nombresCampos.find(element => element == item.nombre);\r\n                if (!found) {\r\n                    nombresCampos.push(item.nombre);\r\n                    fieldsForm.push(\r\n                        <div className=\"col-md-12\" style={{ margin: '20px' }}>\r\n                            <span style={{ fontSize: 16 }}><b>{nombreCampo}:</b></span>\r\n                            <InputUpdate\r\n                                update={esSubArray ? props.updateArrayProps : update}\r\n                                valor={item.valor}\r\n                                nombre={item.nombre}\r\n                                index={index}\r\n                                tipo={\"text\"}\r\n                                indexArray={indexSubArray}\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n                break;\r\n            }\r\n\r\n            case \"email\": {\r\n                const found = nombresCampos.find(element => element == item.nombre);\r\n                if (!found) {\r\n                    nombresCampos.push(item.nombre);\r\n                    fieldsForm.push(\r\n                        <div className=\"col-md-12\" style={{ margin: '20px' }}>\r\n                            <span style={{ fontSize: 16 }}><b>{nombreCampo}:</b></span>\r\n                            <InputEmail\r\n                                update={esSubArray ? props.updateArrayProps : update}\r\n                                valor={item.valor}\r\n                                nombre={item.nombre}\r\n                                index={index}\r\n                                indexArray={indexSubArray}\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n                break;\r\n            }\r\n\r\n            case \"date\": {\r\n                const found = nombresCampos.find(element => element == item.nombre);\r\n                if (!found) {\r\n                    nombresCampos.push(item.nombre);\r\n                    fieldsForm.push(\r\n                        <div className=\"col-md-12\" style={{ margin: '20px' }}>\r\n                            <span style={{ fontSize: 16 }}><b>{nombreCampo}:</b></span>\r\n                            <InputUpdate\r\n                                update={esSubArray ? props.updateArrayProps : update}\r\n                                valor={item.valor}\r\n                                nombre={item.nombre}\r\n                                index={index}\r\n                                tipo={\"date\"}\r\n                                indexArray={indexSubArray}\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n                break;\r\n            }\r\n\r\n            case \"date1\": {\r\n                const found = nombresCampos.find(element => element == item.nombre);\r\n                if (!found) {\r\n                    nombresCampos.push(item.nombre);\r\n                    fieldsForm.push(\r\n                        <div className=\"col-md-12\" style={{ margin: '20px' }}>\r\n                            <span style={{ fontSize: 16 }}><b>{nombreCampo}:</b></span>\r\n                            <InputUpdate\r\n                                update={esSubArray ? props.updateArrayProps : update}\r\n                                valor={item.valor}\r\n                                nombre={item.nombre}\r\n                                index={index}\r\n                                tipo={\"date\"}\r\n                                indexArray={indexSubArray}\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n                break;\r\n            }\r\n\r\n            case \"date2\": {\r\n                const found = nombresCampos.find(element => element == item.nombre);\r\n                if (!found) {\r\n                    nombresCampos.push(item.nombre);\r\n                    fieldsForm.push(\r\n                        <div className=\"col-md-12\" style={{ margin: '20px' }}>\r\n                            <span style={{ fontSize: 16 }}><b>{nombreCampo}:</b></span>\r\n                            <InputUpdate\r\n                                update={esSubArray ? props.updateArrayProps : update}\r\n                                valor={item.valor}\r\n                                nombre={item.nombre}\r\n                                index={index}\r\n                                tipo={\"date\"}\r\n                                indexArray={indexSubArray}\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n                break;\r\n            }\r\n\r\n            case \"date3\": {\r\n                const found = nombresCampos.find(element => element == item.nombre);\r\n                if (!found) {\r\n                    nombresCampos.push(item.nombre);\r\n                    fieldsForm.push(\r\n                        <div className=\"col-md-12\" style={{ margin: '20px' }}>\r\n                            <span style={{ fontSize: 16 }}><b>{nombreCampo}:</b></span>\r\n                            <InputUpdate\r\n                                update={esSubArray ? props.updateArrayProps : update}\r\n                                valor={item.valor}\r\n                                nombre={item.nombre}\r\n                                index={index}\r\n                                tipo={\"date\"}\r\n                                indexArray={indexSubArray}\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n                break;\r\n            }\r\n\r\n            case \"date4\": {\r\n                const found = nombresCampos.find(element => element == item.nombre);\r\n                if (!found) {\r\n                    nombresCampos.push(item.nombre);\r\n                    fieldsForm.push(\r\n                        <div className=\"col-md-12\" style={{ margin: '20px' }}>\r\n                            <span style={{ fontSize: 16 }}><b>{nombreCampo}:</b></span>\r\n                            <InputUpdate\r\n                                update={esSubArray ? props.updateArrayProps : update}\r\n                                valor={item.valor}\r\n                                nombre={item.nombre}\r\n                                index={index}\r\n                                tipo={\"date\"}\r\n                                indexArray={indexSubArray}\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n                break;\r\n            }\r\n\r\n            case \"date5\": {\r\n                const found = nombresCampos.find(element => element == item.nombre);\r\n                if (!found) {\r\n                    nombresCampos.push(item.nombre);\r\n                    fieldsForm.push(\r\n                        <div className=\"col-md-12\" style={{ margin: '20px' }}>\r\n                            <span style={{ fontSize: 16 }}><b>{nombreCampo}:</b></span>\r\n                            <InputUpdate\r\n                                update={esSubArray ? props.updateArrayProps : update}\r\n                                valor={item.valor}\r\n                                nombre={item.nombre}\r\n                                index={index}\r\n                                tipo={\"date\"}\r\n                                indexArray={indexSubArray}\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n                break;\r\n            }\r\n\r\n            case \"date6\": {\r\n                const found = nombresCampos.find(element => element == item.nombre);\r\n                if (!found) {\r\n                    nombresCampos.push(item.nombre);\r\n                    fieldsForm.push(\r\n                        <div className=\"col-md-12\" style={{ margin: '20px' }}>\r\n                            <span style={{ fontSize: 16 }}><b>{nombreCampo}:</b></span>\r\n                            <InputFechaTiempo\r\n                                update={esSubArray ? props.updateArrayProps : update}\r\n                                valor={item.valor}\r\n                                nombre={item.nombre}\r\n                                index={index}\r\n                                indexArray={indexSubArray}\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n                break;\r\n            }\r\n\r\n            case \"tipoDoc\": {\r\n                const found = nombresCampos.find(element => element == item.nombre);\r\n                if (!found) {\r\n                    nombresCampos.push(item.nombre);\r\n                    fieldsForm.push(\r\n                        <div className=\"col-md-12\" style={{ margin: '20px' }}>\r\n                            <span style={{ fontSize: 16 }}><b>{nombreCampo}:</b></span>\r\n                            <InputTipoDoc\r\n                                update={esSubArray ? props.updateArrayProps : update}\r\n                                valor={item.valor}\r\n                                nombre={item.nombre}\r\n                                index={index}\r\n                                indexArray={indexSubArray}\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n                break;\r\n            }\r\n\r\n            case \"tipoDocCom\": {\r\n                const found = nombresCampos.find(element => element == item.nombre);\r\n                if (!found) {\r\n                    nombresCampos.push(item.nombre);\r\n                    fieldsForm.push(\r\n                        <div className=\"col-md-12\" style={{ margin: '20px' }}>\r\n                            <span style={{ fontSize: 16 }}><b>{nombreCampo}:</b></span>\r\n                            <InputTipoDoc\r\n                                update={esSubArray ? props.updateArrayProps : update}\r\n                                valor={item.valor}\r\n                                nombre={item.nombre}\r\n                                index={index}\r\n                                indexArray={indexSubArray}\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n                break;\r\n            }\r\n\r\n            case \"textarea\": {\r\n                const found = nombresCampos.find(element => element == item.nombre);\r\n                if (!found) {\r\n                    nombresCampos.push(item.nombre);\r\n                    fieldsForm.push(\r\n                        <div className=\"col-md-12\" style={{ margin: '20px' }}>\r\n                            <span style={{ fontSize: 16 }}><b>{nombreCampo}:</b></span>\r\n                            <InputTextArea\r\n                                update={esSubArray ? props.updateArrayProps : update}\r\n                                valor={item.valor}\r\n                                nombre={item.nombre}\r\n                                index={index}\r\n                                indexArray={indexSubArray}\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n                break;\r\n            }\r\n\r\n            case \"pais\": {\r\n                const found = nombresCampos.find(element => element == item.nombre);\r\n                if (!found) {\r\n                    nombresCampos.push(item.nombre);\r\n                    fieldsForm.push(\r\n                        <div className=\"col-md-12\" style={{ margin: '20px' }}>\r\n                            <span style={{ fontSize: 16 }}><b>{nombreCampo}:</b></span>\r\n                            <InputPais\r\n                                update={esSubArray ? props.updateArrayProps : update}\r\n                                valor={item.valor}\r\n                                nombre={item.nombre}\r\n                                index={index}\r\n                                indexArray={indexSubArray}\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n                break;\r\n            }\r\n\r\n            case \"tiempo\": {\r\n                const found = nombresCampos.find(element => element == item.nombre);\r\n                if (!found) {\r\n                    nombresCampos.push(item.nombre);\r\n                    fieldsForm.push(\r\n                        <div className=\"col-md-12\" style={{ margin: '20px' }}>\r\n                            <span style={{ fontSize: 16 }}><b>{nombreCampo}:</b></span>\r\n                            <InputTiempo\r\n                                update={esSubArray ? props.updateArrayProps : update}\r\n                                valor={item.valor}\r\n                                nombre={item.nombre}\r\n                                index={index}\r\n                                indexArray={indexSubArray}\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n                break;\r\n            }\r\n\r\n            case \"estadocivil\": {\r\n                const found = nombresCampos.find(element => element == item.nombre);\r\n                if (!found) {\r\n                    nombresCampos.push(item.nombre);\r\n                    fieldsForm.push(\r\n                        <div className=\"col-md-12\" style={{ margin: '20px' }}>\r\n                            <span style={{ fontSize: 16 }}><b>{nombreCampo}:</b></span>\r\n                            <InputEstadoCivil\r\n                                update={esSubArray ? props.updateArrayProps : update}\r\n                                valor={item.valor}\r\n                                nombre={item.nombre}\r\n                                index={index}\r\n                                indexArray={indexSubArray}\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n                break;\r\n            }\r\n\r\n            case \"sologenero\": {\r\n                const found = nombresCampos.find(element => element == item.nombre);\r\n                if (!found) {\r\n                    nombresCampos.push(item.nombre);\r\n                    fieldsForm.push(\r\n                        <div className=\"col-md-12\" style={{ margin: '20px' }}>\r\n                            <span style={{ fontSize: 16 }}><b>{nombreCampo}:</b></span>\r\n                            <InputSoloGenero\r\n                                update={esSubArray ? props.updateArrayProps : update}\r\n                                valor={item.valor}\r\n                                nombre={item.nombre}\r\n                                index={index}\r\n                                indexArray={indexSubArray}\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n                break;\r\n            }\r\n\r\n            case \"tipoDocNum\": {\r\n                const found = nombresCampos.find(element => element == item.nombre);\r\n                if (!found) {\r\n                    nombresCampos.push(item.nombre);\r\n                    fieldsForm.push(\r\n                        <div className=\"col-md-12\" style={{ margin: '20px' }}>\r\n                            <span style={{ fontSize: 16 }}><b>{nombreCampo}:</b></span>\r\n                            <InputTipoDocNum\r\n                                update={esSubArray ? props.updateArrayProps : update}\r\n                                valor={item.valor}\r\n                                nombre={item.nombre}\r\n                                index={index}\r\n                                indexArray={indexSubArray}\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n                break;\r\n            }\r\n\r\n            case \"notaria\": {\r\n                const found = nombresCampos.find(element => element == item.nombre);\r\n                if (!found) {\r\n                    nombresCampos.push(item.nombre);\r\n                    fieldsForm.push(\r\n                        <div className=\"col-md-12\" style={{ margin: '20px' }}>\r\n                            <InputNotaria\r\n                                update={esSubArray ? props.updateArrayProps : update}\r\n                                index={index}\r\n                                indexArray={indexSubArray}\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n                break;\r\n            }\r\n\r\n            case \"notaria1\": {\r\n                const found = nombresCampos.find(element => element == item.nombre);\r\n                if (!found) {\r\n                    nombresCampos.push(item.nombre);\r\n                    fieldsForm.push(\r\n                        <div className=\"col-md-12\" style={{ margin: '20px' }}>\r\n                            <InputNotaria2\r\n                                update={esSubArray ? props.updateArrayProps : update}\r\n                                index={index}\r\n                                indexArray={indexSubArray}\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n                break;\r\n            }\r\n\r\n            case \"notaria2\": {\r\n                const found = nombresCampos.find(element => element == item.nombre);\r\n                if (!found) {\r\n                    nombresCampos.push(item.nombre);\r\n                    fieldsForm.push(\r\n                        <div className=\"col-md-12\" style={{ margin: '20px' }}>\r\n                            <InputNotaria3\r\n                                update={esSubArray ? props.updateArrayProps : update}\r\n                                index={index}\r\n                                indexArray={indexSubArray}\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n                break;\r\n            }\r\n\r\n            case \"array\": {\r\n                const found = nombresCampos.find(element => element == item.nombre);\r\n                if (!found) {\r\n                    nombresCampos.push(item.nombre);\r\n                    fieldsForm.push(\r\n                        <div className=\"col-md-12\" style={{ margin: '20px' }}>\r\n                            <span style={{ fontSize: 16 }}><b>{nombreCampo}:</b></span>\r\n                            <InputArray\r\n                                valor={item.valor}\r\n                                camposOriginal={item.original}\r\n                                nombre={item.nombre}\r\n                                cantidad={item.cantidad}\r\n                                index={index}\r\n                                update={updateArray}\r\n                                updateField={update}\r\n                                updateCantidad={updateCantidadArray}\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n                break;\r\n            }\r\n\r\n            case \"mayoromenor\": {\r\n                const found = nombresCampos.find(element => element == item.nombre);\r\n                if (!found) {\r\n                    nombresCampos.push(item.nombre);\r\n                    fieldsForm.push(\r\n                        <div className=\"col-md-12\" style={{ margin: '20px' }}>\r\n                            <span style={{ fontSize: 16 }}><b>{nombreCampo}:</b></span>\r\n                            <InputMayorMenorEdad\r\n                                update={esSubArray ? props.updateArrayProps : update}\r\n                                valor={item.valor}\r\n                                nombre={item.nombre}\r\n                                index={index}\r\n                                indexArray={indexSubArray}\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n                break;\r\n            }\r\n\r\n\r\n            default:\r\n                return \"Campo no reconocido\";\r\n        }\r\n    });\r\n    console.log(\"Campos finales en jsonAcampos\");\r\n    console.log(fieldsForm);\r\n\r\n    return [documentos, fieldsForm]\r\n\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}