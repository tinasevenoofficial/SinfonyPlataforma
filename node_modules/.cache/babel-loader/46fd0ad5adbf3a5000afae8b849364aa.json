{"ast":null,"code":"import { yupResolver } from '@hookform/resolvers/yup';\nimport { array, object, mixed } from 'yup';\nexport var UploadFilesSchema = yupResolver(object().shape({\n  documentos: array().max(3, 'Solo puede subir 3 archivos como máximo, si desea más puede crear un archivo .zip/.rar').min(1, 'Debe seleccionar por lo menos un archivo con los siguientes formatos: Imagen (jpg, jpeg, gif, png), Texto (xls, xlsx, doc, docx, pdf), compresión de archivos (zip, rar). Si desea subir mas de 3 archivos debera crear un .zip/.rar y subirlo').of(mixed())\n  // TO DO: Validar formato de los documentos\n  // .test({\n  //   name: 'wrong-extension',\n  //   test: checkIfFilesAreCorrectType,\n  //   message: 'Formato incorrect',\n  //   exclusive: false\n  // }),\n}));\n\n// const checkIfFilesAreCorrectType = files => {\n//   if (files && files.lenght <= 3)\n//     return files.every(file => {\n//       if (!['application/pdf', 'image/jpeg', 'image/png'].includes(file.type)) return false\n//       return true\n//     })\n//   return false\n// }\n\nexport var defaultUploadFiles = {\n  documentos: []\n};","map":{"version":3,"names":["yupResolver","array","object","mixed","UploadFilesSchema","shape","documentos","max","min","of","defaultUploadFiles"],"sources":["C:/Users/HUAWEI/Documents/GitHub/SinfonyPlataforma/src/views/Process/CreateProcess/components/UploadFiles/UploadFiles.schema.js"],"sourcesContent":["import { yupResolver } from '@hookform/resolvers/yup'\r\nimport { array, object, mixed } from 'yup'\r\n\r\nexport const UploadFilesSchema = yupResolver(\r\n  object().shape({\r\n    documentos: array()\r\n      .max(3, 'Solo puede subir 3 archivos como máximo, si desea más puede crear un archivo .zip/.rar')\r\n      .min(\r\n        1,\r\n        'Debe seleccionar por lo menos un archivo con los siguientes formatos: Imagen (jpg, jpeg, gif, png), Texto (xls, xlsx, doc, docx, pdf), compresión de archivos (zip, rar). Si desea subir mas de 3 archivos debera crear un .zip/.rar y subirlo'\r\n      )\r\n      .of(mixed()),\r\n    // TO DO: Validar formato de los documentos\r\n    // .test({\r\n    //   name: 'wrong-extension',\r\n    //   test: checkIfFilesAreCorrectType,\r\n    //   message: 'Formato incorrect',\r\n    //   exclusive: false\r\n    // }),\r\n  })\r\n)\r\n\r\n// const checkIfFilesAreCorrectType = files => {\r\n//   if (files && files.lenght <= 3)\r\n//     return files.every(file => {\r\n//       if (!['application/pdf', 'image/jpeg', 'image/png'].includes(file.type)) return false\r\n//       return true\r\n//     })\r\n//   return false\r\n// }\r\n\r\nexport const defaultUploadFiles = {\r\n  documentos: [],\r\n}\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,yBAAyB;AACrD,SAASC,KAAK,EAAEC,MAAM,EAAEC,KAAK,QAAQ,KAAK;AAE1C,OAAO,IAAMC,iBAAiB,GAAGJ,WAAW,CAC1CE,MAAM,CAAC,CAAC,CAACG,KAAK,CAAC;EACbC,UAAU,EAAEL,KAAK,CAAC,CAAC,CAChBM,GAAG,CAAC,CAAC,EAAE,wFAAwF,CAAC,CAChGC,GAAG,CACF,CAAC,EACD,gPACF,CAAC,CACAC,EAAE,CAACN,KAAK,CAAC,CAAC;EACb;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC,CACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAMO,kBAAkB,GAAG;EAChCJ,UAAU,EAAE;AACd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}