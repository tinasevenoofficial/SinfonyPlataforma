{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\HUAWEI\\\\Documents\\\\GitHub\\\\SinfonyPlataforma\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\HUAWEI\\\\Documents\\\\GitHub\\\\SinfonyPlataforma\\\\src\\\\views\\\\Components\\\\ComponetsForm\\\\inputEmail.js\";\nimport React, { useState, useEffect } from \"react\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nexport default function InputEmail(props) {\n  var _useState = useState(props.valor),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    validate = _useState4[0],\n    setValidate = _useState4[1];\n  var actualizar = function actualizar(value) {\n    if (/^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.([a-zA-Z]{2,4})+$/.test(email)) {\n      setValidate(false);\n      setEmail(value);\n      props.indexArray === -1 ? props.update(props.index, value) : props.update(props.indexArray, props.index, value);\n    } else {\n      setEmail(value);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CustomInput, {\n    labelText: props.nombre,\n    id: props.nombre,\n    formControlProps: {\n      fullWidth: true,\n      required: true\n    },\n    inputProps: {\n      type: \"text\",\n      onChange: function onChange(e) {\n        return actualizar(e.target.value);\n      },\n      value: email\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }), validate && /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 26\n    }\n  }, \"El correo se encuentra mal escrito.\"));\n}","map":{"version":3,"names":["React","useState","useEffect","CustomInput","InputEmail","props","_useState","valor","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","validate","setValidate","actualizar","value","test","indexArray","update","index","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","labelText","nombre","id","formControlProps","fullWidth","required","inputProps","type","onChange","e","target","style","color"],"sources":["C:/Users/HUAWEI/Documents/GitHub/SinfonyPlataforma/src/views/Components/ComponetsForm/inputEmail.js"],"sourcesContent":["\r\nimport React, { useState, useEffect } from \"react\";\r\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\r\n\r\nexport default function InputEmail(props) {\r\n\r\n    const [email, setEmail] = useState(props.valor);\r\n    const [validate, setValidate] = useState(true);\r\n\r\n    const actualizar = (value) => {\r\n        if (/^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.([a-zA-Z]{2,4})+$/.test(email)) {\r\n            setValidate(false)\r\n            setEmail(value);\r\n            props.indexArray === -1 ? props.update(props.index, value) : props.update(props.indexArray,props.index, value)\r\n            \r\n        } else {\r\n            setEmail(value);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <CustomInput\r\n                labelText={props.nombre}\r\n                id={props.nombre}\r\n                formControlProps={{\r\n                    fullWidth: true,\r\n                    required: true,\r\n                }}\r\n                inputProps={{\r\n                    type: \"text\",\r\n                    onChange: (e) => actualizar(e.target.value),\r\n                    value: email,\r\n                }}\r\n            />\r\n            {validate && <span style={{ color: \"red\" }} >El correo se encuentra mal escrito.</span>}\r\n        </div>\r\n    )\r\n\r\n}"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,uCAAuC;AAE/D,eAAe,SAASC,UAAUA,CAACC,KAAK,EAAE;EAEtC,IAAAC,SAAA,GAA0BL,QAAQ,CAACI,KAAK,CAACE,KAAK,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAAxCI,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EACtB,IAAAI,UAAA,GAAgCX,QAAQ,CAAC,IAAI,CAAC;IAAAY,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAvCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAE5B,IAAMG,UAAU,GAAG,SAAbA,UAAUA,CAAIC,KAAK,EAAK;IAC1B,IAAI,oDAAoD,CAACC,IAAI,CAACR,KAAK,CAAC,EAAE;MAClEK,WAAW,CAAC,KAAK,CAAC;MAClBJ,QAAQ,CAACM,KAAK,CAAC;MACfZ,KAAK,CAACc,UAAU,KAAK,CAAC,CAAC,GAAGd,KAAK,CAACe,MAAM,CAACf,KAAK,CAACgB,KAAK,EAAEJ,KAAK,CAAC,GAAGZ,KAAK,CAACe,MAAM,CAACf,KAAK,CAACc,UAAU,EAACd,KAAK,CAACgB,KAAK,EAAEJ,KAAK,CAAC;IAElH,CAAC,MAAM;MACHN,QAAQ,CAACM,KAAK,CAAC;IACnB;EACJ,CAAC;EAED,oBACIjB,KAAA,CAAAsB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACI5B,KAAA,CAAAsB,aAAA,CAACnB,WAAW;IACR0B,SAAS,EAAExB,KAAK,CAACyB,MAAO;IACxBC,EAAE,EAAE1B,KAAK,CAACyB,MAAO;IACjBE,gBAAgB,EAAE;MACdC,SAAS,EAAE,IAAI;MACfC,QAAQ,EAAE;IACd,CAAE;IACFC,UAAU,EAAE;MACRC,IAAI,EAAE,MAAM;MACZC,QAAQ,EAAE,SAAVA,QAAQA,CAAGC,CAAC;QAAA,OAAKtB,UAAU,CAACsB,CAAC,CAACC,MAAM,CAACtB,KAAK,CAAC;MAAA;MAC3CA,KAAK,EAAEP;IACX,CAAE;IAAAa,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACL,CAAC,EACDd,QAAQ,iBAAId,KAAA,CAAAsB,aAAA;IAAMkB,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAM,CAAE;IAAAlB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAE,qCAAyC,CACrF,CAAC;AAGd","ignoreList":[]},"metadata":{},"sourceType":"module"}